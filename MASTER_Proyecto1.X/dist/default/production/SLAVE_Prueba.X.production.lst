

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Thu Sep 29 20:11:30 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.40
    51                           ; Generated 17/11/2021 GMT
    52                           ; 
    53                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F887 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0105                     	;# 
   149  0107                     	;# 
   150  0108                     	;# 
   151  0109                     	;# 
   152  010C                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0185                     	;# 
   158  0187                     	;# 
   159  0188                     	;# 
   160  0189                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009A                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  0105                     	;# 
   227  0107                     	;# 
   228  0108                     	;# 
   229  0109                     	;# 
   230  010C                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0185                     	;# 
   236  0187                     	;# 
   237  0188                     	;# 
   238  0189                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  008F                     	;# 
   286  0090                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  0105                     	;# 
   305  0107                     	;# 
   306  0108                     	;# 
   307  0109                     	;# 
   308  010C                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  0185                     	;# 
   314  0187                     	;# 
   315  0188                     	;# 
   316  0189                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  0000                     	;# 
   320  0001                     	;# 
   321  0002                     	;# 
   322  0003                     	;# 
   323  0004                     	;# 
   324  0005                     	;# 
   325  0006                     	;# 
   326  0007                     	;# 
   327  0008                     	;# 
   328  0009                     	;# 
   329  000A                     	;# 
   330  000B                     	;# 
   331  000C                     	;# 
   332  000D                     	;# 
   333  000E                     	;# 
   334  000E                     	;# 
   335  000F                     	;# 
   336  0010                     	;# 
   337  0011                     	;# 
   338  0012                     	;# 
   339  0013                     	;# 
   340  0014                     	;# 
   341  0015                     	;# 
   342  0015                     	;# 
   343  0016                     	;# 
   344  0017                     	;# 
   345  0018                     	;# 
   346  0019                     	;# 
   347  001A                     	;# 
   348  001B                     	;# 
   349  001B                     	;# 
   350  001C                     	;# 
   351  001D                     	;# 
   352  001E                     	;# 
   353  001F                     	;# 
   354  0081                     	;# 
   355  0085                     	;# 
   356  0086                     	;# 
   357  0087                     	;# 
   358  0088                     	;# 
   359  0089                     	;# 
   360  008C                     	;# 
   361  008D                     	;# 
   362  008E                     	;# 
   363  008F                     	;# 
   364  0090                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0094                     	;# 
   371  0095                     	;# 
   372  0096                     	;# 
   373  0097                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009A                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  009F                     	;# 
   382  0105                     	;# 
   383  0107                     	;# 
   384  0108                     	;# 
   385  0109                     	;# 
   386  010C                     	;# 
   387  010C                     	;# 
   388  010D                     	;# 
   389  010E                     	;# 
   390  010F                     	;# 
   391  0185                     	;# 
   392  0187                     	;# 
   393  0188                     	;# 
   394  0189                     	;# 
   395  018C                     	;# 
   396  018D                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  000E                     	;# 
   412  000E                     	;# 
   413  000F                     	;# 
   414  0010                     	;# 
   415  0011                     	;# 
   416  0012                     	;# 
   417  0013                     	;# 
   418  0014                     	;# 
   419  0015                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0017                     	;# 
   423  0018                     	;# 
   424  0019                     	;# 
   425  001A                     	;# 
   426  001B                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  001D                     	;# 
   430  001E                     	;# 
   431  001F                     	;# 
   432  0081                     	;# 
   433  0085                     	;# 
   434  0086                     	;# 
   435  0087                     	;# 
   436  0088                     	;# 
   437  0089                     	;# 
   438  008C                     	;# 
   439  008D                     	;# 
   440  008E                     	;# 
   441  008F                     	;# 
   442  0090                     	;# 
   443  0091                     	;# 
   444  0092                     	;# 
   445  0093                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009C                     	;# 
   457  009D                     	;# 
   458  009E                     	;# 
   459  009F                     	;# 
   460  0105                     	;# 
   461  0107                     	;# 
   462  0108                     	;# 
   463  0109                     	;# 
   464  010C                     	;# 
   465  010C                     	;# 
   466  010D                     	;# 
   467  010E                     	;# 
   468  010F                     	;# 
   469  0185                     	;# 
   470  0187                     	;# 
   471  0188                     	;# 
   472  0189                     	;# 
   473  018C                     	;# 
   474  018D                     	;# 
   475  0000                     	;# 
   476  0001                     	;# 
   477  0002                     	;# 
   478  0003                     	;# 
   479  0004                     	;# 
   480  0005                     	;# 
   481  0006                     	;# 
   482  0007                     	;# 
   483  0008                     	;# 
   484  0009                     	;# 
   485  000A                     	;# 
   486  000B                     	;# 
   487  000C                     	;# 
   488  000D                     	;# 
   489  000E                     	;# 
   490  000E                     	;# 
   491  000F                     	;# 
   492  0010                     	;# 
   493  0011                     	;# 
   494  0012                     	;# 
   495  0013                     	;# 
   496  0014                     	;# 
   497  0015                     	;# 
   498  0015                     	;# 
   499  0016                     	;# 
   500  0017                     	;# 
   501  0018                     	;# 
   502  0019                     	;# 
   503  001A                     	;# 
   504  001B                     	;# 
   505  001B                     	;# 
   506  001C                     	;# 
   507  001D                     	;# 
   508  001E                     	;# 
   509  001F                     	;# 
   510  0081                     	;# 
   511  0085                     	;# 
   512  0086                     	;# 
   513  0087                     	;# 
   514  0088                     	;# 
   515  0089                     	;# 
   516  008C                     	;# 
   517  008D                     	;# 
   518  008E                     	;# 
   519  008F                     	;# 
   520  0090                     	;# 
   521  0091                     	;# 
   522  0092                     	;# 
   523  0093                     	;# 
   524  0093                     	;# 
   525  0093                     	;# 
   526  0094                     	;# 
   527  0095                     	;# 
   528  0096                     	;# 
   529  0097                     	;# 
   530  0098                     	;# 
   531  0099                     	;# 
   532  009A                     	;# 
   533  009B                     	;# 
   534  009C                     	;# 
   535  009D                     	;# 
   536  009E                     	;# 
   537  009F                     	;# 
   538  0105                     	;# 
   539  0107                     	;# 
   540  0108                     	;# 
   541  0109                     	;# 
   542  010C                     	;# 
   543  010C                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  010F                     	;# 
   547  0185                     	;# 
   548  0187                     	;# 
   549  0188                     	;# 
   550  0189                     	;# 
   551  018C                     	;# 
   552  018D                     	;# 
   553  0000                     	;# 
   554  0001                     	;# 
   555  0002                     	;# 
   556  0003                     	;# 
   557  0004                     	;# 
   558  0005                     	;# 
   559  0006                     	;# 
   560  0007                     	;# 
   561  0008                     	;# 
   562  0009                     	;# 
   563  000A                     	;# 
   564  000B                     	;# 
   565  000C                     	;# 
   566  000D                     	;# 
   567  000E                     	;# 
   568  000E                     	;# 
   569  000F                     	;# 
   570  0010                     	;# 
   571  0011                     	;# 
   572  0012                     	;# 
   573  0013                     	;# 
   574  0014                     	;# 
   575  0015                     	;# 
   576  0015                     	;# 
   577  0016                     	;# 
   578  0017                     	;# 
   579  0018                     	;# 
   580  0019                     	;# 
   581  001A                     	;# 
   582  001B                     	;# 
   583  001B                     	;# 
   584  001C                     	;# 
   585  001D                     	;# 
   586  001E                     	;# 
   587  001F                     	;# 
   588  0081                     	;# 
   589  0085                     	;# 
   590  0086                     	;# 
   591  0087                     	;# 
   592  0088                     	;# 
   593  0089                     	;# 
   594  008C                     	;# 
   595  008D                     	;# 
   596  008E                     	;# 
   597  008F                     	;# 
   598  0090                     	;# 
   599  0091                     	;# 
   600  0092                     	;# 
   601  0093                     	;# 
   602  0093                     	;# 
   603  0093                     	;# 
   604  0094                     	;# 
   605  0095                     	;# 
   606  0096                     	;# 
   607  0097                     	;# 
   608  0098                     	;# 
   609  0099                     	;# 
   610  009A                     	;# 
   611  009B                     	;# 
   612  009C                     	;# 
   613  009D                     	;# 
   614  009E                     	;# 
   615  009F                     	;# 
   616  0105                     	;# 
   617  0107                     	;# 
   618  0108                     	;# 
   619  0109                     	;# 
   620  010C                     	;# 
   621  010C                     	;# 
   622  010D                     	;# 
   623  010E                     	;# 
   624  010F                     	;# 
   625  0185                     	;# 
   626  0187                     	;# 
   627  0188                     	;# 
   628  0189                     	;# 
   629  018C                     	;# 
   630  018D                     	;# 
   631  0000                     	;# 
   632  0001                     	;# 
   633  0002                     	;# 
   634  0003                     	;# 
   635  0004                     	;# 
   636  0005                     	;# 
   637  0006                     	;# 
   638  0007                     	;# 
   639  0008                     	;# 
   640  0009                     	;# 
   641  000A                     	;# 
   642  000B                     	;# 
   643  000C                     	;# 
   644  000D                     	;# 
   645  000E                     	;# 
   646  000E                     	;# 
   647  000F                     	;# 
   648  0010                     	;# 
   649  0011                     	;# 
   650  0012                     	;# 
   651  0013                     	;# 
   652  0014                     	;# 
   653  0015                     	;# 
   654  0015                     	;# 
   655  0016                     	;# 
   656  0017                     	;# 
   657  0018                     	;# 
   658  0019                     	;# 
   659  001A                     	;# 
   660  001B                     	;# 
   661  001B                     	;# 
   662  001C                     	;# 
   663  001D                     	;# 
   664  001E                     	;# 
   665  001F                     	;# 
   666  0081                     	;# 
   667  0085                     	;# 
   668  0086                     	;# 
   669  0087                     	;# 
   670  0088                     	;# 
   671  0089                     	;# 
   672  008C                     	;# 
   673  008D                     	;# 
   674  008E                     	;# 
   675  008F                     	;# 
   676  0090                     	;# 
   677  0091                     	;# 
   678  0092                     	;# 
   679  0093                     	;# 
   680  0093                     	;# 
   681  0093                     	;# 
   682  0094                     	;# 
   683  0095                     	;# 
   684  0096                     	;# 
   685  0097                     	;# 
   686  0098                     	;# 
   687  0099                     	;# 
   688  009A                     	;# 
   689  009B                     	;# 
   690  009C                     	;# 
   691  009D                     	;# 
   692  009E                     	;# 
   693  009F                     	;# 
   694  0105                     	;# 
   695  0107                     	;# 
   696  0108                     	;# 
   697  0109                     	;# 
   698  010C                     	;# 
   699  010C                     	;# 
   700  010D                     	;# 
   701  010E                     	;# 
   702  010F                     	;# 
   703  0185                     	;# 
   704  0187                     	;# 
   705  0188                     	;# 
   706  0189                     	;# 
   707  018C                     	;# 
   708  018D                     	;# 
   709  0000                     	;# 
   710  0001                     	;# 
   711  0002                     	;# 
   712  0003                     	;# 
   713  0004                     	;# 
   714  0005                     	;# 
   715  0006                     	;# 
   716  0007                     	;# 
   717  0008                     	;# 
   718  0009                     	;# 
   719  000A                     	;# 
   720  000B                     	;# 
   721  000C                     	;# 
   722  000D                     	;# 
   723  000E                     	;# 
   724  000E                     	;# 
   725  000F                     	;# 
   726  0010                     	;# 
   727  0011                     	;# 
   728  0012                     	;# 
   729  0013                     	;# 
   730  0014                     	;# 
   731  0015                     	;# 
   732  0015                     	;# 
   733  0016                     	;# 
   734  0017                     	;# 
   735  0018                     	;# 
   736  0019                     	;# 
   737  001A                     	;# 
   738  001B                     	;# 
   739  001B                     	;# 
   740  001C                     	;# 
   741  001D                     	;# 
   742  001E                     	;# 
   743  001F                     	;# 
   744  0081                     	;# 
   745  0085                     	;# 
   746  0086                     	;# 
   747  0087                     	;# 
   748  0088                     	;# 
   749  0089                     	;# 
   750  008C                     	;# 
   751  008D                     	;# 
   752  008E                     	;# 
   753  008F                     	;# 
   754  0090                     	;# 
   755  0091                     	;# 
   756  0092                     	;# 
   757  0093                     	;# 
   758  0093                     	;# 
   759  0093                     	;# 
   760  0094                     	;# 
   761  0095                     	;# 
   762  0096                     	;# 
   763  0097                     	;# 
   764  0098                     	;# 
   765  0099                     	;# 
   766  009A                     	;# 
   767  009B                     	;# 
   768  009C                     	;# 
   769  009D                     	;# 
   770  009E                     	;# 
   771  009F                     	;# 
   772  0105                     	;# 
   773  0107                     	;# 
   774  0108                     	;# 
   775  0109                     	;# 
   776  010C                     	;# 
   777  010C                     	;# 
   778  010D                     	;# 
   779  010E                     	;# 
   780  010F                     	;# 
   781  0185                     	;# 
   782  0187                     	;# 
   783  0188                     	;# 
   784  0189                     	;# 
   785  018C                     	;# 
   786  018D                     	;# 
   787                           
   788                           	psect	idataCOMMON
   789  07FE                     __pidataCOMMON:
   790                           
   791                           ;initializer for _cont
   792  07FE  3431               	retlw	49
   793                           
   794                           	psect	idataBANK0
   795  0F1C                     __pidataBANK0:
   796                           
   797                           ;initializer for _cont_mover2
   798  0F1C  3404               	retlw	4
   799                           
   800                           ;initializer for _cont_mover
   801  0F1D  3404               	retlw	4
   802                           
   803                           ;initializer for _cont_lcd
   804  0F1E  3432               	retlw	50
   805                           
   806                           ;initializer for _cont_100
   807  0F1F  340A               	retlw	10
   808  0015                     _CCPR1L	set	21
   809  0012                     _T2CONbits	set	18
   810  001D                     _CCP2CONbits	set	29
   811  001D                     _CCP2CON	set	29
   812  0017                     _CCP1CONbits	set	23
   813  0017                     _CCP1CON	set	23
   814  0013                     _SSPBUF	set	19
   815  0014                     _SSPCONbits	set	20
   816  0009                     _PORTEbits	set	9
   817  0005                     _PORTA	set	5
   818  0007                     _PORTC	set	7
   819  0008                     _PORTD	set	8
   820  001A                     _RCREG	set	26
   821  000C                     _PIR1bits	set	12
   822  0006                     _PORTB	set	6
   823  0006                     _PORTBbits	set	6
   824  0019                     _TXREG	set	25
   825  0018                     _RCSTAbits	set	24
   826  0001                     _TMR0	set	1
   827  000B                     _INTCONbits	set	11
   828  0049                     _RE1	set	73
   829  0092                     _PR2	set	146
   830  0085                     _TRISAbits	set	133
   831  0094                     _SSPSTATbits	set	148
   832  008C                     _PIE1bits	set	140
   833  0085                     _TRISA	set	133
   834  0086                     _TRISB	set	134
   835  0089                     _TRISE	set	137
   836  0087                     _TRISCbits	set	135
   837  0087                     _TRISC	set	135
   838  0088                     _TRISD	set	136
   839  009A                     _SPBRGH	set	154
   840  0099                     _SPBRG	set	153
   841  0098                     _TXSTAbits	set	152
   842  0081                     _OPTION_REGbits	set	129
   843  008F                     _OSCCONbits	set	143
   844  0189                     _ANSELH	set	393
   845  0188                     _ANSEL	set	392
   846  0187                     _BAUDCTLbits	set	391
   847                           
   848                           	psect	strings
   849  07B1                     __pstrings:
   850  07B1                     stringtab:
   851  07B1                     __stringtab:
   852  07B1                     stringcode:	
   853                           ;	String table - string pointers are 1 byte each
   854                           
   855  07B1                     stringdir:
   856  07B1  3007               	movlw	high stringdir
   857  07B2  008A               	movwf	10
   858  07B3  0804               	movf	4,w
   859  07B4  0A84               	incf	4,f
   860  07B5  0782               	addwf	2,f
   861  07B6                     __stringbase:
   862  07B6  3400               	retlw	0
   863  07B7                     __end_of__stringtab:
   864  07B7                     STR_1:
   865  07B7  3454               	retlw	84	;'T'
   866  07B8  3445               	retlw	69	;'E'
   867  07B9  344D               	retlw	77	;'M'
   868  07BA  3450               	retlw	80	;'P'
   869  07BB  3420               	retlw	32	;' '
   870  07BC  3420               	retlw	32	;' '
   871  07BD  344C               	retlw	76	;'L'
   872  07BE  3455               	retlw	85	;'U'
   873  07BF  3458               	retlw	88	;'X'
   874  07C0  3420               	retlw	32	;' '
   875  07C1  3420               	retlw	32	;' '
   876  07C2  3420               	retlw	32	;' '
   877  07C3  3420               	retlw	32	;' '
   878  07C4  3454               	retlw	84	;'T'
   879  07C5  3449               	retlw	73	;'I'
   880  07C6  344D               	retlw	77	;'M'
   881  07C7  3445               	retlw	69	;'E'
   882  07C8  3420               	retlw	32	;' '
   883  07C9  3420               	retlw	32	;' '
   884  07CA  3420               	retlw	32	;' '
   885  07CB  3444               	retlw	68	;'D'
   886  07CC  3449               	retlw	73	;'I'
   887  07CD  3453               	retlw	83	;'S'
   888  07CE  3454               	retlw	84	;'T'
   889  07CF  3400               	retlw	0
   890  07D0                     STR_4:
   891  07D0  3445               	retlw	69	;'E'
   892  07D1  3452               	retlw	82	;'R'
   893  07D2  3452               	retlw	82	;'R'
   894  07D3  344F               	retlw	79	;'O'
   895  07D4  3452               	retlw	82	;'R'
   896  07D5  3400               	retlw	0
   897  07D6                     STR_2:
   898  07D6  3420               	retlw	32	;' '
   899  07D7  3400               	retlw	0
   900  07D6                     
   901                           	psect	cinit
   902  0011                     start_initialization:	
   903                           ; #config settings
   904                           
   905  0011                     __initialization:
   906                           
   907                           ; Initialize objects allocated to BANK0
   908  0011  120A  158A  271C  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   909  0016  00D9               	movwf	__pdataBANK0& (0+127)
   910  0017  120A  158A  271D  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   911  001C  00DA               	movwf	(__pdataBANK0+1)& (0+127)
   912  001D  120A  158A  271E  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   913  0022  00DB               	movwf	(__pdataBANK0+2)& (0+127)
   914  0023  120A  158A  271F  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   915  0028  00DC               	movwf	(__pdataBANK0+3)& (0+127)
   916                           
   917                           ; Initialize objects allocated to COMMON
   918  0029  120A  118A  27FE  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   919  002E  00FD               	movwf	__pdataCOMMON& (0+127)
   920                           
   921                           ; Clear objects allocated to BANK0
   922  002F  1383               	bcf	3,7	;select IRP bank0
   923  0030  3020               	movlw	low __pbssBANK0
   924  0031  0084               	movwf	4
   925  0032  303E               	movlw	low (__pbssBANK0+30)
   926  0033  120A  158A  274D  120A  118A  	fcall	clear_ram0
   927                           
   928                           ; Clear objects allocated to COMMON
   929  0038  01FB               	clrf	__pbssCOMMON& (0+127)
   930  0039  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   931  003A                     end_of_initialization:	
   932                           ;End of C runtime variable initialization code
   933                           
   934  003A                     __end_of__initialization:
   935  003A  0183               	clrf	3
   936  003B  120A  118A  283E   	ljmp	_main	;jump to C main() function
   937                           
   938                           	psect	bssCOMMON
   939  007B                     __pbssCOMMON:
   940  007B                     _val_temporal:
   941  007B                     	ds	1
   942  007C                     _val:
   943  007C                     	ds	1
   944                           
   945                           	psect	dataCOMMON
   946  007D                     __pdataCOMMON:
   947  007D                     _cont:
   948  007D                     	ds	1
   949                           
   950                           	psect	bssBANK0
   951  0020                     __pbssBANK0:
   952  0020                     _luz:
   953  0020                     	ds	5
   954  0025                     _lumens:
   955  0025                     	ds	4
   956  0029                     _temperatura:
   957  0029                     	ds	4
   958  002D                     _lux:
   959  002D                     	ds	2
   960  002F                     _contador2:
   961  002F                     	ds	1
   962  0030                     _mover:
   963  0030                     	ds	1
   964  0031                     _hour_decenas:
   965  0031                     	ds	1
   966  0032                     _hour_unidades:
   967  0032                     	ds	1
   968  0033                     _min_unidades:
   969  0033                     	ds	1
   970  0034                     _min_decenas:
   971  0034                     	ds	1
   972  0035                     _sec_unidades:
   973  0035                     	ds	1
   974  0036                     _sec_decenas:
   975  0036                     	ds	1
   976  0037                     _val3:
   977  0037                     	ds	1
   978  0038                     _val2:
   979  0038                     	ds	1
   980  0039                     _temp:
   981  0039                     	ds	1
   982  003A                     _data4:
   983  003A                     	ds	1
   984  003B                     _data3:
   985  003B                     	ds	1
   986  003C                     _data2:
   987  003C                     	ds	1
   988  003D                     _data1:
   989  003D                     	ds	1
   990                           
   991                           	psect	dataBANK0
   992  0059                     __pdataBANK0:
   993  0059                     _cont_mover2:
   994  0059                     	ds	1
   995  005A                     _cont_mover:
   996  005A                     	ds	1
   997  005B                     _cont_lcd:
   998  005B                     	ds	1
   999  005C                     _cont_100:
  1000  005C                     	ds	1
  1001                           
  1002                           	psect	clrtext
  1003  0F4D                     clear_ram0:	
  1004                           ;	Called with FSR containing the base address, and
  1005                           ;	W with the last address+1
  1006                           
  1007  0F4D  0064               	clrwdt	;clear the watchdog before getting into this loop
  1008  0F4E                     clrloop0:
  1009  0F4E  0180               	clrf	0	;clear RAM location pointed to by FSR
  1010  0F4F  0A84               	incf	4,f	;increment pointer
  1011  0F50  0604               	xorwf	4,w	;XOR with final address
  1012  0F51  1903               	btfsc	3,2	;have we reached the end yet?
  1013  0F52  3400               	retlw	0	;all done for this memory range, return
  1014  0F53  0604               	xorwf	4,w	;XOR again to restore value
  1015  0F54  2F4E               	goto	clrloop0	;do the next byte
  1016                           
  1017                           	psect	cstackCOMMON
  1018  0070                     __pcstackCOMMON:
  1019  0070                     ?_spiRead:
  1020  0070                     ??_spiRead:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0070                     ?_spiWrite:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026  0070                     ??_spiWrite:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0070                     ?_setup:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0070                     ?_Lcd_Write_String:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035  0070                     ?_Lcd_Write_Char:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038  0070                     ?_Lcd_Shift_Left:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041  0070                     ?_Lcd_Shift_Right:	
  1042                           ; 1 bytes @ 0x0
  1043                           
  1044  0070                     ?_pwm_init:	
  1045                           ; 1 bytes @ 0x0
  1046                           
  1047  0070                     ?_init_SPI:	
  1048                           ; 1 bytes @ 0x0
  1049                           
  1050  0070                     ?_Lcd_Init:	
  1051                           ; 1 bytes @ 0x0
  1052                           
  1053  0070                     ?_pwm_duty_cycle:	
  1054                           ; 1 bytes @ 0x0
  1055                           
  1056  0070                     ?_init_osc_MHz:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059  0070                     ?_tmr0_init:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0070                     ?_tmr0_reload:	
  1063                           ; 1 bytes @ 0x0
  1064                           
  1065  0070                     ?_init_UART:	
  1066                           ; 1 bytes @ 0x0
  1067                           
  1068  0070                     ?_isr:	
  1069                           ; 1 bytes @ 0x0
  1070                           
  1071  0070                     ?_main:	
  1072                           ; 1 bytes @ 0x0
  1073                           
  1074  0070                     ?_Lcd_Port:	
  1075                           ; 1 bytes @ 0x0
  1076                           
  1077  0070                     ?_Lcd_Cmd:	
  1078                           ; 1 bytes @ 0x0
  1079                           
  1080  0070                     ?_spiReceiveWait:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0070                     ??_spiReceiveWait:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0070                     ?i1_tmr0_reload:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0070                     ??i1_tmr0_reload:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0070                     ?_spiDataReady:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0070                     spiWrite@dat:	
  1096                           ; 2 bytes @ 0x0
  1097                           
  1098  0070                     pwm_duty_cycle@duty_cycle:	
  1099                           ; 1 bytes @ 0x0
  1100                           
  1101                           
  1102                           ; 2 bytes @ 0x0
  1103  0070                     	ds	2
  1104  0072                     ??_spiDataReady:
  1105  0072                     ??_pwm_duty_cycle:	
  1106                           ; 1 bytes @ 0x2
  1107                           
  1108                           
  1109                           ; 1 bytes @ 0x2
  1110  0072                     	ds	2
  1111  0074                     ?_servo:
  1112  0074                     servo@mov:	
  1113                           ; 1 bytes @ 0x4
  1114                           
  1115                           
  1116                           ; 2 bytes @ 0x4
  1117  0074                     	ds	2
  1118  0076                     ??_servo:
  1119  0076                     ??_isr:	
  1120                           ; 1 bytes @ 0x6
  1121                           
  1122                           
  1123                           ; 1 bytes @ 0x6
  1124  0076                     	ds	5
  1125                           
  1126                           	psect	cstackBANK0
  1127  003E                     __pcstackBANK0:
  1128  003E                     ??_pwm_init:
  1129  003E                     ??_init_SPI:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  003E                     ??_init_osc_MHz:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  003E                     ??_tmr0_init:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  003E                     ??_tmr0_reload:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  003E                     ??_init_UART:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  003E                     ??_Lcd_Port:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  003E                     ?___awdiv:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  003E                     ?___awmod:	
  1151                           ; 2 bytes @ 0x0
  1152                           
  1153  003E                     ?___lldiv:	
  1154                           ; 2 bytes @ 0x0
  1155                           
  1156  003E                     ?___llmod:	
  1157                           ; 4 bytes @ 0x0
  1158                           
  1159  003E                     Lcd_Port@a:	
  1160                           ; 4 bytes @ 0x0
  1161                           
  1162  003E                     ___awdiv@divisor:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  003E                     ___awmod@divisor:	
  1166                           ; 2 bytes @ 0x0
  1167                           
  1168  003E                     ___lldiv@divisor:	
  1169                           ; 2 bytes @ 0x0
  1170                           
  1171  003E                     ___llmod@divisor:	
  1172                           ; 4 bytes @ 0x0
  1173                           
  1174                           
  1175                           ; 4 bytes @ 0x0
  1176  003E                     	ds	1
  1177  003F                     ??_Lcd_Write_Char:
  1178  003F                     ??_Lcd_Cmd:	
  1179                           ; 1 bytes @ 0x1
  1180                           
  1181                           
  1182                           ; 1 bytes @ 0x1
  1183  003F                     	ds	1
  1184  0040                     init_osc_MHz@freq:
  1185  0040                     tmr0_init@prescaler:	
  1186                           ; 1 bytes @ 0x2
  1187                           
  1188  0040                     Lcd_Cmd@a:	
  1189                           ; 1 bytes @ 0x2
  1190                           
  1191  0040                     Lcd_Write_Char@a:	
  1192                           ; 1 bytes @ 0x2
  1193                           
  1194  0040                     pwm_init@channel:	
  1195                           ; 1 bytes @ 0x2
  1196                           
  1197  0040                     ___awdiv@dividend:	
  1198                           ; 1 bytes @ 0x2
  1199                           
  1200  0040                     ___awmod@dividend:	
  1201                           ; 2 bytes @ 0x2
  1202                           
  1203                           
  1204                           ; 2 bytes @ 0x2
  1205  0040                     	ds	1
  1206  0041                     ?_Lcd_Set_Cursor:
  1207  0041                     ??_Lcd_Write_String:	
  1208                           ; 1 bytes @ 0x3
  1209                           
  1210  0041                     ??_Lcd_Shift_Left:	
  1211                           ; 1 bytes @ 0x3
  1212                           
  1213  0041                     ??_Lcd_Shift_Right:	
  1214                           ; 1 bytes @ 0x3
  1215                           
  1216  0041                     ??_Lcd_Init:	
  1217                           ; 1 bytes @ 0x3
  1218                           
  1219  0041                     Lcd_Set_Cursor@b:	
  1220                           ; 1 bytes @ 0x3
  1221                           
  1222  0041                     Lcd_Write_String@i:	
  1223                           ; 1 bytes @ 0x3
  1224                           
  1225                           
  1226                           ; 2 bytes @ 0x3
  1227  0041                     	ds	1
  1228  0042                     ??_Lcd_Set_Cursor:
  1229  0042                     ??___awdiv:	
  1230                           ; 1 bytes @ 0x4
  1231                           
  1232  0042                     ??___awmod:	
  1233                           ; 1 bytes @ 0x4
  1234                           
  1235  0042                     ___lldiv@dividend:	
  1236                           ; 1 bytes @ 0x4
  1237                           
  1238  0042                     ___llmod@dividend:	
  1239                           ; 4 bytes @ 0x4
  1240                           
  1241                           
  1242                           ; 4 bytes @ 0x4
  1243  0042                     	ds	1
  1244  0043                     ??_setup:
  1245  0043                     Lcd_Set_Cursor@a:	
  1246                           ; 1 bytes @ 0x5
  1247                           
  1248  0043                     Lcd_Write_String@a:	
  1249                           ; 1 bytes @ 0x5
  1250                           
  1251  0043                     ___awdiv@counter:	
  1252                           ; 1 bytes @ 0x5
  1253                           
  1254  0043                     ___awmod@counter:	
  1255                           ; 1 bytes @ 0x5
  1256                           
  1257                           
  1258                           ; 1 bytes @ 0x5
  1259  0043                     	ds	1
  1260  0044                     Lcd_Set_Cursor@temp:
  1261  0044                     ___awdiv@sign:	
  1262                           ; 1 bytes @ 0x6
  1263                           
  1264  0044                     ___awmod@sign:	
  1265                           ; 1 bytes @ 0x6
  1266                           
  1267                           
  1268                           ; 1 bytes @ 0x6
  1269  0044                     	ds	1
  1270  0045                     ___awdiv@quotient:
  1271                           
  1272                           ; 2 bytes @ 0x7
  1273  0045                     	ds	1
  1274  0046                     ??___lldiv:
  1275  0046                     ??___llmod:	
  1276                           ; 1 bytes @ 0x8
  1277                           
  1278                           
  1279                           ; 1 bytes @ 0x8
  1280  0046                     	ds	1
  1281  0047                     ?_valor_temperatura:
  1282  0047                     ___llmod@counter:	
  1283                           ; 1 bytes @ 0x9
  1284                           
  1285  0047                     valor_temperatura@temp:	
  1286                           ; 1 bytes @ 0x9
  1287                           
  1288  0047                     ___lldiv@quotient:	
  1289                           ; 2 bytes @ 0x9
  1290                           
  1291                           
  1292                           ; 4 bytes @ 0x9
  1293  0047                     	ds	2
  1294  0049                     ??_valor_temperatura:
  1295                           
  1296                           ; 1 bytes @ 0xB
  1297  0049                     	ds	2
  1298  004B                     ___lldiv@counter:
  1299                           
  1300                           ; 1 bytes @ 0xD
  1301  004B                     	ds	1
  1302  004C                     ?_valor_lux:
  1303  004C                     valor_lux@lux:	
  1304                           ; 1 bytes @ 0xE
  1305                           
  1306                           
  1307                           ; 4 bytes @ 0xE
  1308  004C                     	ds	4
  1309  0050                     ??_valor_lux:
  1310                           
  1311                           ; 1 bytes @ 0x12
  1312  0050                     	ds	1
  1313  0051                     valor_lux@valor:
  1314                           
  1315                           ; 4 bytes @ 0x13
  1316  0051                     	ds	4
  1317  0055                     ??_main:
  1318                           
  1319                           ; 1 bytes @ 0x17
  1320  0055                     	ds	4
  1321                           
  1322                           	psect	maintext
  1323  003E                     __pmaintext:	
  1324 ;;
  1325 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1326 ;;
  1327 ;; *************** function _main *****************
  1328 ;; Defined at:
  1329 ;;		line 223 in file "MASTERSPI.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;		None
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;		None
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1338 ;; Tracked objects:
  1339 ;;		On entry : B00/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1343 ;;      Params:         0       0       0       0       0
  1344 ;;      Locals:         0       0       0       0       0
  1345 ;;      Temps:          0       4       0       0       0
  1346 ;;      Totals:         0       4       0       0       0
  1347 ;;Total ram usage:        4 bytes
  1348 ;; Hardware stack levels required when called: 7
  1349 ;; This function calls:
  1350 ;;		_Lcd_Set_Cursor
  1351 ;;		_Lcd_Shift_Left
  1352 ;;		_Lcd_Shift_Right
  1353 ;;		_Lcd_Write_Char
  1354 ;;		_Lcd_Write_String
  1355 ;;		_setup
  1356 ;;		_valor_lux
  1357 ;;		_valor_temperatura
  1358 ;; This function is called by:
  1359 ;;		Startup code after reset
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363  003E                     _main:	
  1364                           ;psect for function _main
  1365                           
  1366  003E                     l2134:	
  1367                           ;incstack = 0
  1368                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1369                           
  1370                           
  1371                           ;MASTERSPI.c: 224:     setup();
  1372  003E  120A  118A  26C1  120A  118A  	fcall	_setup
  1373  0043                     l2136:
  1374                           
  1375                           ;MASTERSPI.c: 226:     Lcd_Set_Cursor(1,1);
  1376  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0045  01C1               	clrf	Lcd_Set_Cursor@b
  1379  0046  0AC1               	incf	Lcd_Set_Cursor@b,f
  1380  0047  3001               	movlw	1
  1381  0048  120A  118A  27D8  120A  118A  	fcall	_Lcd_Set_Cursor
  1382  004D                     l2138:
  1383                           
  1384                           ;MASTERSPI.c: 227:     Lcd_Write_String("TEMP  LUX    TIME   DIST");
  1385  004D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1386  004E  120A  118A  2788  120A  118A  	fcall	_Lcd_Write_String
  1387  0053                     l2140:
  1388                           
  1389                           ;MASTERSPI.c: 230:         lux = data1;
  1390  0053  1283               	bcf	3,5	;RP0=0, select bank0
  1391  0054  1303               	bcf	3,6	;RP1=0, select bank0
  1392  0055  083D               	movf	_data1,w
  1393  0056  00D5               	movwf	??_main
  1394  0057  01D6               	clrf	??_main+1
  1395  0058  0855               	movf	??_main,w
  1396  0059  00AD               	movwf	_lux
  1397  005A  0856               	movf	??_main+1,w
  1398  005B  00AE               	movwf	_lux+1
  1399  005C                     l2142:
  1400                           
  1401                           ;MASTERSPI.c: 231:         lux = (lux<<8)|data2;
  1402  005C  083C               	movf	_data2,w
  1403  005D  00D5               	movwf	??_main
  1404  005E  01D6               	clrf	??_main+1
  1405  005F  082D               	movf	_lux,w
  1406  0060  00D8               	movwf	??_main+3
  1407  0061  01D7               	clrf	??_main+2
  1408  0062  0855               	movf	??_main,w
  1409  0063  0457               	iorwf	??_main+2,w
  1410  0064  00AD               	movwf	_lux
  1411  0065  0856               	movf	??_main+1,w
  1412  0066  0458               	iorwf	??_main+3,w
  1413  0067  00AE               	movwf	_lux+1
  1414  0068                     l2144:
  1415                           
  1416                           ;MASTERSPI.c: 232:         lux = (lux<<8)|data3;
  1417  0068  083B               	movf	_data3,w
  1418  0069  00D5               	movwf	??_main
  1419  006A  01D6               	clrf	??_main+1
  1420  006B  082D               	movf	_lux,w
  1421  006C  00D8               	movwf	??_main+3
  1422  006D  01D7               	clrf	??_main+2
  1423  006E  0855               	movf	??_main,w
  1424  006F  0457               	iorwf	??_main+2,w
  1425  0070  00AD               	movwf	_lux
  1426  0071  0856               	movf	??_main+1,w
  1427  0072  0458               	iorwf	??_main+3,w
  1428  0073  00AE               	movwf	_lux+1
  1429  0074                     l2146:
  1430                           
  1431                           ;MASTERSPI.c: 233:         lumens = (lux<<8)|data4;
  1432  0074  083A               	movf	_data4,w
  1433  0075  00D5               	movwf	??_main
  1434  0076  01D6               	clrf	??_main+1
  1435  0077  082D               	movf	_lux,w
  1436  0078  00D8               	movwf	??_main+3
  1437  0079  01D7               	clrf	??_main+2
  1438  007A  0855               	movf	??_main,w
  1439  007B  0457               	iorwf	??_main+2,w
  1440  007C  00A5               	movwf	_lumens
  1441  007D  0856               	movf	??_main+1,w
  1442  007E  0458               	iorwf	??_main+3,w
  1443  007F  00A6               	movwf	_lumens+1
  1444  0080  01A7               	clrf	_lumens+2
  1445  0081  01A8               	clrf	_lumens+3
  1446                           
  1447                           ;MASTERSPI.c: 236:         valor_lux (lumens);
  1448  0082  0828               	movf	_lumens+3,w
  1449  0083  00CF               	movwf	valor_lux@lux+3
  1450  0084  0827               	movf	_lumens+2,w
  1451  0085  00CE               	movwf	valor_lux@lux+2
  1452  0086  0826               	movf	_lumens+1,w
  1453  0087  00CD               	movwf	valor_lux@lux+1
  1454  0088  0825               	movf	_lumens,w
  1455  0089  00CC               	movwf	valor_lux@lux
  1456  008A  120A  118A  2348  120A  118A  	fcall	_valor_lux
  1457                           
  1458                           ;MASTERSPI.c: 237:         valor_temperatura(temp);
  1459  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1460  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1461  0091  0839               	movf	_temp,w
  1462  0092  00D5               	movwf	??_main
  1463  0093  01D6               	clrf	??_main+1
  1464  0094  0855               	movf	??_main,w
  1465  0095  00C7               	movwf	valor_temperatura@temp
  1466  0096  0856               	movf	??_main+1,w
  1467  0097  00C8               	movwf	valor_temperatura@temp+1
  1468  0098  120A  118A  25C8  120A  118A  	fcall	_valor_temperatura
  1469  009D                     l2148:
  1470                           
  1471                           ;MASTERSPI.c: 239:         sec_unidades = (val&0x0F)+48;
  1472  009D  087C               	movf	_val,w
  1473  009E  390F               	andlw	15
  1474  009F  3E30               	addlw	48
  1475  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1476  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1477  00A2  00D5               	movwf	??_main
  1478  00A3  0855               	movf	??_main,w
  1479  00A4  00B5               	movwf	_sec_unidades
  1480  00A5                     l2150:
  1481                           
  1482                           ;MASTERSPI.c: 240:         sec_decenas = (val >> 4) + 48;
  1483  00A5  087C               	movf	_val,w
  1484  00A6  00D5               	movwf	??_main
  1485  00A7  3004               	movlw	4
  1486  00A8                     u1395:
  1487  00A8  1003               	clrc
  1488  00A9  0CD5               	rrf	??_main,f
  1489  00AA  3EFF               	addlw	-1
  1490  00AB  1D03               	skipz
  1491  00AC  28A8               	goto	u1395
  1492  00AD  0855               	movf	??_main,w
  1493  00AE  3E30               	addlw	48
  1494  00AF  00D6               	movwf	??_main+1
  1495  00B0  0856               	movf	??_main+1,w
  1496  00B1  00B6               	movwf	_sec_decenas
  1497  00B2                     l2152:
  1498                           
  1499                           ;MASTERSPI.c: 241:         min_unidades = (val2&0x0F)+48;
  1500  00B2  0838               	movf	_val2,w
  1501  00B3  390F               	andlw	15
  1502  00B4  3E30               	addlw	48
  1503  00B5  00D5               	movwf	??_main
  1504  00B6  0855               	movf	??_main,w
  1505  00B7  00B3               	movwf	_min_unidades
  1506  00B8                     l2154:
  1507                           
  1508                           ;MASTERSPI.c: 242:         min_decenas = (val2 >> 4) + 48;
  1509  00B8  0838               	movf	_val2,w
  1510  00B9  00D5               	movwf	??_main
  1511  00BA  3004               	movlw	4
  1512  00BB                     u1405:
  1513  00BB  1003               	clrc
  1514  00BC  0CD5               	rrf	??_main,f
  1515  00BD  3EFF               	addlw	-1
  1516  00BE  1D03               	skipz
  1517  00BF  28BB               	goto	u1405
  1518  00C0  0855               	movf	??_main,w
  1519  00C1  3E30               	addlw	48
  1520  00C2  00D6               	movwf	??_main+1
  1521  00C3  0856               	movf	??_main+1,w
  1522  00C4  00B4               	movwf	_min_decenas
  1523  00C5                     l2156:
  1524                           
  1525                           ;MASTERSPI.c: 243:         hour_unidades = (val3&0x0F)+48;
  1526  00C5  0837               	movf	_val3,w
  1527  00C6  390F               	andlw	15
  1528  00C7  3E30               	addlw	48
  1529  00C8  00D5               	movwf	??_main
  1530  00C9  0855               	movf	??_main,w
  1531  00CA  00B2               	movwf	_hour_unidades
  1532  00CB                     l2158:
  1533                           
  1534                           ;MASTERSPI.c: 244:         hour_decenas = (val3 >> 4) + 48;
  1535  00CB  0837               	movf	_val3,w
  1536  00CC  00D5               	movwf	??_main
  1537  00CD  3004               	movlw	4
  1538  00CE                     u1415:
  1539  00CE  1003               	clrc
  1540  00CF  0CD5               	rrf	??_main,f
  1541  00D0  3EFF               	addlw	-1
  1542  00D1  1D03               	skipz
  1543  00D2  28CE               	goto	u1415
  1544  00D3  0855               	movf	??_main,w
  1545  00D4  3E30               	addlw	48
  1546  00D5  00D6               	movwf	??_main+1
  1547  00D6  0856               	movf	??_main+1,w
  1548  00D7  00B1               	movwf	_hour_decenas
  1549                           
  1550                           ;MASTERSPI.c: 246:         Lcd_Set_Cursor(2,1);
  1551  00D8  01C1               	clrf	Lcd_Set_Cursor@b
  1552  00D9  0AC1               	incf	Lcd_Set_Cursor@b,f
  1553  00DA  3002               	movlw	2
  1554  00DB  120A  118A  27D8  120A  118A  	fcall	_Lcd_Set_Cursor
  1555  00E0                     l2160:
  1556                           
  1557                           ;MASTERSPI.c: 247:         if(temperatura [0] == 0){
  1558  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1559  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1560  00E2  0829               	movf	_temperatura,w
  1561  00E3  1D03               	btfss	3,2
  1562  00E4  28E6               	goto	u1421
  1563  00E5  28E7               	goto	u1420
  1564  00E6                     u1421:
  1565  00E6  28EE               	goto	l2164
  1566  00E7                     u1420:
  1567  00E7                     l2162:
  1568                           
  1569                           ;MASTERSPI.c: 248:             Lcd_Write_String(" ");
  1570  00E7  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1571  00E8  120A  118A  2788  120A  118A  	fcall	_Lcd_Write_String
  1572                           
  1573                           ;MASTERSPI.c: 249:         }
  1574  00ED  28F5               	goto	l241
  1575  00EE                     l2164:
  1576                           
  1577                           ;MASTERSPI.c: 251:             Lcd_Write_Char(temperatura [0] + 48);
  1578  00EE  0829               	movf	_temperatura,w
  1579  00EF  3E30               	addlw	48
  1580  00F0  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1581  00F5                     l241:	
  1582                           ;MASTERSPI.c: 252:         }
  1583                           
  1584                           
  1585                           ;MASTERSPI.c: 253:         Lcd_Write_Char(temperatura [1] + 48);
  1586  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1587  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1588  00F7  082A               	movf	_temperatura+1,w
  1589  00F8  3E30               	addlw	48
  1590  00F9  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1591                           
  1592                           ;MASTERSPI.c: 254:         Lcd_Write_Char(temperatura[2] + 48);
  1593  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1594  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1595  0100  082B               	movf	_temperatura+2,w
  1596  0101  3E30               	addlw	48
  1597  0102  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1598                           
  1599                           ;MASTERSPI.c: 255:         Lcd_Write_Char(67);
  1600  0107  3043               	movlw	67
  1601  0108  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1602  010D                     l2166:
  1603                           
  1604                           ;MASTERSPI.c: 256:         Lcd_Write_String(" ");
  1605  010D  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1606  010E  120A  118A  2788  120A  118A  	fcall	_Lcd_Write_String
  1607  0113                     l2168:
  1608                           
  1609                           ;MASTERSPI.c: 257:         if(lumens == 65535){
  1610  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1611  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1612  0115  0A25               	incf	_lumens,w
  1613  0116  1D03               	skipz
  1614  0117  291E               	goto	u1431
  1615  0118  0A26               	incf	_lumens+1,w
  1616  0119  0427               	iorwf	_lumens+2,w
  1617  011A  0428               	iorwf	_lumens+3,w
  1618  011B  1D03               	btfss	3,2
  1619  011C  291E               	goto	u1431
  1620  011D  291F               	goto	u1430
  1621  011E                     u1431:
  1622  011E  2926               	goto	l2172
  1623  011F                     u1430:
  1624  011F                     l2170:
  1625                           
  1626                           ;MASTERSPI.c: 258:             Lcd_Write_String("ERROR");
  1627  011F  301A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1628  0120  120A  118A  2788  120A  118A  	fcall	_Lcd_Write_String
  1629                           
  1630                           ;MASTERSPI.c: 259:         }
  1631  0125  2953               	goto	l2174
  1632  0126                     l2172:
  1633                           
  1634                           ;MASTERSPI.c: 261:             Lcd_Write_Char(luz [0] + 48);
  1635  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1636  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1637  0128  0820               	movf	_luz,w
  1638  0129  3E30               	addlw	48
  1639  012A  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1640                           
  1641                           ;MASTERSPI.c: 262:             Lcd_Write_Char(luz [1] + 48);
  1642  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1643  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1644  0131  0821               	movf	_luz+1,w
  1645  0132  3E30               	addlw	48
  1646  0133  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1647                           
  1648                           ;MASTERSPI.c: 263:             Lcd_Write_Char(luz [2] + 48);
  1649  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1650  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1651  013A  0822               	movf	_luz+2,w
  1652  013B  3E30               	addlw	48
  1653  013C  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1654                           
  1655                           ;MASTERSPI.c: 264:             Lcd_Write_Char(luz [3] + 48);
  1656  0141  1283               	bcf	3,5	;RP0=0, select bank0
  1657  0142  1303               	bcf	3,6	;RP1=0, select bank0
  1658  0143  0823               	movf	_luz+3,w
  1659  0144  3E30               	addlw	48
  1660  0145  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1661                           
  1662                           ;MASTERSPI.c: 265:             Lcd_Write_Char(luz [4] + 48);
  1663  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1664  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1665  014C  0824               	movf	_luz+4,w
  1666  014D  3E30               	addlw	48
  1667  014E  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1668  0153                     l2174:
  1669                           
  1670                           ;MASTERSPI.c: 267:         Lcd_Write_String(" ");
  1671  0153  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1672  0154  120A  118A  2788  120A  118A  	fcall	_Lcd_Write_String
  1673  0159                     l2176:
  1674                           
  1675                           ;MASTERSPI.c: 268:         Lcd_Write_Char(hour_decenas);
  1676  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1677  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1678  015B  0831               	movf	_hour_decenas,w
  1679  015C  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1680  0161                     l2178:
  1681                           
  1682                           ;MASTERSPI.c: 269:         Lcd_Write_Char(hour_unidades);
  1683  0161  1283               	bcf	3,5	;RP0=0, select bank0
  1684  0162  1303               	bcf	3,6	;RP1=0, select bank0
  1685  0163  0832               	movf	_hour_unidades,w
  1686  0164  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1687  0169                     l2180:
  1688                           
  1689                           ;MASTERSPI.c: 270:         Lcd_Write_Char(58);
  1690  0169  303A               	movlw	58
  1691  016A  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1692  016F                     l2182:
  1693                           
  1694                           ;MASTERSPI.c: 271:         Lcd_Write_Char(min_decenas);
  1695  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1696  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1697  0171  0834               	movf	_min_decenas,w
  1698  0172  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1699  0177                     l2184:
  1700                           
  1701                           ;MASTERSPI.c: 272:         Lcd_Write_Char(min_unidades);
  1702  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1703  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1704  0179  0833               	movf	_min_unidades,w
  1705  017A  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1706  017F                     l2186:
  1707                           
  1708                           ;MASTERSPI.c: 273:         Lcd_Write_Char(58);
  1709  017F  303A               	movlw	58
  1710  0180  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1711  0185                     l2188:
  1712                           
  1713                           ;MASTERSPI.c: 274:         Lcd_Write_Char(sec_decenas);
  1714  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1715  0186  1303               	bcf	3,6	;RP1=0, select bank0
  1716  0187  0836               	movf	_sec_decenas,w
  1717  0188  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1718  018D                     l2190:
  1719                           
  1720                           ;MASTERSPI.c: 275:         Lcd_Write_Char(sec_unidades);
  1721  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1722  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1723  018F  0835               	movf	_sec_unidades,w
  1724  0190  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  1725  0195                     l2192:
  1726                           
  1727                           ;MASTERSPI.c: 276:         if (mover == 1){
  1728  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1729  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1730  0197  0330               	decf	_mover,w
  1731  0198  1D03               	btfss	3,2
  1732  0199  299B               	goto	u1441
  1733  019A  299C               	goto	u1440
  1734  019B                     u1441:
  1735  019B  2853               	goto	l2140
  1736  019C                     u1440:
  1737  019C                     l2194:
  1738                           
  1739                           ;MASTERSPI.c: 277:             if (cont_mover > 0){
  1740  019C  085A               	movf	_cont_mover,w
  1741  019D  1903               	btfsc	3,2
  1742  019E  29A0               	goto	u1451
  1743  019F  29A1               	goto	u1450
  1744  01A0                     u1451:
  1745  01A0  29B0               	goto	l2204
  1746  01A1                     u1450:
  1747  01A1                     l2196:
  1748                           
  1749                           ;MASTERSPI.c: 278:             Lcd_Shift_Left();
  1750  01A1  120A  158A  273F  120A  118A  	fcall	_Lcd_Shift_Left
  1751  01A6                     l2198:
  1752                           
  1753                           ;MASTERSPI.c: 279:             cont_mover--;
  1754  01A6  3001               	movlw	1
  1755  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1756  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1757  01A9  02DA               	subwf	_cont_mover,f
  1758  01AA                     l2200:
  1759                           
  1760                           ;MASTERSPI.c: 280:             mover = 0;
  1761  01AA  01B0               	clrf	_mover
  1762  01AB                     l2202:
  1763                           
  1764                           ;MASTERSPI.c: 281:             cont_mover2 = 4;}
  1765  01AB  3004               	movlw	4
  1766  01AC  00D5               	movwf	??_main
  1767  01AD  0855               	movf	??_main,w
  1768  01AE  00D9               	movwf	_cont_mover2
  1769  01AF  2853               	goto	l2140
  1770  01B0                     l2204:
  1771                           
  1772                           ;MASTERSPI.c: 284:             if (cont_mover2 > 0){
  1773  01B0  0859               	movf	_cont_mover2,w
  1774  01B1  1903               	btfsc	3,2
  1775  01B2  29B4               	goto	u1461
  1776  01B3  29B5               	goto	u1460
  1777  01B4                     u1461:
  1778  01B4  29C0               	goto	l2212
  1779  01B5                     u1460:
  1780  01B5                     l2206:
  1781                           
  1782                           ;MASTERSPI.c: 285:             Lcd_Shift_Right();
  1783  01B5  120A  158A  2746  120A  118A  	fcall	_Lcd_Shift_Right
  1784  01BA                     l2208:
  1785                           
  1786                           ;MASTERSPI.c: 286:             cont_mover2--;
  1787  01BA  3001               	movlw	1
  1788  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1789  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1790  01BD  02D9               	subwf	_cont_mover2,f
  1791  01BE                     l2210:
  1792                           
  1793                           ;MASTERSPI.c: 287:             mover = 0;}
  1794  01BE  01B0               	clrf	_mover
  1795  01BF  2853               	goto	l2140
  1796  01C0                     l2212:
  1797                           
  1798                           ;MASTERSPI.c: 289:             cont_mover = 4;
  1799  01C0  3004               	movlw	4
  1800  01C1  00D5               	movwf	??_main
  1801  01C2  0855               	movf	??_main,w
  1802  01C3  00DA               	movwf	_cont_mover
  1803  01C4  2853               	goto	l2140
  1804  01C5  120A  118A  280E   	ljmp	start
  1805  01C8                     __end_of_main:
  1806                           
  1807                           	psect	text1
  1808  05C8                     __ptext1:	
  1809 ;; *************** function _valor_temperatura *****************
  1810 ;; Defined at:
  1811 ;;		line 330 in file "MASTERSPI.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  temp            2    9[BANK0 ] int 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0, pclath, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         0       2       0       0       0
  1826 ;;      Locals:         0       0       0       0       0
  1827 ;;      Temps:          0       3       0       0       0
  1828 ;;      Totals:         0       5       0       0       0
  1829 ;;Total ram usage:        5 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 4
  1832 ;; This function calls:
  1833 ;;		___awdiv
  1834 ;;		___awmod
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840  05C8                     _valor_temperatura:	
  1841                           ;psect for function _valor_temperatura
  1842                           
  1843  05C8                     l1990:	
  1844                           ;incstack = 0
  1845                           ; Regs used in _valor_temperatura: [wreg+status,2+status,0+pclath+cstack]
  1846                           
  1847                           
  1848                           ;MASTERSPI.c: 330: void valor_temperatura (int temp);MASTERSPI.c: 331: {;MASTERSPI.c: 33
      +                          3:         temperatura [0] = (uint8_t)(temp/100);
  1849  05C8  3064               	movlw	100
  1850  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1851  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1852  05CB  00BE               	movwf	___awdiv@divisor
  1853  05CC  3000               	movlw	0
  1854  05CD  00BF               	movwf	___awdiv@divisor+1
  1855  05CE  0848               	movf	valor_temperatura@temp+1,w
  1856  05CF  00C1               	movwf	___awdiv@dividend+1
  1857  05D0  0847               	movf	valor_temperatura@temp,w
  1858  05D1  00C0               	movwf	___awdiv@dividend
  1859  05D2  120A  118A  2437  120A  118A  	fcall	___awdiv
  1860  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1861  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1862  05D9  083E               	movf	?___awdiv,w
  1863  05DA  00C9               	movwf	??_valor_temperatura
  1864  05DB  0849               	movf	??_valor_temperatura,w
  1865  05DC  00A9               	movwf	_temperatura
  1866                           
  1867                           ;MASTERSPI.c: 334:         temperatura [3] = temp%100;
  1868  05DD  3064               	movlw	100
  1869  05DE  00BE               	movwf	___awmod@divisor
  1870  05DF  3000               	movlw	0
  1871  05E0  00BF               	movwf	___awmod@divisor+1
  1872  05E1  0848               	movf	valor_temperatura@temp+1,w
  1873  05E2  00C1               	movwf	___awmod@dividend+1
  1874  05E3  0847               	movf	valor_temperatura@temp,w
  1875  05E4  00C0               	movwf	___awmod@dividend
  1876  05E5  120A  118A  256D  120A  118A  	fcall	___awmod
  1877  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  1878  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  1879  05EC  083E               	movf	?___awmod,w
  1880  05ED  00C9               	movwf	??_valor_temperatura
  1881  05EE  0849               	movf	??_valor_temperatura,w
  1882  05EF  00AC               	movwf	_temperatura+3
  1883                           
  1884                           ;MASTERSPI.c: 336:         temperatura [1] = temperatura[3]/10;
  1885  05F0  300A               	movlw	10
  1886  05F1  00BE               	movwf	___awdiv@divisor
  1887  05F2  3000               	movlw	0
  1888  05F3  00BF               	movwf	___awdiv@divisor+1
  1889  05F4  082C               	movf	_temperatura+3,w
  1890  05F5  00C9               	movwf	??_valor_temperatura
  1891  05F6  01CA               	clrf	??_valor_temperatura+1
  1892  05F7  0849               	movf	??_valor_temperatura,w
  1893  05F8  00C0               	movwf	___awdiv@dividend
  1894  05F9  084A               	movf	??_valor_temperatura+1,w
  1895  05FA  00C1               	movwf	___awdiv@dividend+1
  1896  05FB  120A  118A  2437  120A  118A  	fcall	___awdiv
  1897  0600  1283               	bcf	3,5	;RP0=0, select bank0
  1898  0601  1303               	bcf	3,6	;RP1=0, select bank0
  1899  0602  083E               	movf	?___awdiv,w
  1900  0603  00CB               	movwf	??_valor_temperatura+2
  1901  0604  084B               	movf	??_valor_temperatura+2,w
  1902  0605  00AA               	movwf	_temperatura+1
  1903                           
  1904                           ;MASTERSPI.c: 337:         temperatura [3] = temperatura[3]%10;
  1905  0606  300A               	movlw	10
  1906  0607  00BE               	movwf	___awmod@divisor
  1907  0608  3000               	movlw	0
  1908  0609  00BF               	movwf	___awmod@divisor+1
  1909  060A  082C               	movf	_temperatura+3,w
  1910  060B  00C9               	movwf	??_valor_temperatura
  1911  060C  01CA               	clrf	??_valor_temperatura+1
  1912  060D  0849               	movf	??_valor_temperatura,w
  1913  060E  00C0               	movwf	___awmod@dividend
  1914  060F  084A               	movf	??_valor_temperatura+1,w
  1915  0610  00C1               	movwf	___awmod@dividend+1
  1916  0611  120A  118A  256D  120A  118A  	fcall	___awmod
  1917  0616  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0617  1303               	bcf	3,6	;RP1=0, select bank0
  1919  0618  083E               	movf	?___awmod,w
  1920  0619  00CB               	movwf	??_valor_temperatura+2
  1921  061A  084B               	movf	??_valor_temperatura+2,w
  1922  061B  00AC               	movwf	_temperatura+3
  1923  061C                     l1992:
  1924                           
  1925                           ;MASTERSPI.c: 339:         temperatura [2] = temperatura[3];
  1926  061C  082C               	movf	_temperatura+3,w
  1927  061D  00C9               	movwf	??_valor_temperatura
  1928  061E  0849               	movf	??_valor_temperatura,w
  1929  061F  00AB               	movwf	_temperatura+2
  1930  0620                     l257:
  1931  0620  0008               	return
  1932  0621                     __end_of_valor_temperatura:
  1933                           
  1934                           	psect	text2
  1935  056D                     __ptext2:	
  1936 ;; *************** function ___awmod *****************
  1937 ;; Defined at:
  1938 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awmod.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  divisor         2    0[BANK0 ] int 
  1941 ;;  dividend        2    2[BANK0 ] int 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  sign            1    6[BANK0 ] unsigned char 
  1944 ;;  counter         1    5[BANK0 ] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  2    0[BANK0 ] int 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1954 ;;      Params:         0       4       0       0       0
  1955 ;;      Locals:         0       2       0       0       0
  1956 ;;      Temps:          0       1       0       0       0
  1957 ;;      Totals:         0       7       0       0       0
  1958 ;;Total ram usage:        7 bytes
  1959 ;; Hardware stack levels used: 1
  1960 ;; Hardware stack levels required when called: 3
  1961 ;; This function calls:
  1962 ;;		Nothing
  1963 ;; This function is called by:
  1964 ;;		_valor_temperatura
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968  056D                     ___awmod:	
  1969                           ;psect for function ___awmod
  1970                           
  1971  056D                     l1850:	
  1972                           ;incstack = 0
  1973                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1974                           
  1975  056D  1283               	bcf	3,5	;RP0=0, select bank0
  1976  056E  1303               	bcf	3,6	;RP1=0, select bank0
  1977  056F  01C4               	clrf	___awmod@sign
  1978  0570                     l1852:
  1979  0570  1FC1               	btfss	___awmod@dividend+1,7
  1980  0571  2D73               	goto	u931
  1981  0572  2D74               	goto	u930
  1982  0573                     u931:
  1983  0573  2D7B               	goto	l1858
  1984  0574                     u930:
  1985  0574                     l1854:
  1986  0574  09C0               	comf	___awmod@dividend,f
  1987  0575  09C1               	comf	___awmod@dividend+1,f
  1988  0576  0AC0               	incf	___awmod@dividend,f
  1989  0577  1903               	skipnz
  1990  0578  0AC1               	incf	___awmod@dividend+1,f
  1991  0579                     l1856:
  1992  0579  01C4               	clrf	___awmod@sign
  1993  057A  0AC4               	incf	___awmod@sign,f
  1994  057B                     l1858:
  1995  057B  1FBF               	btfss	___awmod@divisor+1,7
  1996  057C  2D7E               	goto	u941
  1997  057D  2D7F               	goto	u940
  1998  057E                     u941:
  1999  057E  2D84               	goto	l1862
  2000  057F                     u940:
  2001  057F                     l1860:
  2002  057F  09BE               	comf	___awmod@divisor,f
  2003  0580  09BF               	comf	___awmod@divisor+1,f
  2004  0581  0ABE               	incf	___awmod@divisor,f
  2005  0582  1903               	skipnz
  2006  0583  0ABF               	incf	___awmod@divisor+1,f
  2007  0584                     l1862:
  2008  0584  083E               	movf	___awmod@divisor,w
  2009  0585  043F               	iorwf	___awmod@divisor+1,w
  2010  0586  1903               	btfsc	3,2
  2011  0587  2D89               	goto	u951
  2012  0588  2D8A               	goto	u950
  2013  0589                     u951:
  2014  0589  2DB9               	goto	l1880
  2015  058A                     u950:
  2016  058A                     l1864:
  2017  058A  01C3               	clrf	___awmod@counter
  2018  058B  0AC3               	incf	___awmod@counter,f
  2019  058C  2D98               	goto	l1870
  2020  058D                     l1866:
  2021  058D  3001               	movlw	1
  2022  058E                     u965:
  2023  058E  1003               	clrc
  2024  058F  0DBE               	rlf	___awmod@divisor,f
  2025  0590  0DBF               	rlf	___awmod@divisor+1,f
  2026  0591  3EFF               	addlw	-1
  2027  0592  1D03               	skipz
  2028  0593  2D8E               	goto	u965
  2029  0594                     l1868:
  2030  0594  3001               	movlw	1
  2031  0595  00C2               	movwf	??___awmod
  2032  0596  0842               	movf	??___awmod,w
  2033  0597  07C3               	addwf	___awmod@counter,f
  2034  0598                     l1870:
  2035  0598  1FBF               	btfss	___awmod@divisor+1,7
  2036  0599  2D9B               	goto	u971
  2037  059A  2D9C               	goto	u970
  2038  059B                     u971:
  2039  059B  2D8D               	goto	l1866
  2040  059C                     u970:
  2041  059C                     l1872:
  2042  059C  083F               	movf	___awmod@divisor+1,w
  2043  059D  0241               	subwf	___awmod@dividend+1,w
  2044  059E  1D03               	skipz
  2045  059F  2DA2               	goto	u985
  2046  05A0  083E               	movf	___awmod@divisor,w
  2047  05A1  0240               	subwf	___awmod@dividend,w
  2048  05A2                     u985:
  2049  05A2  1C03               	skipc
  2050  05A3  2DA5               	goto	u981
  2051  05A4  2DA6               	goto	u980
  2052  05A5                     u981:
  2053  05A5  2DAC               	goto	l1876
  2054  05A6                     u980:
  2055  05A6                     l1874:
  2056  05A6  083E               	movf	___awmod@divisor,w
  2057  05A7  02C0               	subwf	___awmod@dividend,f
  2058  05A8  083F               	movf	___awmod@divisor+1,w
  2059  05A9  1C03               	skipc
  2060  05AA  03C1               	decf	___awmod@dividend+1,f
  2061  05AB  02C1               	subwf	___awmod@dividend+1,f
  2062  05AC                     l1876:
  2063  05AC  3001               	movlw	1
  2064  05AD                     u995:
  2065  05AD  1003               	clrc
  2066  05AE  0CBF               	rrf	___awmod@divisor+1,f
  2067  05AF  0CBE               	rrf	___awmod@divisor,f
  2068  05B0  3EFF               	addlw	-1
  2069  05B1  1D03               	skipz
  2070  05B2  2DAD               	goto	u995
  2071  05B3                     l1878:
  2072  05B3  3001               	movlw	1
  2073  05B4  02C3               	subwf	___awmod@counter,f
  2074  05B5  1D03               	btfss	3,2
  2075  05B6  2DB8               	goto	u1001
  2076  05B7  2DB9               	goto	u1000
  2077  05B8                     u1001:
  2078  05B8  2D9C               	goto	l1872
  2079  05B9                     u1000:
  2080  05B9                     l1880:
  2081  05B9  0844               	movf	___awmod@sign,w
  2082  05BA  1903               	btfsc	3,2
  2083  05BB  2DBD               	goto	u1011
  2084  05BC  2DBE               	goto	u1010
  2085  05BD                     u1011:
  2086  05BD  2DC3               	goto	l1884
  2087  05BE                     u1010:
  2088  05BE                     l1882:
  2089  05BE  09C0               	comf	___awmod@dividend,f
  2090  05BF  09C1               	comf	___awmod@dividend+1,f
  2091  05C0  0AC0               	incf	___awmod@dividend,f
  2092  05C1  1903               	skipnz
  2093  05C2  0AC1               	incf	___awmod@dividend+1,f
  2094  05C3                     l1884:
  2095  05C3  0841               	movf	___awmod@dividend+1,w
  2096  05C4  00BF               	movwf	?___awmod+1
  2097  05C5  0840               	movf	___awmod@dividend,w
  2098  05C6  00BE               	movwf	?___awmod
  2099  05C7                     l640:
  2100  05C7  0008               	return
  2101  05C8                     __end_of___awmod:
  2102                           
  2103                           	psect	text3
  2104  0437                     __ptext3:	
  2105 ;; *************** function ___awdiv *****************
  2106 ;; Defined at:
  2107 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\awdiv.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  divisor         2    0[BANK0 ] int 
  2110 ;;  dividend        2    2[BANK0 ] int 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  quotient        2    7[BANK0 ] int 
  2113 ;;  sign            1    6[BANK0 ] unsigned char 
  2114 ;;  counter         1    5[BANK0 ] unsigned char 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  2    0[BANK0 ] int 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2124 ;;      Params:         0       4       0       0       0
  2125 ;;      Locals:         0       4       0       0       0
  2126 ;;      Temps:          0       1       0       0       0
  2127 ;;      Totals:         0       9       0       0       0
  2128 ;;Total ram usage:        9 bytes
  2129 ;; Hardware stack levels used: 1
  2130 ;; Hardware stack levels required when called: 3
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_valor_temperatura
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138  0437                     ___awdiv:	
  2139                           ;psect for function ___awdiv
  2140                           
  2141  0437                     l1806:	
  2142                           ;incstack = 0
  2143                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2144                           
  2145  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2146  0438  1303               	bcf	3,6	;RP1=0, select bank0
  2147  0439  01C4               	clrf	___awdiv@sign
  2148  043A                     l1808:
  2149  043A  1FBF               	btfss	___awdiv@divisor+1,7
  2150  043B  2C3D               	goto	u831
  2151  043C  2C3E               	goto	u830
  2152  043D                     u831:
  2153  043D  2C45               	goto	l1814
  2154  043E                     u830:
  2155  043E                     l1810:
  2156  043E  09BE               	comf	___awdiv@divisor,f
  2157  043F  09BF               	comf	___awdiv@divisor+1,f
  2158  0440  0ABE               	incf	___awdiv@divisor,f
  2159  0441  1903               	skipnz
  2160  0442  0ABF               	incf	___awdiv@divisor+1,f
  2161  0443                     l1812:
  2162  0443  01C4               	clrf	___awdiv@sign
  2163  0444  0AC4               	incf	___awdiv@sign,f
  2164  0445                     l1814:
  2165  0445  1FC1               	btfss	___awdiv@dividend+1,7
  2166  0446  2C48               	goto	u841
  2167  0447  2C49               	goto	u840
  2168  0448                     u841:
  2169  0448  2C52               	goto	l1820
  2170  0449                     u840:
  2171  0449                     l1816:
  2172  0449  09C0               	comf	___awdiv@dividend,f
  2173  044A  09C1               	comf	___awdiv@dividend+1,f
  2174  044B  0AC0               	incf	___awdiv@dividend,f
  2175  044C  1903               	skipnz
  2176  044D  0AC1               	incf	___awdiv@dividend+1,f
  2177  044E                     l1818:
  2178  044E  3001               	movlw	1
  2179  044F  00C2               	movwf	??___awdiv
  2180  0450  0842               	movf	??___awdiv,w
  2181  0451  06C4               	xorwf	___awdiv@sign,f
  2182  0452                     l1820:
  2183  0452  01C5               	clrf	___awdiv@quotient
  2184  0453  01C6               	clrf	___awdiv@quotient+1
  2185  0454                     l1822:
  2186  0454  083E               	movf	___awdiv@divisor,w
  2187  0455  043F               	iorwf	___awdiv@divisor+1,w
  2188  0456  1903               	btfsc	3,2
  2189  0457  2C59               	goto	u851
  2190  0458  2C5A               	goto	u850
  2191  0459                     u851:
  2192  0459  2C91               	goto	l1842
  2193  045A                     u850:
  2194  045A                     l1824:
  2195  045A  01C3               	clrf	___awdiv@counter
  2196  045B  0AC3               	incf	___awdiv@counter,f
  2197  045C  2C68               	goto	l1830
  2198  045D                     l1826:
  2199  045D  3001               	movlw	1
  2200  045E                     u865:
  2201  045E  1003               	clrc
  2202  045F  0DBE               	rlf	___awdiv@divisor,f
  2203  0460  0DBF               	rlf	___awdiv@divisor+1,f
  2204  0461  3EFF               	addlw	-1
  2205  0462  1D03               	skipz
  2206  0463  2C5E               	goto	u865
  2207  0464                     l1828:
  2208  0464  3001               	movlw	1
  2209  0465  00C2               	movwf	??___awdiv
  2210  0466  0842               	movf	??___awdiv,w
  2211  0467  07C3               	addwf	___awdiv@counter,f
  2212  0468                     l1830:
  2213  0468  1FBF               	btfss	___awdiv@divisor+1,7
  2214  0469  2C6B               	goto	u871
  2215  046A  2C6C               	goto	u870
  2216  046B                     u871:
  2217  046B  2C5D               	goto	l1826
  2218  046C                     u870:
  2219  046C                     l1832:
  2220  046C  3001               	movlw	1
  2221  046D                     u885:
  2222  046D  1003               	clrc
  2223  046E  0DC5               	rlf	___awdiv@quotient,f
  2224  046F  0DC6               	rlf	___awdiv@quotient+1,f
  2225  0470  3EFF               	addlw	-1
  2226  0471  1D03               	skipz
  2227  0472  2C6D               	goto	u885
  2228  0473  083F               	movf	___awdiv@divisor+1,w
  2229  0474  0241               	subwf	___awdiv@dividend+1,w
  2230  0475  1D03               	skipz
  2231  0476  2C79               	goto	u895
  2232  0477  083E               	movf	___awdiv@divisor,w
  2233  0478  0240               	subwf	___awdiv@dividend,w
  2234  0479                     u895:
  2235  0479  1C03               	skipc
  2236  047A  2C7C               	goto	u891
  2237  047B  2C7D               	goto	u890
  2238  047C                     u891:
  2239  047C  2C84               	goto	l1838
  2240  047D                     u890:
  2241  047D                     l1834:
  2242  047D  083E               	movf	___awdiv@divisor,w
  2243  047E  02C0               	subwf	___awdiv@dividend,f
  2244  047F  083F               	movf	___awdiv@divisor+1,w
  2245  0480  1C03               	skipc
  2246  0481  03C1               	decf	___awdiv@dividend+1,f
  2247  0482  02C1               	subwf	___awdiv@dividend+1,f
  2248  0483                     l1836:
  2249  0483  1445               	bsf	___awdiv@quotient,0
  2250  0484                     l1838:
  2251  0484  3001               	movlw	1
  2252  0485                     u905:
  2253  0485  1003               	clrc
  2254  0486  0CBF               	rrf	___awdiv@divisor+1,f
  2255  0487  0CBE               	rrf	___awdiv@divisor,f
  2256  0488  3EFF               	addlw	-1
  2257  0489  1D03               	skipz
  2258  048A  2C85               	goto	u905
  2259  048B                     l1840:
  2260  048B  3001               	movlw	1
  2261  048C  02C3               	subwf	___awdiv@counter,f
  2262  048D  1D03               	btfss	3,2
  2263  048E  2C90               	goto	u911
  2264  048F  2C91               	goto	u910
  2265  0490                     u911:
  2266  0490  2C6C               	goto	l1832
  2267  0491                     u910:
  2268  0491                     l1842:
  2269  0491  0844               	movf	___awdiv@sign,w
  2270  0492  1903               	btfsc	3,2
  2271  0493  2C95               	goto	u921
  2272  0494  2C96               	goto	u920
  2273  0495                     u921:
  2274  0495  2C9B               	goto	l1846
  2275  0496                     u920:
  2276  0496                     l1844:
  2277  0496  09C5               	comf	___awdiv@quotient,f
  2278  0497  09C6               	comf	___awdiv@quotient+1,f
  2279  0498  0AC5               	incf	___awdiv@quotient,f
  2280  0499  1903               	skipnz
  2281  049A  0AC6               	incf	___awdiv@quotient+1,f
  2282  049B                     l1846:
  2283  049B  0846               	movf	___awdiv@quotient+1,w
  2284  049C  00BF               	movwf	?___awdiv+1
  2285  049D  0845               	movf	___awdiv@quotient,w
  2286  049E  00BE               	movwf	?___awdiv
  2287  049F                     l627:
  2288  049F  0008               	return
  2289  04A0                     __end_of___awdiv:
  2290                           
  2291                           	psect	text4
  2292  0348                     __ptext4:	
  2293 ;; *************** function _valor_lux *****************
  2294 ;; Defined at:
  2295 ;;		line 343 in file "MASTERSPI.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  lux             4   14[BANK0 ] unsigned long 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  valor           4   19[BANK0 ] unsigned long 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2, status,0, pclath, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2309 ;;      Params:         0       4       0       0       0
  2310 ;;      Locals:         0       4       0       0       0
  2311 ;;      Temps:          0       1       0       0       0
  2312 ;;      Totals:         0       9       0       0       0
  2313 ;;Total ram usage:        9 bytes
  2314 ;; Hardware stack levels used: 1
  2315 ;; Hardware stack levels required when called: 4
  2316 ;; This function calls:
  2317 ;;		___lldiv
  2318 ;;		___llmod
  2319 ;; This function is called by:
  2320 ;;		_main
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324  0348                     _valor_lux:	
  2325                           ;psect for function _valor_lux
  2326                           
  2327  0348                     l1984:	
  2328                           ;incstack = 0
  2329                           ; Regs used in _valor_lux: [wreg+status,2+status,0+pclath+cstack]
  2330                           
  2331                           
  2332                           ;MASTERSPI.c: 343: void valor_lux (uint32_t lux);MASTERSPI.c: 344: {;MASTERSPI.c: 345:  
      +                                 uint32_t valor;;MASTERSPI.c: 347:         luz[0] = (uint8_t)(lux/10000);
  2333  0348  3000               	movlw	0
  2334  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2335  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2336  034B  00C1               	movwf	___lldiv@divisor+3
  2337  034C  3000               	movlw	0
  2338  034D  00C0               	movwf	___lldiv@divisor+2
  2339  034E  3027               	movlw	39
  2340  034F  00BF               	movwf	___lldiv@divisor+1
  2341  0350  3010               	movlw	16
  2342  0351  00BE               	movwf	___lldiv@divisor
  2343  0352  084F               	movf	valor_lux@lux+3,w
  2344  0353  00C5               	movwf	___lldiv@dividend+3
  2345  0354  084E               	movf	valor_lux@lux+2,w
  2346  0355  00C4               	movwf	___lldiv@dividend+2
  2347  0356  084D               	movf	valor_lux@lux+1,w
  2348  0357  00C3               	movwf	___lldiv@dividend+1
  2349  0358  084C               	movf	valor_lux@lux,w
  2350  0359  00C2               	movwf	___lldiv@dividend
  2351  035A  120A  118A  24A0  120A  118A  	fcall	___lldiv
  2352  035F  1283               	bcf	3,5	;RP0=0, select bank0
  2353  0360  1303               	bcf	3,6	;RP1=0, select bank0
  2354  0361  083E               	movf	?___lldiv,w
  2355  0362  00D0               	movwf	??_valor_lux
  2356  0363  0850               	movf	??_valor_lux,w
  2357  0364  00A0               	movwf	_luz
  2358                           
  2359                           ;MASTERSPI.c: 348:         valor = lux%10000;
  2360  0365  3000               	movlw	0
  2361  0366  00C1               	movwf	___llmod@divisor+3
  2362  0367  3000               	movlw	0
  2363  0368  00C0               	movwf	___llmod@divisor+2
  2364  0369  3027               	movlw	39
  2365  036A  00BF               	movwf	___llmod@divisor+1
  2366  036B  3010               	movlw	16
  2367  036C  00BE               	movwf	___llmod@divisor
  2368  036D  084F               	movf	valor_lux@lux+3,w
  2369  036E  00C5               	movwf	___llmod@dividend+3
  2370  036F  084E               	movf	valor_lux@lux+2,w
  2371  0370  00C4               	movwf	___llmod@dividend+2
  2372  0371  084D               	movf	valor_lux@lux+1,w
  2373  0372  00C3               	movwf	___llmod@dividend+1
  2374  0373  084C               	movf	valor_lux@lux,w
  2375  0374  00C2               	movwf	___llmod@dividend
  2376  0375  120A  118A  2621  120A  118A  	fcall	___llmod
  2377  037A  1283               	bcf	3,5	;RP0=0, select bank0
  2378  037B  1303               	bcf	3,6	;RP1=0, select bank0
  2379  037C  0841               	movf	?___llmod+3,w
  2380  037D  00D4               	movwf	valor_lux@valor+3
  2381  037E  0840               	movf	?___llmod+2,w
  2382  037F  00D3               	movwf	valor_lux@valor+2
  2383  0380  083F               	movf	?___llmod+1,w
  2384  0381  00D2               	movwf	valor_lux@valor+1
  2385  0382  083E               	movf	?___llmod,w
  2386  0383  00D1               	movwf	valor_lux@valor
  2387                           
  2388                           ;MASTERSPI.c: 350:         luz [1] = (uint8_t)(valor/1000);
  2389  0384  3000               	movlw	0
  2390  0385  00C1               	movwf	___lldiv@divisor+3
  2391  0386  3000               	movlw	0
  2392  0387  00C0               	movwf	___lldiv@divisor+2
  2393  0388  3003               	movlw	3
  2394  0389  00BF               	movwf	___lldiv@divisor+1
  2395  038A  30E8               	movlw	232
  2396  038B  00BE               	movwf	___lldiv@divisor
  2397  038C  0854               	movf	valor_lux@valor+3,w
  2398  038D  00C5               	movwf	___lldiv@dividend+3
  2399  038E  0853               	movf	valor_lux@valor+2,w
  2400  038F  00C4               	movwf	___lldiv@dividend+2
  2401  0390  0852               	movf	valor_lux@valor+1,w
  2402  0391  00C3               	movwf	___lldiv@dividend+1
  2403  0392  0851               	movf	valor_lux@valor,w
  2404  0393  00C2               	movwf	___lldiv@dividend
  2405  0394  120A  118A  24A0  120A  118A  	fcall	___lldiv
  2406  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2407  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2408  039B  083E               	movf	?___lldiv,w
  2409  039C  00D0               	movwf	??_valor_lux
  2410  039D  0850               	movf	??_valor_lux,w
  2411  039E  00A1               	movwf	_luz+1
  2412                           
  2413                           ;MASTERSPI.c: 351:         valor = valor%1000;
  2414  039F  3000               	movlw	0
  2415  03A0  00C1               	movwf	___llmod@divisor+3
  2416  03A1  3000               	movlw	0
  2417  03A2  00C0               	movwf	___llmod@divisor+2
  2418  03A3  3003               	movlw	3
  2419  03A4  00BF               	movwf	___llmod@divisor+1
  2420  03A5  30E8               	movlw	232
  2421  03A6  00BE               	movwf	___llmod@divisor
  2422  03A7  0854               	movf	valor_lux@valor+3,w
  2423  03A8  00C5               	movwf	___llmod@dividend+3
  2424  03A9  0853               	movf	valor_lux@valor+2,w
  2425  03AA  00C4               	movwf	___llmod@dividend+2
  2426  03AB  0852               	movf	valor_lux@valor+1,w
  2427  03AC  00C3               	movwf	___llmod@dividend+1
  2428  03AD  0851               	movf	valor_lux@valor,w
  2429  03AE  00C2               	movwf	___llmod@dividend
  2430  03AF  120A  118A  2621  120A  118A  	fcall	___llmod
  2431  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2432  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2433  03B6  0841               	movf	?___llmod+3,w
  2434  03B7  00D4               	movwf	valor_lux@valor+3
  2435  03B8  0840               	movf	?___llmod+2,w
  2436  03B9  00D3               	movwf	valor_lux@valor+2
  2437  03BA  083F               	movf	?___llmod+1,w
  2438  03BB  00D2               	movwf	valor_lux@valor+1
  2439  03BC  083E               	movf	?___llmod,w
  2440  03BD  00D1               	movwf	valor_lux@valor
  2441                           
  2442                           ;MASTERSPI.c: 353:         luz [2] = (uint8_t)(valor/100);
  2443  03BE  3000               	movlw	0
  2444  03BF  00C1               	movwf	___lldiv@divisor+3
  2445  03C0  3000               	movlw	0
  2446  03C1  00C0               	movwf	___lldiv@divisor+2
  2447  03C2  3000               	movlw	0
  2448  03C3  00BF               	movwf	___lldiv@divisor+1
  2449  03C4  3064               	movlw	100
  2450  03C5  00BE               	movwf	___lldiv@divisor
  2451  03C6  0854               	movf	valor_lux@valor+3,w
  2452  03C7  00C5               	movwf	___lldiv@dividend+3
  2453  03C8  0853               	movf	valor_lux@valor+2,w
  2454  03C9  00C4               	movwf	___lldiv@dividend+2
  2455  03CA  0852               	movf	valor_lux@valor+1,w
  2456  03CB  00C3               	movwf	___lldiv@dividend+1
  2457  03CC  0851               	movf	valor_lux@valor,w
  2458  03CD  00C2               	movwf	___lldiv@dividend
  2459  03CE  120A  118A  24A0  120A  118A  	fcall	___lldiv
  2460  03D3  1283               	bcf	3,5	;RP0=0, select bank0
  2461  03D4  1303               	bcf	3,6	;RP1=0, select bank0
  2462  03D5  083E               	movf	?___lldiv,w
  2463  03D6  00D0               	movwf	??_valor_lux
  2464  03D7  0850               	movf	??_valor_lux,w
  2465  03D8  00A2               	movwf	_luz+2
  2466                           
  2467                           ;MASTERSPI.c: 354:         valor = valor%100;
  2468  03D9  3000               	movlw	0
  2469  03DA  00C1               	movwf	___llmod@divisor+3
  2470  03DB  3000               	movlw	0
  2471  03DC  00C0               	movwf	___llmod@divisor+2
  2472  03DD  3000               	movlw	0
  2473  03DE  00BF               	movwf	___llmod@divisor+1
  2474  03DF  3064               	movlw	100
  2475  03E0  00BE               	movwf	___llmod@divisor
  2476  03E1  0854               	movf	valor_lux@valor+3,w
  2477  03E2  00C5               	movwf	___llmod@dividend+3
  2478  03E3  0853               	movf	valor_lux@valor+2,w
  2479  03E4  00C4               	movwf	___llmod@dividend+2
  2480  03E5  0852               	movf	valor_lux@valor+1,w
  2481  03E6  00C3               	movwf	___llmod@dividend+1
  2482  03E7  0851               	movf	valor_lux@valor,w
  2483  03E8  00C2               	movwf	___llmod@dividend
  2484  03E9  120A  118A  2621  120A  118A  	fcall	___llmod
  2485  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2486  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2487  03F0  0841               	movf	?___llmod+3,w
  2488  03F1  00D4               	movwf	valor_lux@valor+3
  2489  03F2  0840               	movf	?___llmod+2,w
  2490  03F3  00D3               	movwf	valor_lux@valor+2
  2491  03F4  083F               	movf	?___llmod+1,w
  2492  03F5  00D2               	movwf	valor_lux@valor+1
  2493  03F6  083E               	movf	?___llmod,w
  2494  03F7  00D1               	movwf	valor_lux@valor
  2495                           
  2496                           ;MASTERSPI.c: 356:         luz [3] = (uint8_t)(valor/10);
  2497  03F8  3000               	movlw	0
  2498  03F9  00C1               	movwf	___lldiv@divisor+3
  2499  03FA  3000               	movlw	0
  2500  03FB  00C0               	movwf	___lldiv@divisor+2
  2501  03FC  3000               	movlw	0
  2502  03FD  00BF               	movwf	___lldiv@divisor+1
  2503  03FE  300A               	movlw	10
  2504  03FF  00BE               	movwf	___lldiv@divisor
  2505  0400  0854               	movf	valor_lux@valor+3,w
  2506  0401  00C5               	movwf	___lldiv@dividend+3
  2507  0402  0853               	movf	valor_lux@valor+2,w
  2508  0403  00C4               	movwf	___lldiv@dividend+2
  2509  0404  0852               	movf	valor_lux@valor+1,w
  2510  0405  00C3               	movwf	___lldiv@dividend+1
  2511  0406  0851               	movf	valor_lux@valor,w
  2512  0407  00C2               	movwf	___lldiv@dividend
  2513  0408  120A  118A  24A0  120A  118A  	fcall	___lldiv
  2514  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2515  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2516  040F  083E               	movf	?___lldiv,w
  2517  0410  00D0               	movwf	??_valor_lux
  2518  0411  0850               	movf	??_valor_lux,w
  2519  0412  00A3               	movwf	_luz+3
  2520                           
  2521                           ;MASTERSPI.c: 357:         valor = valor%10;
  2522  0413  3000               	movlw	0
  2523  0414  00C1               	movwf	___llmod@divisor+3
  2524  0415  3000               	movlw	0
  2525  0416  00C0               	movwf	___llmod@divisor+2
  2526  0417  3000               	movlw	0
  2527  0418  00BF               	movwf	___llmod@divisor+1
  2528  0419  300A               	movlw	10
  2529  041A  00BE               	movwf	___llmod@divisor
  2530  041B  0854               	movf	valor_lux@valor+3,w
  2531  041C  00C5               	movwf	___llmod@dividend+3
  2532  041D  0853               	movf	valor_lux@valor+2,w
  2533  041E  00C4               	movwf	___llmod@dividend+2
  2534  041F  0852               	movf	valor_lux@valor+1,w
  2535  0420  00C3               	movwf	___llmod@dividend+1
  2536  0421  0851               	movf	valor_lux@valor,w
  2537  0422  00C2               	movwf	___llmod@dividend
  2538  0423  120A  118A  2621  120A  118A  	fcall	___llmod
  2539  0428  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0429  1303               	bcf	3,6	;RP1=0, select bank0
  2541  042A  0841               	movf	?___llmod+3,w
  2542  042B  00D4               	movwf	valor_lux@valor+3
  2543  042C  0840               	movf	?___llmod+2,w
  2544  042D  00D3               	movwf	valor_lux@valor+2
  2545  042E  083F               	movf	?___llmod+1,w
  2546  042F  00D2               	movwf	valor_lux@valor+1
  2547  0430  083E               	movf	?___llmod,w
  2548  0431  00D1               	movwf	valor_lux@valor
  2549  0432                     l1986:
  2550                           
  2551                           ;MASTERSPI.c: 359:         luz [4] = (uint8_t)(valor);
  2552  0432  0851               	movf	valor_lux@valor,w
  2553  0433  00D0               	movwf	??_valor_lux
  2554  0434  0850               	movf	??_valor_lux,w
  2555  0435  00A4               	movwf	_luz+4
  2556  0436                     l260:
  2557  0436  0008               	return
  2558  0437                     __end_of_valor_lux:
  2559                           
  2560                           	psect	text5
  2561  0621                     __ptext5:	
  2562 ;; *************** function ___llmod *****************
  2563 ;; Defined at:
  2564 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\llmod.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  divisor         4    0[BANK0 ] unsigned long 
  2567 ;;  dividend        4    4[BANK0 ] unsigned long 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  counter         1    9[BANK0 ] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  4    0[BANK0 ] unsigned long 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2579 ;;      Params:         0       8       0       0       0
  2580 ;;      Locals:         0       1       0       0       0
  2581 ;;      Temps:          0       1       0       0       0
  2582 ;;      Totals:         0      10       0       0       0
  2583 ;;Total ram usage:       10 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; Hardware stack levels required when called: 3
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_valor_lux
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593  0621                     ___llmod:	
  2594                           ;psect for function ___llmod
  2595                           
  2596  0621                     l1888:	
  2597                           ;incstack = 0
  2598                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  2599                           
  2600  0621  1283               	bcf	3,5	;RP0=0, select bank0
  2601  0622  1303               	bcf	3,6	;RP1=0, select bank0
  2602  0623  0841               	movf	___llmod@divisor+3,w
  2603  0624  0440               	iorwf	___llmod@divisor+2,w
  2604  0625  043F               	iorwf	___llmod@divisor+1,w
  2605  0626  043E               	iorwf	___llmod@divisor,w
  2606  0627  1903               	skipnz
  2607  0628  2E2A               	goto	u1021
  2608  0629  2E2B               	goto	u1020
  2609  062A                     u1021:
  2610  062A  2E6E               	goto	l1904
  2611  062B                     u1020:
  2612  062B                     l1890:
  2613  062B  01C7               	clrf	___llmod@counter
  2614  062C  0AC7               	incf	___llmod@counter,f
  2615  062D  2E3B               	goto	l1894
  2616  062E                     l1892:
  2617  062E  3001               	movlw	1
  2618  062F  00C6               	movwf	??___llmod
  2619  0630                     u1035:
  2620  0630  1003               	clrc
  2621  0631  0DBE               	rlf	___llmod@divisor,f
  2622  0632  0DBF               	rlf	___llmod@divisor+1,f
  2623  0633  0DC0               	rlf	___llmod@divisor+2,f
  2624  0634  0DC1               	rlf	___llmod@divisor+3,f
  2625  0635  0BC6               	decfsz	??___llmod,f
  2626  0636  2E30               	goto	u1035
  2627  0637  3001               	movlw	1
  2628  0638  00C6               	movwf	??___llmod
  2629  0639  0846               	movf	??___llmod,w
  2630  063A  07C7               	addwf	___llmod@counter,f
  2631  063B                     l1894:
  2632  063B  1FC1               	btfss	___llmod@divisor+3,7
  2633  063C  2E3E               	goto	u1041
  2634  063D  2E3F               	goto	u1040
  2635  063E                     u1041:
  2636  063E  2E2E               	goto	l1892
  2637  063F                     u1040:
  2638  063F                     l1896:
  2639  063F  0841               	movf	___llmod@divisor+3,w
  2640  0640  0245               	subwf	___llmod@dividend+3,w
  2641  0641  1D03               	skipz
  2642  0642  2E4D               	goto	u1055
  2643  0643  0840               	movf	___llmod@divisor+2,w
  2644  0644  0244               	subwf	___llmod@dividend+2,w
  2645  0645  1D03               	skipz
  2646  0646  2E4D               	goto	u1055
  2647  0647  083F               	movf	___llmod@divisor+1,w
  2648  0648  0243               	subwf	___llmod@dividend+1,w
  2649  0649  1D03               	skipz
  2650  064A  2E4D               	goto	u1055
  2651  064B  083E               	movf	___llmod@divisor,w
  2652  064C  0242               	subwf	___llmod@dividend,w
  2653  064D                     u1055:
  2654  064D  1C03               	skipc
  2655  064E  2E50               	goto	u1051
  2656  064F  2E51               	goto	u1050
  2657  0650                     u1051:
  2658  0650  2E5F               	goto	l1900
  2659  0651                     u1050:
  2660  0651                     l1898:
  2661  0651  083E               	movf	___llmod@divisor,w
  2662  0652  02C2               	subwf	___llmod@dividend,f
  2663  0653  083F               	movf	___llmod@divisor+1,w
  2664  0654  1C03               	skipc
  2665  0655  0F3F               	incfsz	___llmod@divisor+1,w
  2666  0656  02C3               	subwf	___llmod@dividend+1,f
  2667  0657  0840               	movf	___llmod@divisor+2,w
  2668  0658  1C03               	skipc
  2669  0659  0F40               	incfsz	___llmod@divisor+2,w
  2670  065A  02C4               	subwf	___llmod@dividend+2,f
  2671  065B  0841               	movf	___llmod@divisor+3,w
  2672  065C  1C03               	skipc
  2673  065D  0F41               	incfsz	___llmod@divisor+3,w
  2674  065E  02C5               	subwf	___llmod@dividend+3,f
  2675  065F                     l1900:
  2676  065F  3001               	movlw	1
  2677  0660                     u1065:
  2678  0660  1003               	clrc
  2679  0661  0CC1               	rrf	___llmod@divisor+3,f
  2680  0662  0CC0               	rrf	___llmod@divisor+2,f
  2681  0663  0CBF               	rrf	___llmod@divisor+1,f
  2682  0664  0CBE               	rrf	___llmod@divisor,f
  2683  0665  3EFF               	addlw	-1
  2684  0666  1D03               	skipz
  2685  0667  2E60               	goto	u1065
  2686  0668                     l1902:
  2687  0668  3001               	movlw	1
  2688  0669  02C7               	subwf	___llmod@counter,f
  2689  066A  1D03               	btfss	3,2
  2690  066B  2E6D               	goto	u1071
  2691  066C  2E6E               	goto	u1070
  2692  066D                     u1071:
  2693  066D  2E3F               	goto	l1896
  2694  066E                     u1070:
  2695  066E                     l1904:
  2696  066E  0845               	movf	___llmod@dividend+3,w
  2697  066F  00C1               	movwf	?___llmod+3
  2698  0670  0844               	movf	___llmod@dividend+2,w
  2699  0671  00C0               	movwf	?___llmod+2
  2700  0672  0843               	movf	___llmod@dividend+1,w
  2701  0673  00BF               	movwf	?___llmod+1
  2702  0674  0842               	movf	___llmod@dividend,w
  2703  0675  00BE               	movwf	?___llmod
  2704  0676                     l696:
  2705  0676  0008               	return
  2706  0677                     __end_of___llmod:
  2707                           
  2708                           	psect	text6
  2709  04A0                     __ptext6:	
  2710 ;; *************** function ___lldiv *****************
  2711 ;; Defined at:
  2712 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\__lldiv.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;  divisor         4    0[BANK0 ] unsigned long 
  2715 ;;  dividend        4    4[BANK0 ] unsigned long 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  quotient        4    9[BANK0 ] unsigned long 
  2718 ;;  counter         1   13[BANK0 ] unsigned char 
  2719 ;; Return value:  Size  Location     Type
  2720 ;;                  4    0[BANK0 ] unsigned long 
  2721 ;; Registers used:
  2722 ;;		wreg, status,2, status,0
  2723 ;; Tracked objects:
  2724 ;;		On entry : 0/0
  2725 ;;		On exit  : 0/0
  2726 ;;		Unchanged: 0/0
  2727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2728 ;;      Params:         0       8       0       0       0
  2729 ;;      Locals:         0       5       0       0       0
  2730 ;;      Temps:          0       1       0       0       0
  2731 ;;      Totals:         0      14       0       0       0
  2732 ;;Total ram usage:       14 bytes
  2733 ;; Hardware stack levels used: 1
  2734 ;; Hardware stack levels required when called: 3
  2735 ;; This function calls:
  2736 ;;		Nothing
  2737 ;; This function is called by:
  2738 ;;		_valor_lux
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742  04A0                     ___lldiv:	
  2743                           ;psect for function ___lldiv
  2744                           
  2745  04A0                     l1782:	
  2746                           ;incstack = 0
  2747                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2748                           
  2749  04A0  3000               	movlw	0
  2750  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  2751  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  2752  04A3  00CA               	movwf	___lldiv@quotient+3
  2753  04A4  3000               	movlw	0
  2754  04A5  00C9               	movwf	___lldiv@quotient+2
  2755  04A6  3000               	movlw	0
  2756  04A7  00C8               	movwf	___lldiv@quotient+1
  2757  04A8  3000               	movlw	0
  2758  04A9  00C7               	movwf	___lldiv@quotient
  2759  04AA  0841               	movf	___lldiv@divisor+3,w
  2760  04AB  0440               	iorwf	___lldiv@divisor+2,w
  2761  04AC  043F               	iorwf	___lldiv@divisor+1,w
  2762  04AD  043E               	iorwf	___lldiv@divisor,w
  2763  04AE  1903               	skipnz
  2764  04AF  2CB1               	goto	u761
  2765  04B0  2CB2               	goto	u760
  2766  04B1                     u761:
  2767  04B1  2CFF               	goto	l1802
  2768  04B2                     u760:
  2769  04B2                     l1784:
  2770  04B2  01CB               	clrf	___lldiv@counter
  2771  04B3  0ACB               	incf	___lldiv@counter,f
  2772  04B4  2CC2               	goto	l1788
  2773  04B5                     l1786:
  2774  04B5  3001               	movlw	1
  2775  04B6  00C6               	movwf	??___lldiv
  2776  04B7                     u775:
  2777  04B7  1003               	clrc
  2778  04B8  0DBE               	rlf	___lldiv@divisor,f
  2779  04B9  0DBF               	rlf	___lldiv@divisor+1,f
  2780  04BA  0DC0               	rlf	___lldiv@divisor+2,f
  2781  04BB  0DC1               	rlf	___lldiv@divisor+3,f
  2782  04BC  0BC6               	decfsz	??___lldiv,f
  2783  04BD  2CB7               	goto	u775
  2784  04BE  3001               	movlw	1
  2785  04BF  00C6               	movwf	??___lldiv
  2786  04C0  0846               	movf	??___lldiv,w
  2787  04C1  07CB               	addwf	___lldiv@counter,f
  2788  04C2                     l1788:
  2789  04C2  1FC1               	btfss	___lldiv@divisor+3,7
  2790  04C3  2CC5               	goto	u781
  2791  04C4  2CC6               	goto	u780
  2792  04C5                     u781:
  2793  04C5  2CB5               	goto	l1786
  2794  04C6                     u780:
  2795  04C6                     l1790:
  2796  04C6  3001               	movlw	1
  2797  04C7  00C6               	movwf	??___lldiv
  2798  04C8                     u795:
  2799  04C8  1003               	clrc
  2800  04C9  0DC7               	rlf	___lldiv@quotient,f
  2801  04CA  0DC8               	rlf	___lldiv@quotient+1,f
  2802  04CB  0DC9               	rlf	___lldiv@quotient+2,f
  2803  04CC  0DCA               	rlf	___lldiv@quotient+3,f
  2804  04CD  0BC6               	decfsz	??___lldiv,f
  2805  04CE  2CC8               	goto	u795
  2806  04CF                     l1792:
  2807  04CF  0841               	movf	___lldiv@divisor+3,w
  2808  04D0  0245               	subwf	___lldiv@dividend+3,w
  2809  04D1  1D03               	skipz
  2810  04D2  2CDD               	goto	u805
  2811  04D3  0840               	movf	___lldiv@divisor+2,w
  2812  04D4  0244               	subwf	___lldiv@dividend+2,w
  2813  04D5  1D03               	skipz
  2814  04D6  2CDD               	goto	u805
  2815  04D7  083F               	movf	___lldiv@divisor+1,w
  2816  04D8  0243               	subwf	___lldiv@dividend+1,w
  2817  04D9  1D03               	skipz
  2818  04DA  2CDD               	goto	u805
  2819  04DB  083E               	movf	___lldiv@divisor,w
  2820  04DC  0242               	subwf	___lldiv@dividend,w
  2821  04DD                     u805:
  2822  04DD  1C03               	skipc
  2823  04DE  2CE0               	goto	u801
  2824  04DF  2CE1               	goto	u800
  2825  04E0                     u801:
  2826  04E0  2CF0               	goto	l1798
  2827  04E1                     u800:
  2828  04E1                     l1794:
  2829  04E1  083E               	movf	___lldiv@divisor,w
  2830  04E2  02C2               	subwf	___lldiv@dividend,f
  2831  04E3  083F               	movf	___lldiv@divisor+1,w
  2832  04E4  1C03               	skipc
  2833  04E5  0F3F               	incfsz	___lldiv@divisor+1,w
  2834  04E6  02C3               	subwf	___lldiv@dividend+1,f
  2835  04E7  0840               	movf	___lldiv@divisor+2,w
  2836  04E8  1C03               	skipc
  2837  04E9  0F40               	incfsz	___lldiv@divisor+2,w
  2838  04EA  02C4               	subwf	___lldiv@dividend+2,f
  2839  04EB  0841               	movf	___lldiv@divisor+3,w
  2840  04EC  1C03               	skipc
  2841  04ED  0F41               	incfsz	___lldiv@divisor+3,w
  2842  04EE  02C5               	subwf	___lldiv@dividend+3,f
  2843  04EF                     l1796:
  2844  04EF  1447               	bsf	___lldiv@quotient,0
  2845  04F0                     l1798:
  2846  04F0  3001               	movlw	1
  2847  04F1                     u815:
  2848  04F1  1003               	clrc
  2849  04F2  0CC1               	rrf	___lldiv@divisor+3,f
  2850  04F3  0CC0               	rrf	___lldiv@divisor+2,f
  2851  04F4  0CBF               	rrf	___lldiv@divisor+1,f
  2852  04F5  0CBE               	rrf	___lldiv@divisor,f
  2853  04F6  3EFF               	addlw	-1
  2854  04F7  1D03               	skipz
  2855  04F8  2CF1               	goto	u815
  2856  04F9                     l1800:
  2857  04F9  3001               	movlw	1
  2858  04FA  02CB               	subwf	___lldiv@counter,f
  2859  04FB  1D03               	btfss	3,2
  2860  04FC  2CFE               	goto	u821
  2861  04FD  2CFF               	goto	u820
  2862  04FE                     u821:
  2863  04FE  2CC6               	goto	l1790
  2864  04FF                     u820:
  2865  04FF                     l1802:
  2866  04FF  084A               	movf	___lldiv@quotient+3,w
  2867  0500  00C1               	movwf	?___lldiv+3
  2868  0501  0849               	movf	___lldiv@quotient+2,w
  2869  0502  00C0               	movwf	?___lldiv+2
  2870  0503  0848               	movf	___lldiv@quotient+1,w
  2871  0504  00BF               	movwf	?___lldiv+1
  2872  0505  0847               	movf	___lldiv@quotient,w
  2873  0506  00BE               	movwf	?___lldiv
  2874  0507                     l510:
  2875  0507  0008               	return
  2876  0508                     __end_of___lldiv:
  2877                           
  2878                           	psect	text7
  2879  06C1                     __ptext7:	
  2880 ;; *************** function _setup *****************
  2881 ;; Defined at:
  2882 ;;		line 297 in file "MASTERSPI.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;		None
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;		None
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2896 ;;      Params:         0       0       0       0       0
  2897 ;;      Locals:         0       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0
  2899 ;;      Totals:         0       0       0       0       0
  2900 ;;Total ram usage:        0 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 6
  2903 ;; This function calls:
  2904 ;;		_Lcd_Init
  2905 ;;		_init_SPI
  2906 ;;		_init_UART
  2907 ;;		_init_osc_MHz
  2908 ;;		_pwm_init
  2909 ;;		_tmr0_init
  2910 ;;		_tmr0_reload
  2911 ;; This function is called by:
  2912 ;;		_main
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916  06C1                     _setup:	
  2917                           ;psect for function _setup
  2918                           
  2919  06C1                     l1934:	
  2920                           ;incstack = 0
  2921                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2922                           
  2923                           
  2924                           ;MASTERSPI.c: 298:     ANSEL = 0;
  2925  06C1  1683               	bsf	3,5	;RP0=1, select bank3
  2926  06C2  1703               	bsf	3,6	;RP1=1, select bank3
  2927  06C3  0188               	clrf	8	;volatile
  2928                           
  2929                           ;MASTERSPI.c: 299:     ANSELH = 0;
  2930  06C4  0189               	clrf	9	;volatile
  2931                           
  2932                           ;MASTERSPI.c: 300:     TRISD = 0;
  2933  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  2934  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  2935  06C7  0188               	clrf	8	;volatile
  2936                           
  2937                           ;MASTERSPI.c: 301:     PORTB = 0;
  2938  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2939  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2940  06CA  0186               	clrf	6	;volatile
  2941                           
  2942                           ;MASTERSPI.c: 302:     PORTD = 0;
  2943  06CB  0188               	clrf	8	;volatile
  2944                           
  2945                           ;MASTERSPI.c: 303:     TRISC = 0;
  2946  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  2947  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  2948  06CE  0187               	clrf	7	;volatile
  2949  06CF                     l1936:
  2950                           
  2951                           ;MASTERSPI.c: 304:     TRISCbits.TRISC7 = 1;
  2952  06CF  1787               	bsf	7,7	;volatile
  2953                           
  2954                           ;MASTERSPI.c: 305:     PORTC = 0;
  2955  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  2956  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  2957  06D2  0187               	clrf	7	;volatile
  2958                           
  2959                           ;MASTERSPI.c: 306:     TRISE = 0;
  2960  06D3  1683               	bsf	3,5	;RP0=1, select bank1
  2961  06D4  1303               	bcf	3,6	;RP1=0, select bank1
  2962  06D5  0189               	clrf	9	;volatile
  2963                           
  2964                           ;MASTERSPI.c: 307:     TRISB = 0;
  2965  06D6  0186               	clrf	6	;volatile
  2966  06D7                     l1938:
  2967                           
  2968                           ;MASTERSPI.c: 308:     TRISA = 0b00100000;
  2969  06D7  3020               	movlw	32
  2970  06D8  0085               	movwf	5	;volatile
  2971  06D9                     l1940:
  2972                           
  2973                           ;MASTERSPI.c: 309:     PORTA = 0;
  2974  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  2975  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  2976  06DB  0185               	clrf	5	;volatile
  2977  06DC                     l1942:
  2978                           
  2979                           ;MASTERSPI.c: 313:     pwm_init(1);
  2980  06DC  3001               	movlw	1
  2981  06DD  120A  118A  2749  120A  118A  	fcall	_pwm_init
  2982  06E2                     l1944:
  2983                           
  2984                           ;MASTERSPI.c: 314:     init_osc_MHz (1);
  2985  06E2  3001               	movlw	1
  2986  06E3  120A  118A  2708  120A  118A  	fcall	_init_osc_MHz
  2987  06E8                     l1946:
  2988                           
  2989                           ;MASTERSPI.c: 316:     init_SPI ();
  2990  06E8  120A  158A  27E6  120A  118A  	fcall	_init_SPI
  2991  06ED                     l1948:
  2992                           
  2993                           ;MASTERSPI.c: 317:     init_UART();
  2994  06ED  120A  158A  276C  120A  118A  	fcall	_init_UART
  2995  06F2                     l1950:
  2996                           
  2997                           ;MASTERSPI.c: 319:     tmr0_init (7);
  2998  06F2  3007               	movlw	7
  2999  06F3  120A  118A  2508  120A  118A  	fcall	_tmr0_init
  3000  06F8                     l1952:
  3001                           
  3002                           ;MASTERSPI.c: 320:     tmr0_reload();
  3003  06F8  120A  158A  2732  120A  118A  	fcall	_tmr0_reload
  3004  06FD                     l1954:
  3005                           
  3006                           ;MASTERSPI.c: 321:     Lcd_Init();
  3007  06FD  120A  118A  2677  120A  118A  	fcall	_Lcd_Init
  3008  0702                     l1956:
  3009                           
  3010                           ;MASTERSPI.c: 323:     INTCONbits.GIE = 1;
  3011  0702  178B               	bsf	11,7	;volatile
  3012  0703                     l1958:
  3013                           
  3014                           ;MASTERSPI.c: 324:     INTCONbits.PEIE = 1;
  3015  0703  170B               	bsf	11,6	;volatile
  3016  0704                     l1960:
  3017                           
  3018                           ;MASTERSPI.c: 325:     PIE1bits.RCIE = 1;
  3019  0704  1683               	bsf	3,5	;RP0=1, select bank1
  3020  0705  1303               	bcf	3,6	;RP1=0, select bank1
  3021  0706  168C               	bsf	12,5	;volatile
  3022  0707                     l254:
  3023  0707  0008               	return
  3024  0708                     __end_of_setup:
  3025                           
  3026                           	psect	text8
  3027  0F32                     __ptext8:	
  3028 ;; *************** function _tmr0_reload *****************
  3029 ;; Defined at:
  3030 ;;		line 63 in file "TIMER0.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;		None
  3035 ;; Return value:  Size  Location     Type
  3036 ;;                  1    wreg      void 
  3037 ;; Registers used:
  3038 ;;		wreg
  3039 ;; Tracked objects:
  3040 ;;		On entry : 0/0
  3041 ;;		On exit  : 0/0
  3042 ;;		Unchanged: 0/0
  3043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3044 ;;      Params:         0       0       0       0       0
  3045 ;;      Locals:         0       0       0       0       0
  3046 ;;      Temps:          0       0       0       0       0
  3047 ;;      Totals:         0       0       0       0       0
  3048 ;;Total ram usage:        0 bytes
  3049 ;; Hardware stack levels used: 1
  3050 ;; Hardware stack levels required when called: 3
  3051 ;; This function calls:
  3052 ;;		Nothing
  3053 ;; This function is called by:
  3054 ;;		_setup
  3055 ;; This function uses a non-reentrant model
  3056 ;;
  3057                           
  3058  0F32                     _tmr0_reload:	
  3059                           ;psect for function _tmr0_reload
  3060                           
  3061  0F32                     l1682:	
  3062                           ;incstack = 0
  3063                           ; Regs used in _tmr0_reload: [wreg]
  3064                           
  3065                           
  3066                           ;TIMER0.c: 65:   TMR0 = 246;;
  3067  0F32  30F6               	movlw	246
  3068  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  3070  0F35  0081               	movwf	1	;volatile
  3071  0F36                     l1684:
  3072                           
  3073                           ;TIMER0.c: 66:   INTCONbits.T0IF = 0;
  3074  0F36  110B               	bcf	11,2	;volatile
  3075  0F37                     l35:
  3076  0F37  0008               	return
  3077  0F38                     __end_of_tmr0_reload:
  3078                           
  3079                           	psect	text9
  3080  0508                     __ptext9:	
  3081 ;; *************** function _tmr0_init *****************
  3082 ;; Defined at:
  3083 ;;		line 6 in file "TIMER0.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  prescaler       1    wreg     unsigned char 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  prescaler       1    2[BANK0 ] unsigned char 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      void 
  3090 ;; Registers used:
  3091 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3097 ;;      Params:         0       0       0       0       0
  3098 ;;      Locals:         0       1       0       0       0
  3099 ;;      Temps:          0       2       0       0       0
  3100 ;;      Totals:         0       3       0       0       0
  3101 ;;Total ram usage:        3 bytes
  3102 ;; Hardware stack levels used: 1
  3103 ;; Hardware stack levels required when called: 3
  3104 ;; This function calls:
  3105 ;;		Nothing
  3106 ;; This function is called by:
  3107 ;;		_setup
  3108 ;; This function uses a non-reentrant model
  3109 ;;
  3110                           
  3111  0508                     _tmr0_init:	
  3112                           ;psect for function _tmr0_init
  3113                           
  3114                           
  3115                           ;incstack = 0
  3116                           ; Regs used in _tmr0_init: [wreg-fsr0h+status,2+status,0]
  3117                           ;tmr0_init@prescaler stored from wreg
  3118  0508  1283               	bcf	3,5	;RP0=0, select bank0
  3119  0509  1303               	bcf	3,6	;RP1=0, select bank0
  3120  050A  00C0               	movwf	tmr0_init@prescaler
  3121  050B                     l1674:
  3122                           
  3123                           ;TIMER0.c: 6: void tmr0_init (uint8_t prescaler);TIMER0.c: 7: {;TIMER0.c: 8:     INTCONb
      +                          its.T0IE = 1;
  3124  050B  168B               	bsf	11,5	;volatile
  3125                           
  3126                           ;TIMER0.c: 10:     OPTION_REGbits.PSA = 0;
  3127  050C  1683               	bsf	3,5	;RP0=1, select bank1
  3128  050D  1303               	bcf	3,6	;RP1=0, select bank1
  3129  050E  1181               	bcf	1,3	;volatile
  3130                           
  3131                           ;TIMER0.c: 11:     OPTION_REGbits.T0CS = 0;
  3132  050F  1281               	bcf	1,5	;volatile
  3133                           
  3134                           ;TIMER0.c: 12:     OPTION_REGbits.T0SE = 0;
  3135  0510  1201               	bcf	1,4	;volatile
  3136                           
  3137                           ;TIMER0.c: 14:     switch(prescaler){
  3138  0511  2D48               	goto	l1676
  3139  0512                     l22:	
  3140                           ;TIMER0.c: 15:         case 0:
  3141                           
  3142                           
  3143                           ;TIMER0.c: 16:             OPTION_REGbits.PS2 = 0;
  3144  0512  1683               	bsf	3,5	;RP0=1, select bank1
  3145  0513  1303               	bcf	3,6	;RP1=0, select bank1
  3146  0514  1101               	bcf	1,2	;volatile
  3147                           
  3148                           ;TIMER0.c: 17:             OPTION_REGbits.PS1 = 0;
  3149  0515  1081               	bcf	1,1	;volatile
  3150                           
  3151                           ;TIMER0.c: 18:             OPTION_REGbits.PS0 = 0;
  3152  0516  1001               	bcf	1,0	;volatile
  3153                           
  3154                           ;TIMER0.c: 19:             break;
  3155  0517  2D6C               	goto	l32
  3156  0518                     l24:	
  3157                           ;TIMER0.c: 20:         case 1:
  3158                           
  3159                           
  3160                           ;TIMER0.c: 21:             OPTION_REGbits.PS2 = 0;
  3161  0518  1683               	bsf	3,5	;RP0=1, select bank1
  3162  0519  1303               	bcf	3,6	;RP1=0, select bank1
  3163  051A  1101               	bcf	1,2	;volatile
  3164                           
  3165                           ;TIMER0.c: 22:             OPTION_REGbits.PS1 = 0;
  3166  051B  1081               	bcf	1,1	;volatile
  3167                           
  3168                           ;TIMER0.c: 23:             OPTION_REGbits.PS0 = 1;
  3169  051C  1401               	bsf	1,0	;volatile
  3170                           
  3171                           ;TIMER0.c: 24:             break;
  3172  051D  2D6C               	goto	l32
  3173  051E                     l25:	
  3174                           ;TIMER0.c: 25:         case 2:
  3175                           
  3176                           
  3177                           ;TIMER0.c: 26:             OPTION_REGbits.PS2 = 0;
  3178  051E  1683               	bsf	3,5	;RP0=1, select bank1
  3179  051F  1303               	bcf	3,6	;RP1=0, select bank1
  3180  0520  1101               	bcf	1,2	;volatile
  3181                           
  3182                           ;TIMER0.c: 27:             OPTION_REGbits.PS1 = 1;
  3183  0521  1481               	bsf	1,1	;volatile
  3184                           
  3185                           ;TIMER0.c: 28:             OPTION_REGbits.PS0 = 0;
  3186  0522  1001               	bcf	1,0	;volatile
  3187                           
  3188                           ;TIMER0.c: 29:             break;
  3189  0523  2D6C               	goto	l32
  3190  0524                     l26:	
  3191                           ;TIMER0.c: 30:         case 3:
  3192                           
  3193                           
  3194                           ;TIMER0.c: 31:             OPTION_REGbits.PS2 = 0;
  3195  0524  1683               	bsf	3,5	;RP0=1, select bank1
  3196  0525  1303               	bcf	3,6	;RP1=0, select bank1
  3197  0526  1101               	bcf	1,2	;volatile
  3198                           
  3199                           ;TIMER0.c: 32:             OPTION_REGbits.PS1 = 1;
  3200  0527  1481               	bsf	1,1	;volatile
  3201                           
  3202                           ;TIMER0.c: 33:             OPTION_REGbits.PS0 = 1;
  3203  0528  1401               	bsf	1,0	;volatile
  3204                           
  3205                           ;TIMER0.c: 34:             break;
  3206  0529  2D6C               	goto	l32
  3207  052A                     l27:	
  3208                           ;TIMER0.c: 35:         case 4:
  3209                           
  3210                           
  3211                           ;TIMER0.c: 36:             OPTION_REGbits.PS2 = 1;
  3212  052A  1683               	bsf	3,5	;RP0=1, select bank1
  3213  052B  1303               	bcf	3,6	;RP1=0, select bank1
  3214  052C  1501               	bsf	1,2	;volatile
  3215                           
  3216                           ;TIMER0.c: 37:             OPTION_REGbits.PS1 = 0;
  3217  052D  1081               	bcf	1,1	;volatile
  3218                           
  3219                           ;TIMER0.c: 38:             OPTION_REGbits.PS0 = 0;
  3220  052E  1001               	bcf	1,0	;volatile
  3221                           
  3222                           ;TIMER0.c: 39:             break;
  3223  052F  2D6C               	goto	l32
  3224  0530                     l28:	
  3225                           ;TIMER0.c: 40:         case 5:
  3226                           
  3227                           
  3228                           ;TIMER0.c: 41:             OPTION_REGbits.PS2 = 1;
  3229  0530  1683               	bsf	3,5	;RP0=1, select bank1
  3230  0531  1303               	bcf	3,6	;RP1=0, select bank1
  3231  0532  1501               	bsf	1,2	;volatile
  3232                           
  3233                           ;TIMER0.c: 42:             OPTION_REGbits.PS1 = 0;
  3234  0533  1081               	bcf	1,1	;volatile
  3235                           
  3236                           ;TIMER0.c: 43:             OPTION_REGbits.PS0 = 1;
  3237  0534  1401               	bsf	1,0	;volatile
  3238                           
  3239                           ;TIMER0.c: 44:             break;
  3240  0535  2D6C               	goto	l32
  3241  0536                     l29:	
  3242                           ;TIMER0.c: 45:         case 6:
  3243                           
  3244                           
  3245                           ;TIMER0.c: 46:             OPTION_REGbits.PS2 = 1;
  3246  0536  1683               	bsf	3,5	;RP0=1, select bank1
  3247  0537  1303               	bcf	3,6	;RP1=0, select bank1
  3248  0538  1501               	bsf	1,2	;volatile
  3249                           
  3250                           ;TIMER0.c: 47:             OPTION_REGbits.PS1 = 1;
  3251  0539  1481               	bsf	1,1	;volatile
  3252                           
  3253                           ;TIMER0.c: 48:             OPTION_REGbits.PS0 = 0;
  3254  053A  1001               	bcf	1,0	;volatile
  3255                           
  3256                           ;TIMER0.c: 49:             break;
  3257  053B  2D6C               	goto	l32
  3258  053C                     l30:	
  3259                           ;TIMER0.c: 50:         case 7:
  3260                           
  3261                           
  3262                           ;TIMER0.c: 51:             OPTION_REGbits.PS2 = 1;
  3263  053C  1683               	bsf	3,5	;RP0=1, select bank1
  3264  053D  1303               	bcf	3,6	;RP1=0, select bank1
  3265  053E  1501               	bsf	1,2	;volatile
  3266                           
  3267                           ;TIMER0.c: 52:             OPTION_REGbits.PS1 = 1;
  3268  053F  1481               	bsf	1,1	;volatile
  3269                           
  3270                           ;TIMER0.c: 53:             OPTION_REGbits.PS0 = 1;
  3271  0540  1401               	bsf	1,0	;volatile
  3272                           
  3273                           ;TIMER0.c: 54:             break;
  3274  0541  2D6C               	goto	l32
  3275  0542                     l31:	
  3276                           ;TIMER0.c: 55:         default:
  3277                           
  3278                           
  3279                           ;TIMER0.c: 56:             OPTION_REGbits.PS2 = 1;
  3280  0542  1683               	bsf	3,5	;RP0=1, select bank1
  3281  0543  1303               	bcf	3,6	;RP1=0, select bank1
  3282  0544  1501               	bsf	1,2	;volatile
  3283                           
  3284                           ;TIMER0.c: 57:             OPTION_REGbits.PS1 = 1;
  3285  0545  1481               	bsf	1,1	;volatile
  3286                           
  3287                           ;TIMER0.c: 58:             OPTION_REGbits.PS0 = 1;
  3288  0546  1401               	bsf	1,0	;volatile
  3289                           
  3290                           ;TIMER0.c: 60:     }
  3291  0547  2D6C               	goto	l32
  3292  0548                     l1676:
  3293  0548  1283               	bcf	3,5	;RP0=0, select bank0
  3294  0549  1303               	bcf	3,6	;RP1=0, select bank0
  3295  054A  0840               	movf	tmr0_init@prescaler,w
  3296  054B  00BE               	movwf	??_tmr0_init
  3297  054C  01BF               	clrf	??_tmr0_init+1
  3298                           
  3299                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3300                           ; Switch size 1, requested type "simple"
  3301                           ; Number of cases is 1, Range of values is 0 to 0
  3302                           ; switch strategies available:
  3303                           ; Name         Instructions Cycles
  3304                           ; simple_byte            4     3 (average)
  3305                           ; direct_byte           11     8 (fixed)
  3306                           ; jumptable            260     6 (fixed)
  3307                           ;	Chosen strategy is simple_byte
  3308  054D  083F               	movf	??_tmr0_init+1,w
  3309  054E  3A00               	xorlw	0	; case 0
  3310  054F  1903               	skipnz
  3311  0550  2D52               	goto	l2306
  3312  0551  2D42               	goto	l31
  3313  0552                     l2306:
  3314                           
  3315                           ; Switch size 1, requested type "simple"
  3316                           ; Number of cases is 8, Range of values is 0 to 7
  3317                           ; switch strategies available:
  3318                           ; Name         Instructions Cycles
  3319                           ; simple_byte           25    13 (average)
  3320                           ; direct_byte           32     8 (fixed)
  3321                           ; jumptable            260     6 (fixed)
  3322                           ;	Chosen strategy is simple_byte
  3323  0552  083E               	movf	??_tmr0_init,w
  3324  0553  3A00               	xorlw	0	; case 0
  3325  0554  1903               	skipnz
  3326  0555  2D12               	goto	l22
  3327  0556  3A01               	xorlw	1	; case 1
  3328  0557  1903               	skipnz
  3329  0558  2D18               	goto	l24
  3330  0559  3A03               	xorlw	3	; case 2
  3331  055A  1903               	skipnz
  3332  055B  2D1E               	goto	l25
  3333  055C  3A01               	xorlw	1	; case 3
  3334  055D  1903               	skipnz
  3335  055E  2D24               	goto	l26
  3336  055F  3A07               	xorlw	7	; case 4
  3337  0560  1903               	skipnz
  3338  0561  2D2A               	goto	l27
  3339  0562  3A01               	xorlw	1	; case 5
  3340  0563  1903               	skipnz
  3341  0564  2D30               	goto	l28
  3342  0565  3A03               	xorlw	3	; case 6
  3343  0566  1903               	skipnz
  3344  0567  2D36               	goto	l29
  3345  0568  3A01               	xorlw	1	; case 7
  3346  0569  1903               	skipnz
  3347  056A  2D3C               	goto	l30
  3348  056B  2D42               	goto	l31
  3349  056C                     l32:
  3350  056C  0008               	return
  3351  056D                     __end_of_tmr0_init:
  3352                           
  3353                           	psect	text10
  3354  0749                     __ptext10:	
  3355 ;; *************** function _pwm_init *****************
  3356 ;; Defined at:
  3357 ;;		line 5 in file "PWM.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  channel         1    wreg     unsigned char 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  channel         1    2[BANK0 ] unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3371 ;;      Params:         0       0       0       0       0
  3372 ;;      Locals:         0       1       0       0       0
  3373 ;;      Temps:          0       2       0       0       0
  3374 ;;      Totals:         0       3       0       0       0
  3375 ;;Total ram usage:        3 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; Hardware stack levels required when called: 3
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_setup
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385  0749                     _pwm_init:	
  3386                           ;psect for function _pwm_init
  3387                           
  3388                           
  3389                           ;incstack = 0
  3390                           ; Regs used in _pwm_init: [wreg-fsr0h+status,2+status,0]
  3391                           ;pwm_init@channel stored from wreg
  3392  0749  1283               	bcf	3,5	;RP0=0, select bank0
  3393  074A  1303               	bcf	3,6	;RP1=0, select bank0
  3394  074B  00C0               	movwf	pwm_init@channel
  3395  074C                     l1714:
  3396                           
  3397                           ;PWM.c: 6:     switch(channel) {
  3398  074C  2F65               	goto	l1728
  3399  074D                     l378:	
  3400                           ;PWM.c: 7:         case 1:
  3401                           
  3402                           
  3403                           ;PWM.c: 8:             TRISCbits.TRISC2 = 1;
  3404  074D  1683               	bsf	3,5	;RP0=1, select bank1
  3405  074E  1303               	bcf	3,6	;RP1=0, select bank1
  3406  074F  1507               	bsf	7,2	;volatile
  3407  0750                     l1716:
  3408                           
  3409                           ;PWM.c: 9:             CCP1CON = 0;
  3410  0750  1283               	bcf	3,5	;RP0=0, select bank0
  3411  0751  1303               	bcf	3,6	;RP1=0, select bank0
  3412  0752  0197               	clrf	23	;volatile
  3413  0753                     l1718:
  3414                           
  3415                           ;PWM.c: 10:             CCP1CONbits.P1M = 0;
  3416  0753  303F               	movlw	-193
  3417  0754  0597               	andwf	23,f	;volatile
  3418  0755                     l1720:
  3419                           
  3420                           ;PWM.c: 11:             CCP1CONbits.CCP1M = 0b1100;
  3421  0755  0817               	movf	23,w	;volatile
  3422  0756  39F0               	andlw	-16
  3423  0757  380C               	iorlw	12
  3424  0758  0097               	movwf	23	;volatile
  3425                           
  3426                           ;PWM.c: 12:             break;
  3427  0759  2F75               	goto	l1730
  3428  075A                     l380:	
  3429                           ;PWM.c: 13:         case 2:
  3430                           
  3431                           
  3432                           ;PWM.c: 14:             TRISCbits.TRISC1 = 1;
  3433  075A  1683               	bsf	3,5	;RP0=1, select bank1
  3434  075B  1303               	bcf	3,6	;RP1=0, select bank1
  3435  075C  1487               	bsf	7,1	;volatile
  3436  075D                     l1722:
  3437                           
  3438                           ;PWM.c: 15:             CCP2CON = 0;
  3439  075D  1283               	bcf	3,5	;RP0=0, select bank0
  3440  075E  1303               	bcf	3,6	;RP1=0, select bank0
  3441  075F  019D               	clrf	29	;volatile
  3442  0760                     l1724:
  3443                           
  3444                           ;PWM.c: 16:             CCP2CONbits.CCP2M = 0b1100;
  3445  0760  081D               	movf	29,w	;volatile
  3446  0761  39F0               	andlw	-16
  3447  0762  380C               	iorlw	12
  3448  0763  009D               	movwf	29	;volatile
  3449                           
  3450                           ;PWM.c: 17:             break;
  3451  0764  2F75               	goto	l1730
  3452  0765                     l1728:
  3453  0765  0840               	movf	pwm_init@channel,w
  3454  0766  00BE               	movwf	??_pwm_init
  3455  0767  01BF               	clrf	??_pwm_init+1
  3456                           
  3457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3458                           ; Switch size 1, requested type "simple"
  3459                           ; Number of cases is 1, Range of values is 0 to 0
  3460                           ; switch strategies available:
  3461                           ; Name         Instructions Cycles
  3462                           ; simple_byte            4     3 (average)
  3463                           ; direct_byte           11     8 (fixed)
  3464                           ; jumptable            260     6 (fixed)
  3465                           ;	Chosen strategy is simple_byte
  3466  0768  083F               	movf	??_pwm_init+1,w
  3467  0769  3A00               	xorlw	0	; case 0
  3468  076A  1903               	skipnz
  3469  076B  2F6D               	goto	l2308
  3470  076C  2F75               	goto	l1730
  3471  076D                     l2308:
  3472                           
  3473                           ; Switch size 1, requested type "simple"
  3474                           ; Number of cases is 2, Range of values is 1 to 2
  3475                           ; switch strategies available:
  3476                           ; Name         Instructions Cycles
  3477                           ; simple_byte            7     4 (average)
  3478                           ; direct_byte           17    11 (fixed)
  3479                           ; jumptable            263     9 (fixed)
  3480                           ;	Chosen strategy is simple_byte
  3481  076D  083E               	movf	??_pwm_init,w
  3482  076E  3A01               	xorlw	1	; case 1
  3483  076F  1903               	skipnz
  3484  0770  2F4D               	goto	l378
  3485  0771  3A03               	xorlw	3	; case 2
  3486  0772  1903               	skipnz
  3487  0773  2F5A               	goto	l380
  3488  0774  2F75               	goto	l1730
  3489  0775                     l1730:
  3490                           
  3491                           ;PWM.c: 21:     T2CONbits.T2CKPS = 0b11;
  3492  0775  3003               	movlw	3
  3493  0776  0492               	iorwf	18,f	;volatile
  3494  0777                     l1732:
  3495                           
  3496                           ;PWM.c: 22:     PR2 = 255;
  3497  0777  30FF               	movlw	255
  3498  0778  1683               	bsf	3,5	;RP0=1, select bank1
  3499  0779  1303               	bcf	3,6	;RP1=0, select bank1
  3500  077A  0092               	movwf	18	;volatile
  3501  077B                     l1734:
  3502                           
  3503                           ;PWM.c: 25:     PIR1bits.TMR2IF = 0;
  3504  077B  1283               	bcf	3,5	;RP0=0, select bank0
  3505  077C  1303               	bcf	3,6	;RP1=0, select bank0
  3506  077D  108C               	bcf	12,1	;volatile
  3507  077E                     l1736:
  3508                           
  3509                           ;PWM.c: 26:     T2CONbits.TMR2ON = 1;
  3510  077E  1512               	bsf	18,2	;volatile
  3511  077F                     l382:	
  3512                           ;PWM.c: 27:     while(!PIR1bits.TMR2IF);
  3513                           
  3514  077F  1C8C               	btfss	12,1	;volatile
  3515  0780  2F82               	goto	u741
  3516  0781  2F83               	goto	u740
  3517  0782                     u741:
  3518  0782  2F7F               	goto	l382
  3519  0783                     u740:
  3520  0783                     l384:
  3521                           
  3522                           ;PWM.c: 28:     PIR1bits.TMR2IF = 0;
  3523  0783  108C               	bcf	12,1	;volatile
  3524                           
  3525                           ;PWM.c: 29:     TRISCbits.TRISC2 = 0;
  3526  0784  1683               	bsf	3,5	;RP0=1, select bank1
  3527  0785  1303               	bcf	3,6	;RP1=0, select bank1
  3528  0786  1107               	bcf	7,2	;volatile
  3529  0787                     l385:
  3530  0787  0008               	return
  3531  0788                     __end_of_pwm_init:
  3532                           
  3533                           	psect	text11
  3534  0708                     __ptext11:	
  3535 ;; *************** function _init_osc_MHz *****************
  3536 ;; Defined at:
  3537 ;;		line 8 in file "Oscilador.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;  freq            1    wreg     unsigned char 
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;  freq            1    2[BANK0 ] unsigned char 
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3551 ;;      Params:         0       0       0       0       0
  3552 ;;      Locals:         0       1       0       0       0
  3553 ;;      Temps:          0       2       0       0       0
  3554 ;;      Totals:         0       3       0       0       0
  3555 ;;Total ram usage:        3 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; Hardware stack levels required when called: 3
  3558 ;; This function calls:
  3559 ;;		Nothing
  3560 ;; This function is called by:
  3561 ;;		_setup
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565  0708                     _init_osc_MHz:	
  3566                           ;psect for function _init_osc_MHz
  3567                           
  3568                           
  3569                           ;incstack = 0
  3570                           ; Regs used in _init_osc_MHz: [wreg-fsr0h+status,2+status,0]
  3571                           ;init_osc_MHz@freq stored from wreg
  3572  0708  1283               	bcf	3,5	;RP0=0, select bank0
  3573  0709  1303               	bcf	3,6	;RP1=0, select bank0
  3574  070A  00C0               	movwf	init_osc_MHz@freq
  3575  070B                     l1654:
  3576                           
  3577                           ;Oscilador.c: 9:     OSCCONbits.SCS = 1;
  3578  070B  1683               	bsf	3,5	;RP0=1, select bank1
  3579  070C  1303               	bcf	3,6	;RP1=0, select bank1
  3580  070D  140F               	bsf	15,0	;volatile
  3581                           
  3582                           ;Oscilador.c: 11:     switch(freq){
  3583  070E  2F30               	goto	l1668
  3584  070F                     l1656:
  3585                           
  3586                           ;Oscilador.c: 13:             OSCCONbits.IRCF = 0b100;
  3587  070F  1683               	bsf	3,5	;RP0=1, select bank1
  3588  0710  1303               	bcf	3,6	;RP1=0, select bank1
  3589  0711  080F               	movf	15,w	;volatile
  3590  0712  398F               	andlw	-113
  3591  0713  3840               	iorlw	64
  3592  0714  008F               	movwf	15	;volatile
  3593                           
  3594                           ;Oscilador.c: 14:             break;
  3595  0715  2F48               	goto	l12
  3596  0716                     l1658:
  3597                           
  3598                           ;Oscilador.c: 17:             OSCCONbits.IRCF = 0b101;
  3599  0716  1683               	bsf	3,5	;RP0=1, select bank1
  3600  0717  1303               	bcf	3,6	;RP1=0, select bank1
  3601  0718  080F               	movf	15,w	;volatile
  3602  0719  398F               	andlw	-113
  3603  071A  3850               	iorlw	80
  3604  071B  008F               	movwf	15	;volatile
  3605                           
  3606                           ;Oscilador.c: 18:             break;
  3607  071C  2F48               	goto	l12
  3608  071D                     l1660:
  3609                           
  3610                           ;Oscilador.c: 21:             OSCCONbits.IRCF = 0b110;
  3611  071D  1683               	bsf	3,5	;RP0=1, select bank1
  3612  071E  1303               	bcf	3,6	;RP1=0, select bank1
  3613  071F  080F               	movf	15,w	;volatile
  3614  0720  398F               	andlw	-113
  3615  0721  3860               	iorlw	96
  3616  0722  008F               	movwf	15	;volatile
  3617                           
  3618                           ;Oscilador.c: 22:             break;
  3619  0723  2F48               	goto	l12
  3620  0724                     l1662:
  3621                           
  3622                           ;Oscilador.c: 25:             OSCCONbits.IRCF = 0b111;
  3623  0724  3070               	movlw	112
  3624  0725  1683               	bsf	3,5	;RP0=1, select bank1
  3625  0726  1303               	bcf	3,6	;RP1=0, select bank1
  3626  0727  048F               	iorwf	15,f	;volatile
  3627                           
  3628                           ;Oscilador.c: 26:             break;
  3629  0728  2F48               	goto	l12
  3630  0729                     l1664:
  3631                           
  3632                           ;Oscilador.c: 29:             OSCCONbits.IRCF = 0b110;
  3633  0729  1683               	bsf	3,5	;RP0=1, select bank1
  3634  072A  1303               	bcf	3,6	;RP1=0, select bank1
  3635  072B  080F               	movf	15,w	;volatile
  3636  072C  398F               	andlw	-113
  3637  072D  3860               	iorlw	96
  3638  072E  008F               	movwf	15	;volatile
  3639                           
  3640                           ;Oscilador.c: 30:             break;
  3641  072F  2F48               	goto	l12
  3642  0730                     l1668:
  3643  0730  1283               	bcf	3,5	;RP0=0, select bank0
  3644  0731  1303               	bcf	3,6	;RP1=0, select bank0
  3645  0732  0840               	movf	init_osc_MHz@freq,w
  3646  0733  00BE               	movwf	??_init_osc_MHz
  3647  0734  01BF               	clrf	??_init_osc_MHz+1
  3648                           
  3649                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3650                           ; Switch size 1, requested type "simple"
  3651                           ; Number of cases is 1, Range of values is 0 to 0
  3652                           ; switch strategies available:
  3653                           ; Name         Instructions Cycles
  3654                           ; simple_byte            4     3 (average)
  3655                           ; direct_byte           11     8 (fixed)
  3656                           ; jumptable            260     6 (fixed)
  3657                           ;	Chosen strategy is simple_byte
  3658  0735  083F               	movf	??_init_osc_MHz+1,w
  3659  0736  3A00               	xorlw	0	; case 0
  3660  0737  1903               	skipnz
  3661  0738  2F3A               	goto	l2310
  3662  0739  2F29               	goto	l1664
  3663  073A                     l2310:
  3664                           
  3665                           ; Switch size 1, requested type "simple"
  3666                           ; Number of cases is 4, Range of values is 1 to 8
  3667                           ; switch strategies available:
  3668                           ; Name         Instructions Cycles
  3669                           ; simple_byte           13     7 (average)
  3670                           ; direct_byte           35    11 (fixed)
  3671                           ; jumptable            263     9 (fixed)
  3672                           ;	Chosen strategy is simple_byte
  3673  073A  083E               	movf	??_init_osc_MHz,w
  3674  073B  3A01               	xorlw	1	; case 1
  3675  073C  1903               	skipnz
  3676  073D  2F0F               	goto	l1656
  3677  073E  3A03               	xorlw	3	; case 2
  3678  073F  1903               	skipnz
  3679  0740  2F16               	goto	l1658
  3680  0741  3A06               	xorlw	6	; case 4
  3681  0742  1903               	skipnz
  3682  0743  2F1D               	goto	l1660
  3683  0744  3A0C               	xorlw	12	; case 8
  3684  0745  1903               	skipnz
  3685  0746  2F24               	goto	l1662
  3686  0747  2F29               	goto	l1664
  3687  0748                     l12:
  3688  0748  0008               	return
  3689  0749                     __end_of_init_osc_MHz:
  3690                           
  3691                           	psect	text12
  3692  0F6C                     __ptext12:	
  3693 ;; *************** function _init_UART *****************
  3694 ;; Defined at:
  3695 ;;		line 4 in file "UART.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3709 ;;      Params:         0       0       0       0       0
  3710 ;;      Locals:         0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0
  3712 ;;      Totals:         0       0       0       0       0
  3713 ;;Total ram usage:        0 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 3
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_setup
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723  0F6C                     _init_UART:	
  3724                           ;psect for function _init_UART
  3725                           
  3726  0F6C                     l1688:	
  3727                           ;incstack = 0
  3728                           ; Regs used in _init_UART: [wreg+status,2]
  3729                           
  3730                           
  3731                           ;UART.c: 7:     TXSTAbits.SYNC = 0;
  3732  0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  3733  0F6D  1303               	bcf	3,6	;RP1=0, select bank1
  3734  0F6E  1218               	bcf	24,4	;volatile
  3735                           
  3736                           ;UART.c: 8:     TXSTAbits.BRGH = 1;
  3737  0F6F  1518               	bsf	24,2	;volatile
  3738                           
  3739                           ;UART.c: 9:     BAUDCTLbits.BRG16 = 1;
  3740  0F70  1683               	bsf	3,5	;RP0=1, select bank3
  3741  0F71  1703               	bsf	3,6	;RP1=1, select bank3
  3742  0F72  1587               	bsf	7,3	;volatile
  3743  0F73                     l1690:
  3744                           
  3745                           ;UART.c: 11:     SPBRG = 25;
  3746  0F73  3019               	movlw	25
  3747  0F74  1683               	bsf	3,5	;RP0=1, select bank1
  3748  0F75  1303               	bcf	3,6	;RP1=0, select bank1
  3749  0F76  0099               	movwf	25	;volatile
  3750  0F77                     l1692:
  3751                           
  3752                           ;UART.c: 12:     SPBRGH = 0;
  3753  0F77  019A               	clrf	26	;volatile
  3754  0F78                     l1694:
  3755                           
  3756                           ;UART.c: 14:     RCSTAbits.SPEN = 1;
  3757  0F78  1283               	bcf	3,5	;RP0=0, select bank0
  3758  0F79  1303               	bcf	3,6	;RP1=0, select bank0
  3759  0F7A  1798               	bsf	24,7	;volatile
  3760  0F7B                     l1696:
  3761                           
  3762                           ;UART.c: 15:     TXSTAbits.TX9 = 0;
  3763  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  3764  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  3765  0F7D  1318               	bcf	24,6	;volatile
  3766  0F7E                     l1698:
  3767                           
  3768                           ;UART.c: 16:     TXSTAbits.TXEN = 1;
  3769  0F7E  1698               	bsf	24,5	;volatile
  3770  0F7F                     l1700:
  3771                           
  3772                           ;UART.c: 17:     RCSTAbits.CREN = 1;
  3773  0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  3774  0F80  1303               	bcf	3,6	;RP1=0, select bank0
  3775  0F81  1618               	bsf	24,4	;volatile
  3776  0F82                     l48:
  3777  0F82  0008               	return
  3778  0F83                     __end_of_init_UART:
  3779                           
  3780                           	psect	text13
  3781  0FE6                     __ptext13:	
  3782 ;; *************** function _init_SPI *****************
  3783 ;; Defined at:
  3784 ;;		line 8 in file "SPIS.c"
  3785 ;; Parameters:    Size  Location     Type
  3786 ;;		None
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;		None
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  1    wreg      void 
  3791 ;; Registers used:
  3792 ;;		wreg, status,2, status,0
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3798 ;;      Params:         0       0       0       0       0
  3799 ;;      Locals:         0       0       0       0       0
  3800 ;;      Temps:          0       0       0       0       0
  3801 ;;      Totals:         0       0       0       0       0
  3802 ;;Total ram usage:        0 bytes
  3803 ;; Hardware stack levels used: 1
  3804 ;; Hardware stack levels required when called: 3
  3805 ;; This function calls:
  3806 ;;		Nothing
  3807 ;; This function is called by:
  3808 ;;		_setup
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812  0FE6                     _init_SPI:	
  3813                           ;psect for function _init_SPI
  3814                           
  3815  0FE6                     l1744:	
  3816                           ;incstack = 0
  3817                           ; Regs used in _init_SPI: [wreg+status,2+status,0]
  3818                           
  3819                           
  3820                           ;SPIS.c: 9:     TRISC = 0b10011000;
  3821  0FE6  3098               	movlw	152
  3822  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  3823  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  3824  0FE9  0087               	movwf	7	;volatile
  3825  0FEA                     l1746:
  3826                           
  3827                           ;SPIS.c: 10:     PORTC = 0;
  3828  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  3829  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  3830  0FEC  0187               	clrf	7	;volatile
  3831  0FED                     l1748:
  3832                           
  3833                           ;SPIS.c: 12:     SSPCONbits.SSPM = 0b0100;
  3834  0FED  0814               	movf	20,w	;volatile
  3835  0FEE  39F0               	andlw	-16
  3836  0FEF  3804               	iorlw	4
  3837  0FF0  0094               	movwf	20	;volatile
  3838  0FF1                     l1750:
  3839                           
  3840                           ;SPIS.c: 13:     SSPCONbits.CKP = 0;
  3841  0FF1  1214               	bcf	20,4	;volatile
  3842  0FF2                     l1752:
  3843                           
  3844                           ;SPIS.c: 14:     SSPCONbits.SSPEN = 1;
  3845  0FF2  1694               	bsf	20,5	;volatile
  3846  0FF3                     l1754:
  3847                           
  3848                           ;SPIS.c: 16:     SSPSTATbits.CKE = 1;
  3849  0FF3  1683               	bsf	3,5	;RP0=1, select bank1
  3850  0FF4  1303               	bcf	3,6	;RP1=0, select bank1
  3851  0FF5  1714               	bsf	20,6	;volatile
  3852  0FF6                     l1756:
  3853                           
  3854                           ;SPIS.c: 17:     SSPSTATbits.SMP = 0;
  3855  0FF6  1394               	bcf	20,7	;volatile
  3856  0FF7                     l1758:
  3857                           
  3858                           ;SPIS.c: 19:     PIR1bits.SSPIF = 0;
  3859  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  3860  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  3861  0FF9  118C               	bcf	12,3	;volatile
  3862  0FFA                     l1760:
  3863                           
  3864                           ;SPIS.c: 20:     PIE1bits.SSPIE = 1;
  3865  0FFA  1683               	bsf	3,5	;RP0=1, select bank1
  3866  0FFB  1303               	bcf	3,6	;RP1=0, select bank1
  3867  0FFC  158C               	bsf	12,3	;volatile
  3868  0FFD                     l1762:
  3869                           
  3870                           ;SPIS.c: 21:     INTCONbits.PEIE = 1;
  3871  0FFD  170B               	bsf	11,6	;volatile
  3872  0FFE                     l1764:
  3873                           
  3874                           ;SPIS.c: 22:     INTCONbits.GIE = 1;
  3875  0FFE  178B               	bsf	11,7	;volatile
  3876  0FFF                     l325:
  3877  0FFF  0008               	return
  3878  1000                     __end_of_init_SPI:
  3879                           
  3880                           	psect	text14
  3881  0677                     __ptext14:	
  3882 ;; *************** function _Lcd_Init *****************
  3883 ;; Defined at:
  3884 ;;		line 43 in file "LCD.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;		None
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;		None
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  1    wreg      void 
  3891 ;; Registers used:
  3892 ;;		wreg, status,2, status,0, pclath, cstack
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3898 ;;      Params:         0       0       0       0       0
  3899 ;;      Locals:         0       0       0       0       0
  3900 ;;      Temps:          0       2       0       0       0
  3901 ;;      Totals:         0       2       0       0       0
  3902 ;;Total ram usage:        2 bytes
  3903 ;; Hardware stack levels used: 1
  3904 ;; Hardware stack levels required when called: 5
  3905 ;; This function calls:
  3906 ;;		_Lcd_Cmd
  3907 ;;		_Lcd_Port
  3908 ;; This function is called by:
  3909 ;;		_setup
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913  0677                     _Lcd_Init:	
  3914                           ;psect for function _Lcd_Init
  3915                           
  3916  0677                     l1768:	
  3917                           ;incstack = 0
  3918                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3919                           
  3920                           
  3921                           ;LCD.c: 44:     Lcd_Port(0x00);
  3922  0677  3000               	movlw	0
  3923  0678  120A  158A  272C  120A  118A  	fcall	_Lcd_Port
  3924  067D                     l1770:
  3925                           
  3926                           ;LCD.c: 45:     _delay((unsigned long)((20)*(1000000/4000.0)));
  3927  067D  3007               	movlw	7
  3928  067E  1283               	bcf	3,5	;RP0=0, select bank0
  3929  067F  1303               	bcf	3,6	;RP1=0, select bank0
  3930  0680  00C2               	movwf	??_Lcd_Init+1
  3931  0681  307C               	movlw	124
  3932  0682  00C1               	movwf	??_Lcd_Init
  3933  0683                     u1477:
  3934  0683  0BC1               	decfsz	??_Lcd_Init,f
  3935  0684  2E83               	goto	u1477
  3936  0685  0BC2               	decfsz	??_Lcd_Init+1,f
  3937  0686  2E83               	goto	u1477
  3938  0687  0000               	nop
  3939  0688                     l1772:
  3940                           
  3941                           ;LCD.c: 46:     Lcd_Cmd(0x30);
  3942  0688  3030               	movlw	48
  3943  0689  120A  158A  27B3  120A  118A  	fcall	_Lcd_Cmd
  3944                           
  3945                           ;LCD.c: 47:     _delay((unsigned long)((5)*(1000000/4000.0)));
  3946  068E  30F9               	movlw	249
  3947  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3948  0690  1303               	bcf	3,6	;RP1=0, select bank0
  3949  0691  00C1               	movwf	??_Lcd_Init
  3950  0692                     u1487:
  3951  0692  2E93               	nop2
  3952  0693  0BC1               	decfsz	??_Lcd_Init,f
  3953  0694  2E92               	goto	u1487
  3954  0695  2E96               	nop2
  3955  0696                     l1774:
  3956                           
  3957                           ;LCD.c: 48:     Lcd_Cmd(0x30);
  3958  0696  3030               	movlw	48
  3959  0697  120A  158A  27B3  120A  118A  	fcall	_Lcd_Cmd
  3960  069C                     l1776:
  3961                           
  3962                           ;LCD.c: 49:     _delay((unsigned long)((110)*(1000000/4000000.0)));
  3963  069C  3008               	movlw	8
  3964  069D  1283               	bcf	3,5	;RP0=0, select bank0
  3965  069E  1303               	bcf	3,6	;RP1=0, select bank0
  3966  069F  00C1               	movwf	??_Lcd_Init
  3967  06A0                     u1497:
  3968  06A0  0BC1               	decfsz	??_Lcd_Init,f
  3969  06A1  2EA0               	goto	u1497
  3970                           
  3971                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  3972  06A2  3030               	movlw	48
  3973  06A3  120A  158A  27B3  120A  118A  	fcall	_Lcd_Cmd
  3974                           
  3975                           ;LCD.c: 52:     Lcd_Cmd(0x38);
  3976  06A8  3038               	movlw	56
  3977  06A9  120A  158A  27B3  120A  118A  	fcall	_Lcd_Cmd
  3978                           
  3979                           ;LCD.c: 53:     Lcd_Cmd(0x0C);
  3980  06AE  300C               	movlw	12
  3981  06AF  120A  158A  27B3  120A  118A  	fcall	_Lcd_Cmd
  3982                           
  3983                           ;LCD.c: 54:     Lcd_Cmd(0x01);
  3984  06B4  3001               	movlw	1
  3985  06B5  120A  158A  27B3  120A  118A  	fcall	_Lcd_Cmd
  3986                           
  3987                           ;LCD.c: 55:     Lcd_Cmd(0x06);
  3988  06BA  3006               	movlw	6
  3989  06BB  120A  158A  27B3  120A  118A  	fcall	_Lcd_Cmd
  3990  06C0                     l291:
  3991  06C0  0008               	return
  3992  06C1                     __end_of_Lcd_Init:
  3993                           
  3994                           	psect	text15
  3995  0788                     __ptext15:	
  3996 ;; *************** function _Lcd_Write_String *****************
  3997 ;; Defined at:
  3998 ;;		line 69 in file "LCD.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  a               1    wreg     PTR unsigned char 
  4001 ;;		 -> STR_5(2), STR_4(6), STR_3(2), STR_2(2), 
  4002 ;;		 -> STR_1(25), 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  a               1    5[BANK0 ] PTR unsigned char 
  4005 ;;		 -> STR_5(2), STR_4(6), STR_3(2), STR_2(2), 
  4006 ;;		 -> STR_1(25), 
  4007 ;;  i               2    3[BANK0 ] int 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      void 
  4010 ;; Registers used:
  4011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4017 ;;      Params:         0       0       0       0       0
  4018 ;;      Locals:         0       3       0       0       0
  4019 ;;      Temps:          0       0       0       0       0
  4020 ;;      Totals:         0       3       0       0       0
  4021 ;;Total ram usage:        3 bytes
  4022 ;; Hardware stack levels used: 1
  4023 ;; Hardware stack levels required when called: 5
  4024 ;; This function calls:
  4025 ;;		_Lcd_Write_Char
  4026 ;; This function is called by:
  4027 ;;		_main
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031  0788                     _Lcd_Write_String:	
  4032                           ;psect for function _Lcd_Write_String
  4033                           
  4034                           
  4035                           ;incstack = 0
  4036                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4037                           ;Lcd_Write_String@a stored from wreg
  4038  0788  1283               	bcf	3,5	;RP0=0, select bank0
  4039  0789  1303               	bcf	3,6	;RP1=0, select bank0
  4040  078A  00C3               	movwf	Lcd_Write_String@a
  4041  078B                     l1976:
  4042                           
  4043                           ;LCD.c: 70:     int i;;LCD.c: 71:     for (i = 0; a[i] != '\0'; i++)
  4044  078B  01C1               	clrf	Lcd_Write_String@i
  4045  078C  01C2               	clrf	Lcd_Write_String@i+1
  4046  078D  2FA3               	goto	l1982
  4047  078E                     l1978:
  4048                           
  4049                           ;LCD.c: 72:         Lcd_Write_Char(a[i]);
  4050  078E  0841               	movf	Lcd_Write_String@i,w
  4051  078F  0743               	addwf	Lcd_Write_String@a,w
  4052  0790  0084               	movwf	4
  4053  0791  120A  118A  27B1  120A  118A  	fcall	stringdir
  4054  0796  120A  158A  279B  120A  118A  	fcall	_Lcd_Write_Char
  4055  079B                     l1980:
  4056  079B  3001               	movlw	1
  4057  079C  1283               	bcf	3,5	;RP0=0, select bank0
  4058  079D  1303               	bcf	3,6	;RP1=0, select bank0
  4059  079E  07C1               	addwf	Lcd_Write_String@i,f
  4060  079F  1803               	skipnc
  4061  07A0  0AC2               	incf	Lcd_Write_String@i+1,f
  4062  07A1  3000               	movlw	0
  4063  07A2  07C2               	addwf	Lcd_Write_String@i+1,f
  4064  07A3                     l1982:
  4065  07A3  0841               	movf	Lcd_Write_String@i,w
  4066  07A4  0743               	addwf	Lcd_Write_String@a,w
  4067  07A5  0084               	movwf	4
  4068  07A6  120A  118A  27B1  120A  118A  	fcall	stringdir
  4069  07AB  3A00               	xorlw	0
  4070  07AC  1D03               	skipz
  4071  07AD  2FAF               	goto	u1121
  4072  07AE  2FB0               	goto	u1120
  4073  07AF                     u1121:
  4074  07AF  2F8E               	goto	l1978
  4075  07B0                     u1120:
  4076  07B0                     l300:
  4077  07B0  0008               	return
  4078  07B1                     __end_of_Lcd_Write_String:
  4079                           
  4080                           	psect	text16
  4081  0F9B                     __ptext16:	
  4082 ;; *************** function _Lcd_Write_Char *****************
  4083 ;; Defined at:
  4084 ;;		line 59 in file "LCD.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  a               1    wreg     unsigned char 
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;  a               1    2[BANK0 ] unsigned char 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0, pclath, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4098 ;;      Params:         0       0       0       0       0
  4099 ;;      Locals:         0       1       0       0       0
  4100 ;;      Temps:          0       1       0       0       0
  4101 ;;      Totals:         0       2       0       0       0
  4102 ;;Total ram usage:        2 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; Hardware stack levels required when called: 4
  4105 ;; This function calls:
  4106 ;;		_Lcd_Port
  4107 ;; This function is called by:
  4108 ;;		_main
  4109 ;;		_Lcd_Write_String
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113  0F9B                     _Lcd_Write_Char:	
  4114                           ;psect for function _Lcd_Write_Char
  4115                           
  4116                           
  4117                           ;incstack = 0
  4118                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4119                           ;Lcd_Write_Char@a stored from wreg
  4120  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  4121  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  4122  0F9D  00C0               	movwf	Lcd_Write_Char@a
  4123  0F9E                     l1704:
  4124                           
  4125                           ;LCD.c: 61:     PORTEbits.RE0 = 1;
  4126  0F9E  1409               	bsf	9,0	;volatile
  4127  0F9F                     l1706:
  4128                           
  4129                           ;LCD.c: 62:     Lcd_Port(a);
  4130  0F9F  0840               	movf	Lcd_Write_Char@a,w
  4131  0FA0  120A  158A  272C  120A  158A  	fcall	_Lcd_Port
  4132  0FA5                     l1708:
  4133                           
  4134                           ;LCD.c: 63:     RE1 = 1;
  4135  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  4136  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  4137  0FA7  1489               	bsf	9,1	;volatile
  4138  0FA8                     l1710:
  4139                           
  4140                           ;LCD.c: 64:     _delay((unsigned long)((40)*(1000000/4000000.0)));
  4141  0FA8  3002               	movlw	2
  4142  0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  4143  0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  4144  0FAB  00BF               	movwf	??_Lcd_Write_Char
  4145  0FAC                     u1507:
  4146  0FAC  0BBF               	decfsz	??_Lcd_Write_Char,f
  4147  0FAD  2FAC               	goto	u1507
  4148  0FAE  0000               	nop
  4149  0FAF                     l1712:
  4150                           
  4151                           ;LCD.c: 65:     RE1 = 0;
  4152  0FAF  1283               	bcf	3,5	;RP0=0, select bank0
  4153  0FB0  1303               	bcf	3,6	;RP1=0, select bank0
  4154  0FB1  1089               	bcf	9,1	;volatile
  4155  0FB2                     l294:
  4156  0FB2  0008               	return
  4157  0FB3                     __end_of_Lcd_Write_Char:
  4158                           
  4159                           	psect	text17
  4160  0F46                     __ptext17:	
  4161 ;; *************** function _Lcd_Shift_Right *****************
  4162 ;; Defined at:
  4163 ;;		line 75 in file "LCD.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;		None
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, status,2, status,0, pclath, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4177 ;;      Params:         0       0       0       0       0
  4178 ;;      Locals:         0       0       0       0       0
  4179 ;;      Temps:          0       0       0       0       0
  4180 ;;      Totals:         0       0       0       0       0
  4181 ;;Total ram usage:        0 bytes
  4182 ;; Hardware stack levels used: 1
  4183 ;; Hardware stack levels required when called: 5
  4184 ;; This function calls:
  4185 ;;		_Lcd_Cmd
  4186 ;; This function is called by:
  4187 ;;		_main
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191  0F46                     _Lcd_Shift_Right:	
  4192                           ;psect for function _Lcd_Shift_Right
  4193                           
  4194  0F46                     l1998:	
  4195                           ;incstack = 0
  4196                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  4197                           
  4198                           
  4199                           ;LCD.c: 76:     Lcd_Cmd(0x1C);
  4200  0F46  301C               	movlw	28
  4201  0F47  120A  158A  27B3  120A  158A  	fcall	_Lcd_Cmd
  4202  0F4C                     l303:
  4203  0F4C  0008               	return
  4204  0F4D                     __end_of_Lcd_Shift_Right:
  4205                           
  4206                           	psect	text18
  4207  0F3F                     __ptext18:	
  4208 ;; *************** function _Lcd_Shift_Left *****************
  4209 ;; Defined at:
  4210 ;;		line 80 in file "LCD.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;		None
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0, pclath, cstack
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4224 ;;      Params:         0       0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0
  4227 ;;      Totals:         0       0       0       0       0
  4228 ;;Total ram usage:        0 bytes
  4229 ;; Hardware stack levels used: 1
  4230 ;; Hardware stack levels required when called: 5
  4231 ;; This function calls:
  4232 ;;		_Lcd_Cmd
  4233 ;; This function is called by:
  4234 ;;		_main
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238  0F3F                     _Lcd_Shift_Left:	
  4239                           ;psect for function _Lcd_Shift_Left
  4240                           
  4241  0F3F                     l1996:	
  4242                           ;incstack = 0
  4243                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
  4244                           
  4245                           
  4246                           ;LCD.c: 81:     Lcd_Cmd(0x18);
  4247  0F3F  3018               	movlw	24
  4248  0F40  120A  158A  27B3  120A  158A  	fcall	_Lcd_Cmd
  4249  0F45                     l306:
  4250  0F45  0008               	return
  4251  0F46                     __end_of_Lcd_Shift_Left:
  4252                           
  4253                           	psect	text19
  4254  07D8                     __ptext19:	
  4255 ;; *************** function _Lcd_Set_Cursor *****************
  4256 ;; Defined at:
  4257 ;;		line 31 in file "LCD.c"
  4258 ;; Parameters:    Size  Location     Type
  4259 ;;  a               1    wreg     unsigned char 
  4260 ;;  b               1    3[BANK0 ] unsigned char 
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;  a               1    5[BANK0 ] unsigned char 
  4263 ;;  temp            1    6[BANK0 ] unsigned char 
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		wreg, status,2, status,0, pclath, cstack
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4273 ;;      Params:         0       1       0       0       0
  4274 ;;      Locals:         0       2       0       0       0
  4275 ;;      Temps:          0       1       0       0       0
  4276 ;;      Totals:         0       4       0       0       0
  4277 ;;Total ram usage:        4 bytes
  4278 ;; Hardware stack levels used: 1
  4279 ;; Hardware stack levels required when called: 5
  4280 ;; This function calls:
  4281 ;;		_Lcd_Cmd
  4282 ;; This function is called by:
  4283 ;;		_main
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287  07D8                     _Lcd_Set_Cursor:	
  4288                           ;psect for function _Lcd_Set_Cursor
  4289                           
  4290                           
  4291                           ;incstack = 0
  4292                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4293                           ;Lcd_Set_Cursor@a stored from wreg
  4294  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  4295  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  4296  07DA  00C3               	movwf	Lcd_Set_Cursor@a
  4297  07DB                     l1964:
  4298                           
  4299                           ;LCD.c: 31: void Lcd_Set_Cursor(char a, char b);LCD.c: 32: {;LCD.c: 33:     char temp;;L
      +                          CD.c: 34:     if (a == 1) {
  4300  07DB  0343               	decf	Lcd_Set_Cursor@a,w
  4301  07DC  1D03               	btfss	3,2
  4302  07DD  2FDF               	goto	u1101
  4303  07DE  2FE0               	goto	u1100
  4304  07DF                     u1101:
  4305  07DF  2FEC               	goto	l1970
  4306  07E0                     u1100:
  4307  07E0                     l1966:
  4308                           
  4309                           ;LCD.c: 35:         temp = 0x80 + b - 1;
  4310  07E0  0841               	movf	Lcd_Set_Cursor@b,w
  4311  07E1  3E7F               	addlw	127
  4312  07E2  00C2               	movwf	??_Lcd_Set_Cursor
  4313  07E3  0842               	movf	??_Lcd_Set_Cursor,w
  4314  07E4  00C4               	movwf	Lcd_Set_Cursor@temp
  4315  07E5                     l1968:
  4316                           
  4317                           ;LCD.c: 36:         Lcd_Cmd(temp);
  4318  07E5  0844               	movf	Lcd_Set_Cursor@temp,w
  4319  07E6  120A  158A  27B3  120A  118A  	fcall	_Lcd_Cmd
  4320                           
  4321                           ;LCD.c: 37:     } else if (a == 2) {
  4322  07EB  2FFD               	goto	l288
  4323  07EC                     l1970:
  4324  07EC  3002               	movlw	2
  4325  07ED  0643               	xorwf	Lcd_Set_Cursor@a,w
  4326  07EE  1D03               	btfss	3,2
  4327  07EF  2FF1               	goto	u1111
  4328  07F0  2FF2               	goto	u1110
  4329  07F1                     u1111:
  4330  07F1  2FFD               	goto	l288
  4331  07F2                     u1110:
  4332  07F2                     l1972:
  4333                           
  4334                           ;LCD.c: 38:         temp = 0xC0 + b - 1;
  4335  07F2  0841               	movf	Lcd_Set_Cursor@b,w
  4336  07F3  3EBF               	addlw	191
  4337  07F4  00C2               	movwf	??_Lcd_Set_Cursor
  4338  07F5  0842               	movf	??_Lcd_Set_Cursor,w
  4339  07F6  00C4               	movwf	Lcd_Set_Cursor@temp
  4340  07F7                     l1974:
  4341                           
  4342                           ;LCD.c: 39:         Lcd_Cmd(temp);
  4343  07F7  0844               	movf	Lcd_Set_Cursor@temp,w
  4344  07F8  120A  158A  27B3  120A  118A  	fcall	_Lcd_Cmd
  4345  07FD                     l288:
  4346  07FD  0008               	return
  4347  07FE                     __end_of_Lcd_Set_Cursor:
  4348                           
  4349                           	psect	text20
  4350  0FB3                     __ptext20:	
  4351 ;; *************** function _Lcd_Cmd *****************
  4352 ;; Defined at:
  4353 ;;		line 18 in file "LCD.c"
  4354 ;; Parameters:    Size  Location     Type
  4355 ;;  a               1    wreg     unsigned char 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;  a               1    2[BANK0 ] unsigned char 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, status,2, status,0, pclath, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4367 ;;      Params:         0       0       0       0       0
  4368 ;;      Locals:         0       1       0       0       0
  4369 ;;      Temps:          0       1       0       0       0
  4370 ;;      Totals:         0       2       0       0       0
  4371 ;;Total ram usage:        2 bytes
  4372 ;; Hardware stack levels used: 1
  4373 ;; Hardware stack levels required when called: 4
  4374 ;; This function calls:
  4375 ;;		_Lcd_Port
  4376 ;; This function is called by:
  4377 ;;		_Lcd_Set_Cursor
  4378 ;;		_Lcd_Init
  4379 ;;		_Lcd_Shift_Right
  4380 ;;		_Lcd_Shift_Left
  4381 ;;		_Lcd_Clear
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385  0FB3                     _Lcd_Cmd:	
  4386                           ;psect for function _Lcd_Cmd
  4387                           
  4388                           
  4389                           ;incstack = 0
  4390                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4391                           ;Lcd_Cmd@a stored from wreg
  4392  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  4393  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  4394  0FB5  00C0               	movwf	Lcd_Cmd@a
  4395  0FB6                     l1644:
  4396                           
  4397                           ;LCD.c: 18: void Lcd_Cmd(char a);LCD.c: 19: {;LCD.c: 20:     PORTEbits.RE0 = 0;
  4398  0FB6  1009               	bcf	9,0	;volatile
  4399  0FB7                     l1646:
  4400                           
  4401                           ;LCD.c: 21:     Lcd_Port(a);
  4402  0FB7  0840               	movf	Lcd_Cmd@a,w
  4403  0FB8  120A  158A  272C  120A  158A  	fcall	_Lcd_Port
  4404  0FBD                     l1648:
  4405                           
  4406                           ;LCD.c: 22:     RE1 = 1;
  4407  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  4408  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  4409  0FBF  1489               	bsf	9,1	;volatile
  4410  0FC0                     l1650:
  4411                           
  4412                           ;LCD.c: 23:     _delay((unsigned long)((4)*(1000000/4000.0)));
  4413  0FC0  30C7               	movlw	199
  4414  0FC1  1283               	bcf	3,5	;RP0=0, select bank0
  4415  0FC2  1303               	bcf	3,6	;RP1=0, select bank0
  4416  0FC3  00BF               	movwf	??_Lcd_Cmd
  4417  0FC4                     u1517:
  4418  0FC4  2FC5               	nop2
  4419  0FC5  0BBF               	decfsz	??_Lcd_Cmd,f
  4420  0FC6  2FC4               	goto	u1517
  4421  0FC7  2FC8               	nop2
  4422  0FC8                     l1652:
  4423                           
  4424                           ;LCD.c: 24:     RE1 = 0;
  4425  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4426  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4427  0FCA  1089               	bcf	9,1	;volatile
  4428  0FCB                     l279:
  4429  0FCB  0008               	return
  4430  0FCC                     __end_of_Lcd_Cmd:
  4431                           
  4432                           	psect	text21
  4433  0F2C                     __ptext21:	
  4434 ;; *************** function _Lcd_Port *****************
  4435 ;; Defined at:
  4436 ;;		line 13 in file "LCD.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  a               1    wreg     unsigned char 
  4439 ;; Auto vars:     Size  Location     Type
  4440 ;;  a               1    0[BANK0 ] unsigned char 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  1    wreg      void 
  4443 ;; Registers used:
  4444 ;;		wreg
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4450 ;;      Params:         0       0       0       0       0
  4451 ;;      Locals:         0       1       0       0       0
  4452 ;;      Temps:          0       0       0       0       0
  4453 ;;      Totals:         0       1       0       0       0
  4454 ;;Total ram usage:        1 bytes
  4455 ;; Hardware stack levels used: 1
  4456 ;; Hardware stack levels required when called: 3
  4457 ;; This function calls:
  4458 ;;		Nothing
  4459 ;; This function is called by:
  4460 ;;		_Lcd_Cmd
  4461 ;;		_Lcd_Init
  4462 ;;		_Lcd_Write_Char
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           
  4466  0F2C                     _Lcd_Port:	
  4467                           ;psect for function _Lcd_Port
  4468                           
  4469                           
  4470                           ;incstack = 0
  4471                           ; Regs used in _Lcd_Port: [wreg]
  4472                           ;Lcd_Port@a stored from wreg
  4473  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  4474  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  4475  0F2E  00BE               	movwf	Lcd_Port@a
  4476  0F2F                     l1642:
  4477                           
  4478                           ;LCD.c: 13: void Lcd_Port(char a);LCD.c: 14: {;LCD.c: 15:     PORTD = a;
  4479  0F2F  083E               	movf	Lcd_Port@a,w
  4480  0F30  0088               	movwf	8	;volatile
  4481  0F31                     l276:
  4482  0F31  0008               	return
  4483  0F32                     __end_of_Lcd_Port:
  4484                           
  4485                           	psect	text22
  4486  01C8                     __ptext22:	
  4487 ;; *************** function _isr *****************
  4488 ;; Defined at:
  4489 ;;		line 93 in file "MASTERSPI.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;		None
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;		None
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4503 ;;      Params:         0       0       0       0       0
  4504 ;;      Locals:         0       0       0       0       0
  4505 ;;      Temps:          5       0       0       0       0
  4506 ;;      Totals:         5       0       0       0       0
  4507 ;;Total ram usage:        5 bytes
  4508 ;; Hardware stack levels used: 1
  4509 ;; Hardware stack levels required when called: 2
  4510 ;; This function calls:
  4511 ;;		_servo
  4512 ;;		_spiDataReady
  4513 ;;		_spiRead
  4514 ;;		_spiWrite
  4515 ;;		i1_tmr0_reload
  4516 ;; This function is called by:
  4517 ;;		Interrupt level 1
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521  01C8                     _isr:	
  4522                           ;psect for function _isr
  4523                           
  4524  01C8                     i1l2006:
  4525                           
  4526                           ;MASTERSPI.c: 95:    if (INTCONbits.T0IF){
  4527  01C8  1D0B               	btfss	11,2	;volatile
  4528  01C9  29CB               	goto	u113_21
  4529  01CA  29CC               	goto	u113_20
  4530  01CB                     u113_21:
  4531  01CB  2A51               	goto	i1l181
  4532  01CC                     u113_20:
  4533  01CC                     i1l2008:
  4534                           
  4535                           ;MASTERSPI.c: 96:         tmr0_reload();
  4536  01CC  120A  158A  2726  120A  118A  	fcall	i1_tmr0_reload
  4537  01D1                     i1l2010:
  4538                           
  4539                           ;MASTERSPI.c: 97:         if (cont_100 == 0){
  4540  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  4541  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  4542  01D3  085C               	movf	_cont_100,w
  4543  01D4  1D03               	btfss	3,2
  4544  01D5  29D7               	goto	u114_21
  4545  01D6  29D8               	goto	u114_20
  4546  01D7                     u114_21:
  4547  01D7  29EE               	goto	i1l2018
  4548  01D8                     u114_20:
  4549  01D8                     i1l2012:
  4550                           
  4551                           ;MASTERSPI.c: 98:             if (cont < 57){
  4552  01D8  3039               	movlw	57
  4553  01D9  027D               	subwf	_cont,w
  4554  01DA  1803               	skipnc
  4555  01DB  29DD               	goto	u115_21
  4556  01DC  29DE               	goto	u115_20
  4557  01DD                     u115_21:
  4558  01DD  29E3               	goto	i1l2016
  4559  01DE                     u115_20:
  4560  01DE                     i1l2014:
  4561                           
  4562                           ;MASTERSPI.c: 99:             cont++;}
  4563  01DE  3001               	movlw	1
  4564  01DF  00F6               	movwf	??_isr
  4565  01E0  0876               	movf	??_isr,w
  4566  01E1  07FD               	addwf	_cont,f
  4567  01E2  29E7               	goto	i1l184
  4568  01E3                     i1l2016:
  4569                           
  4570                           ;MASTERSPI.c: 101:             cont = 48;}
  4571  01E3  3030               	movlw	48
  4572  01E4  00F6               	movwf	??_isr
  4573  01E5  0876               	movf	??_isr,w
  4574  01E6  00FD               	movwf	_cont
  4575  01E7                     i1l184:
  4576                           
  4577                           ;MASTERSPI.c: 102:             TXREG = cont;
  4578  01E7  087D               	movf	_cont,w
  4579  01E8  0099               	movwf	25	;volatile
  4580                           
  4581                           ;MASTERSPI.c: 103:             cont_100 = 10;
  4582  01E9  300A               	movlw	10
  4583  01EA  00F6               	movwf	??_isr
  4584  01EB  0876               	movf	??_isr,w
  4585  01EC  00DC               	movwf	_cont_100
  4586                           
  4587                           ;MASTERSPI.c: 104:         }
  4588  01ED  29F0               	goto	i1l185
  4589  01EE                     i1l2018:
  4590                           
  4591                           ;MASTERSPI.c: 106:             cont_100--;
  4592  01EE  3001               	movlw	1
  4593  01EF  02DC               	subwf	_cont_100,f
  4594  01F0                     i1l185:	
  4595                           ;MASTERSPI.c: 107:         }
  4596                           
  4597                           
  4598                           ;MASTERSPI.c: 109:         if (cont_lcd == 0){
  4599  01F0  085B               	movf	_cont_lcd,w
  4600  01F1  1D03               	btfss	3,2
  4601  01F2  29F4               	goto	u116_21
  4602  01F3  29F5               	goto	u116_20
  4603  01F4                     u116_21:
  4604  01F4  29FC               	goto	i1l2024
  4605  01F5                     u116_20:
  4606  01F5                     i1l2020:
  4607                           
  4608                           ;MASTERSPI.c: 110:            mover = 1;
  4609  01F5  01B0               	clrf	_mover
  4610  01F6  0AB0               	incf	_mover,f
  4611  01F7                     i1l2022:
  4612                           
  4613                           ;MASTERSPI.c: 111:            cont_lcd = 50;
  4614  01F7  3032               	movlw	50
  4615  01F8  00F6               	movwf	??_isr
  4616  01F9  0876               	movf	??_isr,w
  4617  01FA  00DB               	movwf	_cont_lcd
  4618                           
  4619                           ;MASTERSPI.c: 112:         }
  4620  01FB  29FE               	goto	i1l187
  4621  01FC                     i1l2024:
  4622                           
  4623                           ;MASTERSPI.c: 114:             cont_lcd--;
  4624  01FC  3001               	movlw	1
  4625  01FD  02DB               	subwf	_cont_lcd,f
  4626  01FE                     i1l187:	
  4627                           ;MASTERSPI.c: 115:         }
  4628                           
  4629                           
  4630                           ;MASTERSPI.c: 117:          contador2++;
  4631  01FE  3001               	movlw	1
  4632  01FF  00F6               	movwf	??_isr
  4633  0200  0876               	movf	??_isr,w
  4634  0201  07AF               	addwf	_contador2,f
  4635  0202                     i1l2026:
  4636                           
  4637                           ;MASTERSPI.c: 118:         if(contador2>3){
  4638  0202  3004               	movlw	4
  4639  0203  022F               	subwf	_contador2,w
  4640  0204  1C03               	skipc
  4641  0205  2A07               	goto	u117_21
  4642  0206  2A08               	goto	u117_20
  4643  0207                     u117_21:
  4644  0207  2A09               	goto	i1l2030
  4645  0208                     u117_20:
  4646  0208                     i1l2028:
  4647                           
  4648                           ;MASTERSPI.c: 119:             contador2 = 0;
  4649  0208  01AF               	clrf	_contador2
  4650  0209                     i1l2030:
  4651                           
  4652                           ;MASTERSPI.c: 122:         if (min_unidades == 50){
  4653  0209  3032               	movlw	50
  4654  020A  0633               	xorwf	_min_unidades,w
  4655  020B  1D03               	btfss	3,2
  4656  020C  2A0E               	goto	u118_21
  4657  020D  2A0F               	goto	u118_20
  4658  020E                     u118_21:
  4659  020E  2A1A               	goto	i1l189
  4660  020F                     u118_20:
  4661  020F                     i1l2032:
  4662                           
  4663                           ;MASTERSPI.c: 123:             PORTBbits.RB7= 1;
  4664  020F  1786               	bsf	6,7	;volatile
  4665  0210                     i1l2034:
  4666                           
  4667                           ;MASTERSPI.c: 124:             servo(1);
  4668  0210  3001               	movlw	1
  4669  0211  00F4               	movwf	servo@mov
  4670  0212  3000               	movlw	0
  4671  0213  00F5               	movwf	servo@mov+1
  4672  0214  120A  158A  27CC  120A  118A  	fcall	_servo
  4673                           
  4674                           ;MASTERSPI.c: 125:         }
  4675  0219  2A23               	goto	i1l2038
  4676  021A                     i1l189:	
  4677                           ;MASTERSPI.c: 126:         else{
  4678                           
  4679                           
  4680                           ;MASTERSPI.c: 127:             PORTBbits.RB7 = 0;
  4681  021A  1386               	bcf	6,7	;volatile
  4682  021B                     i1l2036:
  4683                           
  4684                           ;MASTERSPI.c: 128:             servo(0);
  4685  021B  3000               	movlw	0
  4686  021C  00F4               	movwf	servo@mov
  4687  021D  00F5               	movwf	servo@mov+1
  4688  021E  120A  158A  27CC  120A  118A  	fcall	_servo
  4689  0223                     i1l2038:
  4690                           
  4691                           ;MASTERSPI.c: 131:         if (min_unidades == 50){
  4692  0223  3032               	movlw	50
  4693  0224  1283               	bcf	3,5	;RP0=0, select bank0
  4694  0225  1303               	bcf	3,6	;RP1=0, select bank0
  4695  0226  0633               	xorwf	_min_unidades,w
  4696  0227  1D03               	btfss	3,2
  4697  0228  2A2A               	goto	u119_21
  4698  0229  2A2B               	goto	u119_20
  4699  022A                     u119_21:
  4700  022A  2B3F               	goto	i1l234
  4701  022B                     u119_20:
  4702  022B  2A3A               	goto	i1l2054
  4703  022C                     i1l2042:
  4704                           
  4705                           ;MASTERSPI.c: 134:             PORTB = 0b00000001;
  4706  022C  3001               	movlw	1
  4707  022D  0086               	movwf	6	;volatile
  4708                           
  4709                           ;MASTERSPI.c: 135:             break;
  4710  022E  2B3F               	goto	i1l234
  4711  022F                     i1l2044:
  4712                           
  4713                           ;MASTERSPI.c: 137:             PORTB = 0b00000010;
  4714  022F  3002               	movlw	2
  4715  0230  0086               	movwf	6	;volatile
  4716                           
  4717                           ;MASTERSPI.c: 138:             break;
  4718  0231  2B3F               	goto	i1l234
  4719  0232                     i1l2046:
  4720                           
  4721                           ;MASTERSPI.c: 140:             PORTB = 0b00000100;
  4722  0232  3004               	movlw	4
  4723  0233  0086               	movwf	6	;volatile
  4724                           
  4725                           ;MASTERSPI.c: 141:             break;
  4726  0234  2B3F               	goto	i1l234
  4727  0235                     i1l2048:
  4728                           
  4729                           ;MASTERSPI.c: 143:             PORTB = 0b00001000;
  4730  0235  3008               	movlw	8
  4731  0236  0086               	movwf	6	;volatile
  4732                           
  4733                           ;MASTERSPI.c: 144:             break;
  4734  0237  2B3F               	goto	i1l234
  4735  0238                     i1l2050:
  4736                           
  4737                           ;MASTERSPI.c: 146:             PORTB = 0b00000000;
  4738  0238  0186               	clrf	6	;volatile
  4739                           
  4740                           ;MASTERSPI.c: 147:             break;
  4741  0239  2B3F               	goto	i1l234
  4742  023A                     i1l2054:
  4743  023A  082F               	movf	_contador2,w
  4744  023B  00F6               	movwf	??_isr
  4745  023C  01F7               	clrf	??_isr+1
  4746                           
  4747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4748                           ; Switch size 1, requested type "simple"
  4749                           ; Number of cases is 1, Range of values is 0 to 0
  4750                           ; switch strategies available:
  4751                           ; Name         Instructions Cycles
  4752                           ; simple_byte            4     3 (average)
  4753                           ; direct_byte           11     8 (fixed)
  4754                           ; jumptable            260     6 (fixed)
  4755                           ;	Chosen strategy is simple_byte
  4756  023D  0877               	movf	??_isr+1,w
  4757  023E  3A00               	xorlw	0	; case 0
  4758  023F  1903               	skipnz
  4759  0240  2A42               	goto	i1l2312
  4760  0241  2A38               	goto	i1l2050
  4761  0242                     i1l2312:
  4762                           
  4763                           ; Switch size 1, requested type "simple"
  4764                           ; Number of cases is 4, Range of values is 0 to 3
  4765                           ; switch strategies available:
  4766                           ; Name         Instructions Cycles
  4767                           ; simple_byte           13     7 (average)
  4768                           ; direct_byte           20     8 (fixed)
  4769                           ; jumptable            260     6 (fixed)
  4770                           ;	Chosen strategy is simple_byte
  4771  0242  0876               	movf	??_isr,w
  4772  0243  3A00               	xorlw	0	; case 0
  4773  0244  1903               	skipnz
  4774  0245  2A2C               	goto	i1l2042
  4775  0246  3A01               	xorlw	1	; case 1
  4776  0247  1903               	skipnz
  4777  0248  2A2F               	goto	i1l2044
  4778  0249  3A03               	xorlw	3	; case 2
  4779  024A  1903               	skipnz
  4780  024B  2A32               	goto	i1l2046
  4781  024C  3A01               	xorlw	1	; case 3
  4782  024D  1903               	skipnz
  4783  024E  2A35               	goto	i1l2048
  4784  024F  2A38               	goto	i1l2050
  4785  0250                     i1l191:	
  4786                           ;MASTERSPI.c: 149:             }
  4787                           
  4788                           
  4789                           ;MASTERSPI.c: 153:    }
  4790  0250  2B3F               	goto	i1l234
  4791  0251                     i1l181:	
  4792                           ;MASTERSPI.c: 154:    else if(PIR1bits.RCIF){
  4793                           
  4794  0251  1283               	bcf	3,5	;RP0=0, select bank0
  4795  0252  1303               	bcf	3,6	;RP1=0, select bank0
  4796  0253  1E8C               	btfss	12,5	;volatile
  4797  0254  2A56               	goto	u120_21
  4798  0255  2A57               	goto	u120_20
  4799  0256                     u120_21:
  4800  0256  2AAF               	goto	i1l2088
  4801  0257                     u120_20:
  4802  0257                     i1l2056:
  4803                           
  4804                           ;MASTERSPI.c: 156:         if (cont == 49){
  4805  0257  3031               	movlw	49
  4806  0258  067D               	xorwf	_cont,w
  4807  0259  1D03               	btfss	3,2
  4808  025A  2A5C               	goto	u121_21
  4809  025B  2A5D               	goto	u121_20
  4810  025C                     u121_21:
  4811  025C  2A62               	goto	i1l2060
  4812  025D                     u121_20:
  4813  025D                     i1l2058:
  4814                           
  4815                           ;MASTERSPI.c: 157:            data1 = RCREG;
  4816  025D  081A               	movf	26,w	;volatile
  4817  025E  00F6               	movwf	??_isr
  4818  025F  0876               	movf	??_isr,w
  4819  0260  00BD               	movwf	_data1
  4820                           
  4821                           ;MASTERSPI.c: 158:         }
  4822  0261  2B3F               	goto	i1l234
  4823  0262                     i1l2060:
  4824  0262  3032               	movlw	50
  4825  0263  067D               	xorwf	_cont,w
  4826  0264  1D03               	btfss	3,2
  4827  0265  2A67               	goto	u122_21
  4828  0266  2A68               	goto	u122_20
  4829  0267                     u122_21:
  4830  0267  2A6D               	goto	i1l2064
  4831  0268                     u122_20:
  4832  0268                     i1l2062:
  4833                           
  4834                           ;MASTERSPI.c: 160:            data2 = RCREG;
  4835  0268  081A               	movf	26,w	;volatile
  4836  0269  00F6               	movwf	??_isr
  4837  026A  0876               	movf	??_isr,w
  4838  026B  00BC               	movwf	_data2
  4839                           
  4840                           ;MASTERSPI.c: 162:         }
  4841  026C  2B3F               	goto	i1l234
  4842  026D                     i1l2064:
  4843  026D  3033               	movlw	51
  4844  026E  067D               	xorwf	_cont,w
  4845  026F  1D03               	btfss	3,2
  4846  0270  2A72               	goto	u123_21
  4847  0271  2A73               	goto	u123_20
  4848  0272                     u123_21:
  4849  0272  2A78               	goto	i1l2068
  4850  0273                     u123_20:
  4851  0273                     i1l2066:
  4852                           
  4853                           ;MASTERSPI.c: 164:            data3 = RCREG;
  4854  0273  081A               	movf	26,w	;volatile
  4855  0274  00F6               	movwf	??_isr
  4856  0275  0876               	movf	??_isr,w
  4857  0276  00BB               	movwf	_data3
  4858                           
  4859                           ;MASTERSPI.c: 166:         }
  4860  0277  2B3F               	goto	i1l234
  4861  0278                     i1l2068:
  4862  0278  3034               	movlw	52
  4863  0279  067D               	xorwf	_cont,w
  4864  027A  1D03               	btfss	3,2
  4865  027B  2A7D               	goto	u124_21
  4866  027C  2A7E               	goto	u124_20
  4867  027D                     u124_21:
  4868  027D  2A83               	goto	i1l2072
  4869  027E                     u124_20:
  4870  027E                     i1l2070:
  4871                           
  4872                           ;MASTERSPI.c: 168:            data4 = RCREG;
  4873  027E  081A               	movf	26,w	;volatile
  4874  027F  00F6               	movwf	??_isr
  4875  0280  0876               	movf	??_isr,w
  4876  0281  00BA               	movwf	_data4
  4877                           
  4878                           ;MASTERSPI.c: 170:         }
  4879  0282  2B3F               	goto	i1l234
  4880  0283                     i1l2072:
  4881  0283  3035               	movlw	53
  4882  0284  067D               	xorwf	_cont,w
  4883  0285  1D03               	btfss	3,2
  4884  0286  2A88               	goto	u125_21
  4885  0287  2A89               	goto	u125_20
  4886  0288                     u125_21:
  4887  0288  2A8E               	goto	i1l2076
  4888  0289                     u125_20:
  4889  0289                     i1l2074:
  4890                           
  4891                           ;MASTERSPI.c: 172:            temp = RCREG;
  4892  0289  081A               	movf	26,w	;volatile
  4893  028A  00F6               	movwf	??_isr
  4894  028B  0876               	movf	??_isr,w
  4895  028C  00B9               	movwf	_temp
  4896                           
  4897                           ;MASTERSPI.c: 174:         }
  4898  028D  2B3F               	goto	i1l234
  4899  028E                     i1l2076:
  4900  028E  3036               	movlw	54
  4901  028F  067D               	xorwf	_cont,w
  4902  0290  1D03               	btfss	3,2
  4903  0291  2A93               	goto	u126_21
  4904  0292  2A94               	goto	u126_20
  4905  0293                     u126_21:
  4906  0293  2A99               	goto	i1l2080
  4907  0294                     u126_20:
  4908  0294                     i1l2078:
  4909                           
  4910                           ;MASTERSPI.c: 176:            val = RCREG;
  4911  0294  081A               	movf	26,w	;volatile
  4912  0295  00F6               	movwf	??_isr
  4913  0296  0876               	movf	??_isr,w
  4914  0297  00FC               	movwf	_val
  4915                           
  4916                           ;MASTERSPI.c: 178:         }
  4917  0298  2B3F               	goto	i1l234
  4918  0299                     i1l2080:
  4919  0299  3037               	movlw	55
  4920  029A  067D               	xorwf	_cont,w
  4921  029B  1D03               	btfss	3,2
  4922  029C  2A9E               	goto	u127_21
  4923  029D  2A9F               	goto	u127_20
  4924  029E                     u127_21:
  4925  029E  2AA4               	goto	i1l2084
  4926  029F                     u127_20:
  4927  029F                     i1l2082:
  4928                           
  4929                           ;MASTERSPI.c: 180:            val2 = RCREG;
  4930  029F  081A               	movf	26,w	;volatile
  4931  02A0  00F6               	movwf	??_isr
  4932  02A1  0876               	movf	??_isr,w
  4933  02A2  00B8               	movwf	_val2
  4934                           
  4935                           ;MASTERSPI.c: 182:         }
  4936  02A3  2B3F               	goto	i1l234
  4937  02A4                     i1l2084:
  4938  02A4  3038               	movlw	56
  4939  02A5  067D               	xorwf	_cont,w
  4940  02A6  1D03               	btfss	3,2
  4941  02A7  2AA9               	goto	u128_21
  4942  02A8  2AAA               	goto	u128_20
  4943  02A9                     u128_21:
  4944  02A9  2A50               	goto	i1l191
  4945  02AA                     u128_20:
  4946  02AA                     i1l2086:
  4947                           
  4948                           ;MASTERSPI.c: 184:            val3 = RCREG;
  4949  02AA  081A               	movf	26,w	;volatile
  4950  02AB  00F6               	movwf	??_isr
  4951  02AC  0876               	movf	??_isr,w
  4952  02AD  00B7               	movwf	_val3
  4953  02AE  2B3F               	goto	i1l234
  4954  02AF                     i1l2088:
  4955  02AF  120A  158A  275E  120A  118A  	fcall	_spiDataReady
  4956  02B4  0870               	movf	?_spiDataReady,w
  4957  02B5  0471               	iorwf	?_spiDataReady+1,w
  4958  02B6  1903               	btfsc	3,2
  4959  02B7  2AB9               	goto	u129_21
  4960  02B8  2ABA               	goto	u129_20
  4961  02B9                     u129_21:
  4962  02B9  2A50               	goto	i1l191
  4963  02BA                     u129_20:
  4964  02BA                     i1l2090:
  4965                           
  4966                           ;MASTERSPI.c: 192:         val_temporal = spiRead();
  4967  02BA  120A  158A  2755  120A  118A  	fcall	_spiRead
  4968  02BF  00F6               	movwf	??_isr
  4969  02C0  0876               	movf	??_isr,w
  4970  02C1  00FB               	movwf	_val_temporal
  4971  02C2                     i1l2092:
  4972                           
  4973                           ;MASTERSPI.c: 193:         if (val_temporal != 0xFF){
  4974  02C2  0A7B               	incf	_val_temporal,w
  4975  02C3  1903               	btfsc	3,2
  4976  02C4  2AC6               	goto	u130_21
  4977  02C5  2AC7               	goto	u130_20
  4978  02C6                     u130_21:
  4979  02C6  2B3C               	goto	i1l2126
  4980  02C7                     u130_20:
  4981  02C7                     i1l2094:
  4982                           
  4983                           ;MASTERSPI.c: 194:             if (val_temporal == 8){
  4984  02C7  3008               	movlw	8
  4985  02C8  067B               	xorwf	_val_temporal,w
  4986  02C9  1D03               	btfss	3,2
  4987  02CA  2ACC               	goto	u131_21
  4988  02CB  2ACD               	goto	u131_20
  4989  02CC                     u131_21:
  4990  02CC  2AD6               	goto	i1l2098
  4991  02CD                     u131_20:
  4992  02CD                     i1l2096:
  4993                           
  4994                           ;MASTERSPI.c: 195:                 spiWrite(data1);
  4995  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  4996  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  4997  02CF  083D               	movf	_data1,w
  4998  02D0  120A  158A  2720  120A  118A  	fcall	_spiWrite
  4999                           
  5000                           ;MASTERSPI.c: 196:             }
  5001  02D5  2B3C               	goto	i1l2126
  5002  02D6                     i1l2098:
  5003  02D6  037B               	decf	_val_temporal,w
  5004  02D7  1D03               	btfss	3,2
  5005  02D8  2ADA               	goto	u132_21
  5006  02D9  2ADB               	goto	u132_20
  5007  02DA                     u132_21:
  5008  02DA  2AE4               	goto	i1l2102
  5009  02DB                     u132_20:
  5010  02DB                     i1l2100:
  5011                           
  5012                           ;MASTERSPI.c: 198:                 spiWrite(data2);
  5013  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  5014  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  5015  02DD  083C               	movf	_data2,w
  5016  02DE  120A  158A  2720  120A  118A  	fcall	_spiWrite
  5017                           
  5018                           ;MASTERSPI.c: 199:             }
  5019  02E3  2B3C               	goto	i1l2126
  5020  02E4                     i1l2102:
  5021  02E4  3002               	movlw	2
  5022  02E5  067B               	xorwf	_val_temporal,w
  5023  02E6  1D03               	btfss	3,2
  5024  02E7  2AE9               	goto	u133_21
  5025  02E8  2AEA               	goto	u133_20
  5026  02E9                     u133_21:
  5027  02E9  2AF3               	goto	i1l2106
  5028  02EA                     u133_20:
  5029  02EA                     i1l2104:
  5030                           
  5031                           ;MASTERSPI.c: 201:                 spiWrite(data3);
  5032  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  5033  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  5034  02EC  083B               	movf	_data3,w
  5035  02ED  120A  158A  2720  120A  118A  	fcall	_spiWrite
  5036                           
  5037                           ;MASTERSPI.c: 202:             }
  5038  02F2  2B3C               	goto	i1l2126
  5039  02F3                     i1l2106:
  5040  02F3  3003               	movlw	3
  5041  02F4  067B               	xorwf	_val_temporal,w
  5042  02F5  1D03               	btfss	3,2
  5043  02F6  2AF8               	goto	u134_21
  5044  02F7  2AF9               	goto	u134_20
  5045  02F8                     u134_21:
  5046  02F8  2B02               	goto	i1l2110
  5047  02F9                     u134_20:
  5048  02F9                     i1l2108:
  5049                           
  5050                           ;MASTERSPI.c: 204:                 spiWrite(data4);
  5051  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  5052  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  5053  02FB  083A               	movf	_data4,w
  5054  02FC  120A  158A  2720  120A  118A  	fcall	_spiWrite
  5055                           
  5056                           ;MASTERSPI.c: 205:             }
  5057  0301  2B3C               	goto	i1l2126
  5058  0302                     i1l2110:
  5059  0302  3004               	movlw	4
  5060  0303  067B               	xorwf	_val_temporal,w
  5061  0304  1D03               	btfss	3,2
  5062  0305  2B07               	goto	u135_21
  5063  0306  2B08               	goto	u135_20
  5064  0307                     u135_21:
  5065  0307  2B11               	goto	i1l2114
  5066  0308                     u135_20:
  5067  0308                     i1l2112:
  5068                           
  5069                           ;MASTERSPI.c: 207:                 spiWrite(temp);
  5070  0308  1283               	bcf	3,5	;RP0=0, select bank0
  5071  0309  1303               	bcf	3,6	;RP1=0, select bank0
  5072  030A  0839               	movf	_temp,w
  5073  030B  120A  158A  2720  120A  118A  	fcall	_spiWrite
  5074                           
  5075                           ;MASTERSPI.c: 208:             }
  5076  0310  2B3C               	goto	i1l2126
  5077  0311                     i1l2114:
  5078  0311  3005               	movlw	5
  5079  0312  067B               	xorwf	_val_temporal,w
  5080  0313  1D03               	btfss	3,2
  5081  0314  2B16               	goto	u136_21
  5082  0315  2B17               	goto	u136_20
  5083  0316                     u136_21:
  5084  0316  2B1E               	goto	i1l2118
  5085  0317                     u136_20:
  5086  0317                     i1l2116:
  5087                           
  5088                           ;MASTERSPI.c: 210:                 spiWrite(val);
  5089  0317  087C               	movf	_val,w
  5090  0318  120A  158A  2720  120A  118A  	fcall	_spiWrite
  5091                           
  5092                           ;MASTERSPI.c: 211:             }
  5093  031D  2B3C               	goto	i1l2126
  5094  031E                     i1l2118:
  5095  031E  3006               	movlw	6
  5096  031F  067B               	xorwf	_val_temporal,w
  5097  0320  1D03               	btfss	3,2
  5098  0321  2B23               	goto	u137_21
  5099  0322  2B24               	goto	u137_20
  5100  0323                     u137_21:
  5101  0323  2B2D               	goto	i1l2122
  5102  0324                     u137_20:
  5103  0324                     i1l2120:
  5104                           
  5105                           ;MASTERSPI.c: 213:                 spiWrite(val2);
  5106  0324  1283               	bcf	3,5	;RP0=0, select bank0
  5107  0325  1303               	bcf	3,6	;RP1=0, select bank0
  5108  0326  0838               	movf	_val2,w
  5109  0327  120A  158A  2720  120A  118A  	fcall	_spiWrite
  5110                           
  5111                           ;MASTERSPI.c: 214:             }
  5112  032C  2B3C               	goto	i1l2126
  5113  032D                     i1l2122:
  5114  032D  3007               	movlw	7
  5115  032E  067B               	xorwf	_val_temporal,w
  5116  032F  1D03               	btfss	3,2
  5117  0330  2B32               	goto	u138_21
  5118  0331  2B33               	goto	u138_20
  5119  0332                     u138_21:
  5120  0332  2B3C               	goto	i1l228
  5121  0333                     u138_20:
  5122  0333                     i1l2124:
  5123                           
  5124                           ;MASTERSPI.c: 216:                 spiWrite(val3);
  5125  0333  1283               	bcf	3,5	;RP0=0, select bank0
  5126  0334  1303               	bcf	3,6	;RP1=0, select bank0
  5127  0335  0837               	movf	_val3,w
  5128  0336  120A  158A  2720  120A  118A  	fcall	_spiWrite
  5129  033B  2B3C               	goto	i1l2126
  5130  033C                     i1l228:
  5131  033C                     i1l2126:
  5132                           
  5133                           ;MASTERSPI.c: 219:         PIR1bits.SSPIF = 0;
  5134  033C  1283               	bcf	3,5	;RP0=0, select bank0
  5135  033D  1303               	bcf	3,6	;RP1=0, select bank0
  5136  033E  118C               	bcf	12,3	;volatile
  5137  033F                     i1l234:
  5138  033F  087A               	movf	??_isr+4,w
  5139  0340  008A               	movwf	10
  5140  0341  0879               	movf	??_isr+3,w
  5141  0342  0084               	movwf	4
  5142  0343  0E78               	swapf	??_isr+2,w
  5143  0344  0083               	movwf	3
  5144  0345  0EFE               	swapf	btemp,f
  5145  0346  0E7E               	swapf	btemp,w
  5146  0347  0009               	retfie
  5147  0348                     __end_of_isr:
  5148                           
  5149                           	psect	intentry
  5150  0004                     __pintentry:	
  5151                           ;incstack = 0
  5152                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5153                           
  5154  0004                     interrupt_function:
  5155  007E                     saved_w	set	btemp
  5156  0004  00FE               	movwf	btemp
  5157  0005  0E03               	swapf	3,w
  5158  0006  00F8               	movwf	??_isr+2
  5159  0007  0804               	movf	4,w
  5160  0008  00F9               	movwf	??_isr+3
  5161  0009  080A               	movf	10,w
  5162  000A  00FA               	movwf	??_isr+4
  5163  000B  120A  118A  29C8   	ljmp	_isr
  5164                           
  5165                           	psect	text23
  5166  0F26                     __ptext23:	
  5167 ;; *************** function i1_tmr0_reload *****************
  5168 ;; Defined at:
  5169 ;;		line 63 in file "TIMER0.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;		None
  5172 ;; Auto vars:     Size  Location     Type
  5173 ;;		None
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  1    wreg      void 
  5176 ;; Registers used:
  5177 ;;		wreg
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5183 ;;      Params:         0       0       0       0       0
  5184 ;;      Locals:         0       0       0       0       0
  5185 ;;      Temps:          0       0       0       0       0
  5186 ;;      Totals:         0       0       0       0       0
  5187 ;;Total ram usage:        0 bytes
  5188 ;; Hardware stack levels used: 1
  5189 ;; This function calls:
  5190 ;;		Nothing
  5191 ;; This function is called by:
  5192 ;;		_isr
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196  0F26                     i1_tmr0_reload:	
  5197                           ;psect for function i1_tmr0_reload
  5198                           
  5199  0F26                     i1l2000:	
  5200                           ;incstack = 0
  5201                           ; Regs used in i1_tmr0_reload: [wreg]
  5202                           
  5203                           
  5204                           ;TIMER0.c: 65:   TMR0 = 246;;
  5205  0F26  30F6               	movlw	246
  5206  0F27  1283               	bcf	3,5	;RP0=0, select bank0
  5207  0F28  1303               	bcf	3,6	;RP1=0, select bank0
  5208  0F29  0081               	movwf	1	;volatile
  5209  0F2A                     i1l2002:
  5210                           
  5211                           ;TIMER0.c: 66:   INTCONbits.T0IF = 0;
  5212  0F2A  110B               	bcf	11,2	;volatile
  5213  0F2B                     i1l35:
  5214  0F2B  0008               	return
  5215  0F2C                     __end_ofi1_tmr0_reload:
  5216                           
  5217                           	psect	text24
  5218  0F20                     __ptext24:	
  5219 ;; *************** function _spiWrite *****************
  5220 ;; Defined at:
  5221 ;;		line 33 in file "SPIS.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;  dat             1    wreg     unsigned char 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  dat             1    0[COMMON] unsigned char 
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  1    wreg      void 
  5228 ;; Registers used:
  5229 ;;		wreg
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5235 ;;      Params:         0       0       0       0       0
  5236 ;;      Locals:         1       0       0       0       0
  5237 ;;      Temps:          0       0       0       0       0
  5238 ;;      Totals:         1       0       0       0       0
  5239 ;;Total ram usage:        1 bytes
  5240 ;; Hardware stack levels used: 1
  5241 ;; This function calls:
  5242 ;;		Nothing
  5243 ;; This function is called by:
  5244 ;;		_isr
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248  0F20                     _spiWrite:	
  5249                           ;psect for function _spiWrite
  5250                           
  5251                           
  5252                           ;incstack = 0
  5253                           ; Regs used in _spiWrite: [wreg]
  5254                           ;spiWrite@dat stored from wreg
  5255  0F20  00F0               	movwf	spiWrite@dat
  5256  0F21                     i1l1932:
  5257                           
  5258                           ;SPIS.c: 33: void spiWrite(char dat);SPIS.c: 34: {;SPIS.c: 35:     SSPBUF = dat;
  5259  0F21  0870               	movf	spiWrite@dat,w
  5260  0F22  1283               	bcf	3,5	;RP0=0, select bank0
  5261  0F23  1303               	bcf	3,6	;RP1=0, select bank0
  5262  0F24  0093               	movwf	19	;volatile
  5263  0F25                     i1l334:
  5264  0F25  0008               	return
  5265  0F26                     __end_of_spiWrite:
  5266                           
  5267                           	psect	text25
  5268  0F55                     __ptext25:	
  5269 ;; *************** function _spiRead *****************
  5270 ;; Defined at:
  5271 ;;		line 46 in file "SPIS.c"
  5272 ;; Parameters:    Size  Location     Type
  5273 ;;		None
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;		None
  5276 ;; Return value:  Size  Location     Type
  5277 ;;                  1    wreg      unsigned char 
  5278 ;; Registers used:
  5279 ;;		wreg, status,2, status,0, pclath, cstack
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5285 ;;      Params:         0       0       0       0       0
  5286 ;;      Locals:         0       0       0       0       0
  5287 ;;      Temps:          0       0       0       0       0
  5288 ;;      Totals:         0       0       0       0       0
  5289 ;;Total ram usage:        0 bytes
  5290 ;; Hardware stack levels used: 1
  5291 ;; Hardware stack levels required when called: 1
  5292 ;; This function calls:
  5293 ;;		_spiReceiveWait
  5294 ;; This function is called by:
  5295 ;;		_isr
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299  0F55                     _spiRead:	
  5300                           ;psect for function _spiRead
  5301                           
  5302  0F55                     i1l1926:	
  5303                           ;incstack = 0
  5304                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  5305                           
  5306                           
  5307                           ;SPIS.c: 48:     spiReceiveWait();
  5308  0F55  120A  158A  2738  120A  158A  	fcall	_spiReceiveWait
  5309  0F5A                     i1l1928:
  5310                           
  5311                           ;SPIS.c: 49:     return(SSPBUF);
  5312  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  5313  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  5314  0F5C  0813               	movf	19,w	;volatile
  5315  0F5D                     i1l342:
  5316  0F5D  0008               	return
  5317  0F5E                     __end_of_spiRead:
  5318                           
  5319                           	psect	text26
  5320  0F38                     __ptext26:	
  5321 ;; *************** function _spiReceiveWait *****************
  5322 ;; Defined at:
  5323 ;;		line 28 in file "SPIS.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;		None
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;		None
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  1    wreg      void 
  5330 ;; Registers used:
  5331 ;;		None
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5337 ;;      Params:         0       0       0       0       0
  5338 ;;      Locals:         0       0       0       0       0
  5339 ;;      Temps:          0       0       0       0       0
  5340 ;;      Totals:         0       0       0       0       0
  5341 ;;Total ram usage:        0 bytes
  5342 ;; Hardware stack levels used: 1
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_spiRead
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350  0F38                     _spiReceiveWait:	
  5351                           ;psect for function _spiReceiveWait
  5352                           
  5353  0F38                     i1l1780:	
  5354                           ;incstack = 0
  5355                           ; Regs used in _spiReceiveWait: []
  5356                           
  5357  0F38                     i1l328:	
  5358                           ;SPIS.c: 30:     while ( !SSPSTATbits.BF );
  5359                           
  5360  0F38  1683               	bsf	3,5	;RP0=1, select bank1
  5361  0F39  1303               	bcf	3,6	;RP1=0, select bank1
  5362  0F3A  1C14               	btfss	20,0	;volatile
  5363  0F3B  2F3D               	goto	u75_21
  5364  0F3C  2F3E               	goto	u75_20
  5365  0F3D                     u75_21:
  5366  0F3D  2F38               	goto	i1l328
  5367  0F3E                     u75_20:
  5368  0F3E                     i1l331:
  5369  0F3E  0008               	return
  5370  0F3F                     __end_of_spiReceiveWait:
  5371                           
  5372                           	psect	text27
  5373  0F5E                     __ptext27:	
  5374 ;; *************** function _spiDataReady *****************
  5375 ;; Defined at:
  5376 ;;		line 38 in file "SPIS.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;		None
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;		None
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  2    0[COMMON] unsigned int 
  5383 ;; Registers used:
  5384 ;;		wreg, status,2
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5390 ;;      Params:         2       0       0       0       0
  5391 ;;      Locals:         0       0       0       0       0
  5392 ;;      Temps:          0       0       0       0       0
  5393 ;;      Totals:         2       0       0       0       0
  5394 ;;Total ram usage:        2 bytes
  5395 ;; Hardware stack levels used: 1
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_isr
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403  0F5E                     _spiDataReady:	
  5404                           ;psect for function _spiDataReady
  5405                           
  5406  0F5E                     i1l1914:	
  5407                           ;incstack = 0
  5408                           ; Regs used in _spiDataReady: [wreg+status,2]
  5409                           
  5410                           
  5411                           ;SPIS.c: 40:     if(SSPSTATbits.BF)
  5412  0F5E  1683               	bsf	3,5	;RP0=1, select bank1
  5413  0F5F  1303               	bcf	3,6	;RP1=0, select bank1
  5414  0F60  1C14               	btfss	20,0	;volatile
  5415  0F61  2F63               	goto	u109_21
  5416  0F62  2F64               	goto	u109_20
  5417  0F63                     u109_21:
  5418  0F63  2F69               	goto	i1l1922
  5419  0F64                     u109_20:
  5420  0F64                     i1l1916:
  5421                           
  5422                           ;SPIS.c: 41:         return 1;
  5423  0F64  3001               	movlw	1
  5424  0F65  00F0               	movwf	?_spiDataReady
  5425  0F66  3000               	movlw	0
  5426  0F67  00F1               	movwf	?_spiDataReady+1
  5427  0F68  2F6B               	goto	i1l338
  5428  0F69                     i1l1922:
  5429                           
  5430                           ;SPIS.c: 43:         return 0;
  5431  0F69  01F0               	clrf	?_spiDataReady
  5432  0F6A  01F1               	clrf	?_spiDataReady+1
  5433  0F6B                     i1l338:
  5434  0F6B  0008               	return
  5435  0F6C                     __end_of_spiDataReady:
  5436                           
  5437                           	psect	text28
  5438  0FCC                     __ptext28:	
  5439 ;; *************** function _servo *****************
  5440 ;; Defined at:
  5441 ;;		line 362 in file "MASTERSPI.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;  mov             2    4[COMMON] unsigned short 
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;		None
  5446 ;; Return value:  Size  Location     Type
  5447 ;;                  1    wreg      void 
  5448 ;; Registers used:
  5449 ;;		wreg, status,2, status,0, pclath, cstack
  5450 ;; Tracked objects:
  5451 ;;		On entry : 0/0
  5452 ;;		On exit  : 0/0
  5453 ;;		Unchanged: 0/0
  5454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5455 ;;      Params:         2       0       0       0       0
  5456 ;;      Locals:         0       0       0       0       0
  5457 ;;      Temps:          0       0       0       0       0
  5458 ;;      Totals:         2       0       0       0       0
  5459 ;;Total ram usage:        2 bytes
  5460 ;; Hardware stack levels used: 1
  5461 ;; Hardware stack levels required when called: 1
  5462 ;; This function calls:
  5463 ;;		_pwm_duty_cycle
  5464 ;; This function is called by:
  5465 ;;		_isr
  5466 ;; This function uses a non-reentrant model
  5467 ;;
  5468                           
  5469  0FCC                     _servo:	
  5470                           ;psect for function _servo
  5471                           
  5472  0FCC                     i1l1908:	
  5473                           ;incstack = 0
  5474                           ; Regs used in _servo: [wreg+status,2+status,0+pclath+cstack]
  5475                           
  5476                           
  5477                           ;MASTERSPI.c: 363:     if (mov == 1){
  5478  0FCC  0374               	decf	servo@mov,w
  5479  0FCD  0475               	iorwf	servo@mov+1,w
  5480  0FCE  1D03               	btfss	3,2
  5481  0FCF  2FD1               	goto	u108_21
  5482  0FD0  2FD2               	goto	u108_20
  5483  0FD1                     u108_21:
  5484  0FD1  2FDC               	goto	i1l1912
  5485  0FD2                     u108_20:
  5486  0FD2                     i1l1910:
  5487                           
  5488                           ;MASTERSPI.c: 364:         pwm_duty_cycle(94);
  5489  0FD2  305E               	movlw	94
  5490  0FD3  00F0               	movwf	pwm_duty_cycle@duty_cycle
  5491  0FD4  3000               	movlw	0
  5492  0FD5  00F1               	movwf	pwm_duty_cycle@duty_cycle+1
  5493  0FD6  120A  158A  2783  120A  158A  	fcall	_pwm_duty_cycle
  5494                           
  5495                           ;MASTERSPI.c: 365:     }
  5496  0FDB  2FE5               	goto	i1l265
  5497  0FDC                     i1l1912:
  5498                           
  5499                           ;MASTERSPI.c: 367:         pwm_duty_cycle(31);
  5500  0FDC  301F               	movlw	31
  5501  0FDD  00F0               	movwf	pwm_duty_cycle@duty_cycle
  5502  0FDE  3000               	movlw	0
  5503  0FDF  00F1               	movwf	pwm_duty_cycle@duty_cycle+1
  5504  0FE0  120A  158A  2783  120A  158A  	fcall	_pwm_duty_cycle
  5505  0FE5                     i1l265:
  5506  0FE5  0008               	return
  5507  0FE6                     __end_of_servo:
  5508                           
  5509                           	psect	text29
  5510  0F83                     __ptext29:	
  5511 ;; *************** function _pwm_duty_cycle *****************
  5512 ;; Defined at:
  5513 ;;		line 33 in file "PWM.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;  duty_cycle      2    0[COMMON] unsigned int 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;		None
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  1    wreg      void 
  5520 ;; Registers used:
  5521 ;;		wreg, status,2, status,0
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5527 ;;      Params:         2       0       0       0       0
  5528 ;;      Locals:         0       0       0       0       0
  5529 ;;      Temps:          2       0       0       0       0
  5530 ;;      Totals:         4       0       0       0       0
  5531 ;;Total ram usage:        4 bytes
  5532 ;; Hardware stack levels used: 1
  5533 ;; This function calls:
  5534 ;;		Nothing
  5535 ;; This function is called by:
  5536 ;;		_servo
  5537 ;; This function uses a non-reentrant model
  5538 ;;
  5539                           
  5540  0F83                     _pwm_duty_cycle:	
  5541                           ;psect for function _pwm_duty_cycle
  5542                           
  5543  0F83                     i1l1778:	
  5544                           ;incstack = 0
  5545                           ; Regs used in _pwm_duty_cycle: [wreg+status,2+status,0]
  5546                           
  5547                           
  5548                           ;PWM.c: 34:     CCPR1L = (uint8_t)(duty_cycle>>2);
  5549  0F83  0871               	movf	pwm_duty_cycle@duty_cycle+1,w
  5550  0F84  00F3               	movwf	??_pwm_duty_cycle+1
  5551  0F85  0870               	movf	pwm_duty_cycle@duty_cycle,w
  5552  0F86  00F2               	movwf	??_pwm_duty_cycle
  5553  0F87  1003               	clrc
  5554  0F88  0CF3               	rrf	??_pwm_duty_cycle+1,f
  5555  0F89  0CF2               	rrf	??_pwm_duty_cycle,f
  5556  0F8A  1003               	clrc
  5557  0F8B  0CF3               	rrf	??_pwm_duty_cycle+1,f
  5558  0F8C  0CF2               	rrf	??_pwm_duty_cycle,f
  5559  0F8D  0872               	movf	??_pwm_duty_cycle,w
  5560  0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  5561  0F8F  1303               	bcf	3,6	;RP1=0, select bank0
  5562  0F90  0095               	movwf	21	;volatile
  5563                           
  5564                           ;PWM.c: 35:     CCP1CONbits.DC1B = duty_cycle & 0b11;
  5565  0F91  0870               	movf	pwm_duty_cycle@duty_cycle,w
  5566  0F92  3903               	andlw	3
  5567  0F93  00F2               	movwf	??_pwm_duty_cycle
  5568  0F94  0EF2               	swapf	??_pwm_duty_cycle,f
  5569  0F95  0817               	movf	23,w	;volatile
  5570  0F96  0672               	xorwf	??_pwm_duty_cycle,w
  5571  0F97  39CF               	andlw	-49
  5572  0F98  0672               	xorwf	??_pwm_duty_cycle,w
  5573  0F99  0097               	movwf	23	;volatile
  5574  0F9A                     i1l388:
  5575  0F9A  0008               	return
  5576  0F9B                     __end_of_pwm_duty_cycle:
  5577  007E                     btemp	set	126	;btemp
  5578  007E                     wtemp0	set	126
  5579                           
  5580                           	psect	idloc
  5581                           
  5582                           ;Config register IDLOC0 @ 0x2000
  5583                           ;	unspecified, using default values
  5584  2000                     	org	8192
  5585  2000  3FFF               	dw	16383
  5586                           
  5587                           ;Config register IDLOC1 @ 0x2001
  5588                           ;	unspecified, using default values
  5589  2001                     	org	8193
  5590  2001  3FFF               	dw	16383
  5591                           
  5592                           ;Config register IDLOC2 @ 0x2002
  5593                           ;	unspecified, using default values
  5594  2002                     	org	8194
  5595  2002  3FFF               	dw	16383
  5596                           
  5597                           ;Config register IDLOC3 @ 0x2003
  5598                           ;	unspecified, using default values
  5599  2003                     	org	8195
  5600  2003  3FFF               	dw	16383
  5601                           
  5602                           	psect	config
  5603                           
  5604                           ;Config register CONFIG1 @ 0x2007
  5605                           ;	Oscillator Selection bits
  5606                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5607                           ;	Watchdog Timer Enable bit
  5608                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5609                           ;	Power-up Timer Enable bit
  5610                           ;	PWRTE = OFF, PWRT disabled
  5611                           ;	RE3/MCLR pin function select bit
  5612                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5613                           ;	Code Protection bit
  5614                           ;	CP = OFF, Program memory code protection is disabled
  5615                           ;	Data Code Protection bit
  5616                           ;	CPD = OFF, Data memory code protection is disabled
  5617                           ;	Brown Out Reset Selection bits
  5618                           ;	BOREN = OFF, BOR disabled
  5619                           ;	Internal External Switchover bit
  5620                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5621                           ;	Fail-Safe Clock Monitor Enabled bit
  5622                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5623                           ;	Low Voltage Programming Enable bit
  5624                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5625                           ;	In-Circuit Debugger Mode bit
  5626                           ;	DEBUG = 0x1, unprogrammed default
  5627  2007                     	org	8199
  5628  2007  20D4               	dw	8404
  5629                           
  5630                           ;Config register CONFIG2 @ 0x2008
  5631                           ;	Brown-out Reset Selection bit
  5632                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5633                           ;	Flash Program Memory Self Write Enable bits
  5634                           ;	WRT = OFF, Write protection off
  5635  2008                     	org	8200
  5636  2008  3FFF               	dw	16383

Data Sizes:
    Strings     33
    Constant    0
    Data        5
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     27      61
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 25
		 -> STR_5(CODE[2]), STR_4(CODE[6]), STR_3(CODE[2]), STR_2(CODE[2]), 
		 -> STR_1(CODE[25]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_servo
    _servo->_pwm_duty_cycle

Critical Paths under _main in BANK0

    _main->_valor_lux
    _valor_temperatura->___awdiv
    _valor_lux->___lldiv
    _setup->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4032
                                             23 BANK0      4     4      0
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _setup
                          _valor_lux
                  _valor_temperatura
 ---------------------------------------------------------------------------------
 (1) _valor_temperatura                                    5     3      2    1324
                                              9 BANK0      5     3      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     600
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _valor_lux                                            9     5      4    1815
                                             14 BANK0      9     5      4
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     770
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     132
                           _Lcd_Init
                           _init_SPI
                          _init_UART
                       _init_osc_MHz
                           _pwm_init
                          _tmr0_init
                        _tmr0_reload
 ---------------------------------------------------------------------------------
 (2) _tmr0_reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _pwm_init                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _init_osc_MHz                                         3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_SPI                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0      66
                                              3 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     299
                                              3 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     330
                                              3 BANK0      4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0      44
                                              1 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  5     5      0     392
                                              6 COMMON     5     5      0
                              _servo
                       _spiDataReady
                            _spiRead
                           _spiWrite
                      i1_tmr0_reload
 ---------------------------------------------------------------------------------
 (6) i1_tmr0_reload                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (7) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _spiDataReady                                         2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) _servo                                                2     0      2     370
                                              4 COMMON     2     0      2
                     _pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (7) _pwm_duty_cycle                                       4     2      2     196
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
     _Lcd_Cmd
   _Lcd_Shift_Right
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   _setup
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _init_SPI
     _init_UART
     _init_osc_MHz
     _pwm_init
     _tmr0_init
     _tmr0_reload
   _valor_lux
     ___lldiv
     ___llmod
   _valor_temperatura
     ___awdiv
     ___awmod

 _isr (ROOT)
   _servo
     _pwm_duty_cycle
   _spiDataReady
   _spiRead
     _spiReceiveWait
   _spiWrite
   i1_tmr0_reload

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1B      3D       5       76.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4B      12        0.0%
ABS                  0      0      4B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Thu Sep 29 20:11:30 2022

                        pc 0002                _SSPSTATbits 0094                         l12 0748  
                       l30 053C                         l22 0512                         l31 0542  
                       l24 0518                         l32 056C                         l25 051E  
                       l26 0524                         l27 052A                         l35 0F37  
                       l28 0530                         l29 0536                         l48 0F82  
             ___awdiv@sign 0044                         fsr 0004                        l300 07B0  
                      l303 0F4C                        l241 00F5                        l306 0F45  
                      l260 0436                        l325 0FFF                        l254 0707  
                      l510 0507                        l257 0620                        l291 06C0  
                      l276 0F31                        l380 075A                        l294 0FB2  
                      l382 077F                        l279 0FCB                        l288 07FD  
                      l384 0783                        l640 05C7                        l385 0787  
                      l378 074D                        l627 049F                        l696 0676  
                      _RE1 0049                        _PR2 0092                        u800 04E1  
                      u801 04E0                        u740 0783                        u820 04FF  
                      u741 0782                        u821 04FE                        u805 04DD  
                      u910 0491                        u830 043E                        u815 04F1  
                      u911 0490                        u831 043D                        u760 04B2  
                      u920 0496                        u840 0449                        u761 04B1  
                      u921 0495                        u905 0485                        u841 0448  
                      u850 045A                        u930 0574                        u851 0459  
                      u931 0573                        u780 04C6                        u940 057F  
                      u781 04C5                        u941 057E                        u870 046C  
                      u950 058A                        u775 04B7                        u871 046B  
                      u951 0589                        u865 045E                        u890 047D  
                      u970 059C                        u795 04C8                        u891 047C  
                      u971 059B                        u980 05A6                        u885 046D  
                      u981 05A5                        u965 058E                        u895 0479  
                      u985 05A2                        u995 05AD                        _isr 01C8  
                      _val 007C                        _lux 002D                        _luz 0020  
                      fsr0 0004                        indf 0000               ___awmod@sign 0044  
                     l2200 01AA                       l2210 01BE                       l2202 01AB  
                     l2212 01C0                       l2204 01B0                       l2140 0053  
                     l2310 073A                       l2206 01B5                       l2150 00A5  
                     l2142 005C                       l2134 003E                       l2208 01BA  
                     l2160 00E0                       l2152 00B2                       l2144 0068  
                     l2136 0043                       l2306 0552                       l2170 011F  
                     l2162 00E7                       l2154 00B8                       l2146 0074  
                     l2138 004D                       l1700 0F7F                       l2308 076D  
                     l2180 0169                       l2172 0126                       l2164 00EE  
                     l2156 00C5                       l2148 009D                       l1710 0FA8  
                     l2190 018D                       l2182 016F                       l2174 0153  
                     l2166 010D                       l2158 00CB                       l1712 0FAF  
                     l1704 0F9E                       l1720 0755                       l1800 04F9  
                     l2192 0195                       l2184 0177                       l2176 0159  
                     l2168 0113                       l1642 0F2F                       l1650 0FC0  
                     l1706 0F9F                       l1722 075D                       l1730 0775  
                     l1714 074C                       l1802 04FF                       l1810 043E  
                     l2194 019C                       l2186 017F                       l2178 0161  
                     l1652 0FC8                       l1644 0FB6                       l1708 0FA5  
                     l1660 071D                       l1732 0777                       l1724 0760  
                     l1716 0750                       l1900 065F                       l1820 0452  
                     l1812 0443                       l2196 01A1                       l2188 0185  
                     l1646 0FB7                       l1750 0FF1                       l1662 0724  
                     l1654 070B                       l1734 077B                       l1718 0753  
                     l1902 0668                       l1830 0468                       l1822 0454  
                     l1814 0445                       l1806 0437                       l2198 01A6  
                     l1648 0FBD                       l1760 0FFA                       l1752 0FF2  
                     l1744 0FE6                       l1664 0729                       l1656 070F  
                     l1736 077E                       l1728 0765                       l1904 066E  
                     l1840 048B                       l1832 046C                       l1824 045A  
                     l1816 0449                       l1808 043A                       l1770 067D  
                     l1762 0FFD                       l1754 0FF3                       l1746 0FEA  
                     l1690 0F73                       l1658 0716                       l1674 050B  
                     l1682 0F32                       l1834 047D                       l1826 045D  
                     l1842 0491                       l1818 044E                       l1850 056D  
                     l1772 0688                       l1764 0FFE                       l1756 0FF6  
                     l1748 0FED                       l1692 0F77                       l1668 0730  
                     l1676 0548                       l1684 0F36                       l1940 06D9  
                     l1844 0496                       l1836 0483                       l1828 0464  
                     l1860 057F                       l1852 0570                       l1774 0696  
                     l1758 0FF7                       l1694 0F78                       l1950 06F2  
                     l1942 06DC                       l1934 06C1                       l1790 04C6  
                     l1782 04A0                       l1846 049B                       l1838 0484  
                     l1870 0598                       l1862 0584                       l1854 0574  
                     l1776 069C                       l1768 0677                       l1696 0F7B  
                     l1688 0F6C                       l1960 0704                       l1952 06F8  
                     l1944 06E2                       l1936 06CF                       l1792 04CF  
                     l1784 04B2                       l1872 059C                       l1864 058A  
                     l1880 05B9                       l1856 0579                       l1970 07EC  
                     l1698 0F7E                       l1954 06FD                       l1946 06E8  
                     l1938 06D7                       l1794 04E1                       l1786 04B5  
                     l1890 062B                       l1882 05BE                       l1874 05A6  
                     l1866 058D                       l1858 057B                       l1972 07F2  
                     l1964 07DB                       l1980 079B                       l1956 0702  
                     l1948 06ED                       l1796 04EF                       l1788 04C2  
                     l1892 062E                       l1884 05C3                       l1876 05AC  
                     l1868 0594                       l1974 07F7                       l1966 07E0  
                     l1982 07A3                       l1958 0703                       l1798 04F0  
                     l1894 063B                       l1878 05B3                       l1990 05C8  
                     l1968 07E5                       l1976 078B                       l1896 063F  
                     l1888 0621                       l1984 0348                       l1992 061C  
                     l1978 078E                       l1898 0651                       l1986 0432  
                     l1996 0F3F                       l1998 0F46                       ?_isr 0070  
                     STR_1 07B7                       STR_2 07D6                       STR_3 07D6  
                     STR_4 07D0                       STR_5 07D6                       u1000 05B9  
                     u1001 05B8                       u1010 05BE                       u1011 05BD  
                     u1100 07E0                       u1020 062B                       u1101 07DF  
                     u1021 062A                       u1110 07F2                       u1111 07F1  
                     u1120 07B0                       u1040 063F                       u1121 07AF  
                     u1041 063E                       u1050 0651                       u1051 0650  
                     u1035 0630                       u1070 066E                       u1071 066D  
                     u1055 064D                       u1065 0660                       u1420 00E7  
                     u1421 00E6                       u1405 00BB                       u1430 011F  
                     u1431 011E                       u1415 00CE                       u1440 019C  
                     u1441 019B                       u1450 01A1                       u1507 0FAC  
                     u1451 01A0                       u1460 01B5                       u1517 0FC4  
                     u1461 01B4                       u1395 00A8                       u1477 0683  
                     u1487 0692                       u1497 06A0                       i1l35 0F2B  
                     _TMR0 0001          ?_Lcd_Write_String 0070                       _cont 007D  
                     _main 003E                       _val2 0038                       _val3 0037  
                     _temp 0039                       btemp 007E                       start 000E  
       ??_Lcd_Write_String 0041            __end_of_Lcd_Cmd 0FCC             _pwm_duty_cycle 0F83  
                    ??_isr 0076                      ?_main 0070            __end_of___awdiv 04A0  
          __end_of___awmod 05C8                      _ANSEL 0188            __end_of___lldiv 0508  
          ___awdiv@divisor 003E            __end_of___llmod 0677                      i1l234 033F  
                    i1l331 0F3E                      i1l228 033C                      i1l181 0251  
                    i1l342 0F5D                      i1l334 0F25                      i1l191 0250  
                    i1l328 0F38                      i1l184 01E7                      i1l265 0FE5  
                    i1l185 01F0                      i1l338 0F6B                      i1l187 01FE  
                    i1l189 021A                      i1l388 0F9A            ___awdiv@counter 0043  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      u75_20 0F3E  
                    u75_21 0F3D                      _TXREG 0019                      _data1 003D  
                    _data2 003C                      _data3 003B                      _data4 003A  
                    _mover 0030                      _servo 0FCC                      _setup 06C1  
                    pclath 000A            __end_of_spiRead 0F5E                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 06C1           __end_of_Lcd_Port 0F32  
   __end_of_pwm_duty_cycle 0F9B            __initialization 0011               __end_of_main 01C8  
                   ??_main 0055               ?_tmr0_reload 0070           ___llmod@dividend 0042  
                   _CCPR1L 0015           ___awdiv@dividend 0040                     ?_servo 0074  
                   ?_setup 0070                     _ANSELH 0189          _valor_temperatura 05C8  
                   i1l2000 0F26                     i1l2002 0F2A                     i1l2010 01D1  
                   i1l2100 02DB                     i1l2020 01F5                     i1l2012 01D8  
                   i1l2110 0302                     i1l2102 02E4                     i1l2030 0209  
                   i1l2022 01F7                     i1l2014 01DE                     i1l2006 01C8  
                   i1l2120 0324                     i1l2112 0308                     i1l2104 02EA  
                   i1l2032 020F                     i1l2024 01FC                     i1l2016 01E3  
                   i1l2008 01CC                     i1l2122 032D                     i1l2114 0311  
                   i1l2106 02F3                     i1l2050 0238                     i1l2042 022C  
                   i1l2034 0210                     i1l2026 0202                     i1l2018 01EE  
                   i1l2124 0333                     i1l2116 0317                     i1l2108 02F9  
                   i1l2060 0262                     i1l2044 022F                     i1l2036 021B  
                   i1l2028 0208                     i1l2118 031E                     i1l2126 033C  
                   i1l2070 027E                     i1l2062 0268                     i1l2046 0232  
                   i1l2054 023A                     i1l2038 0223                     i1l2080 0299  
                   i1l2072 0283                     i1l2064 026D                     i1l2056 0257  
                   u120_20 0257                     i1l2312 0242                     i1l2048 0235  
                   u120_21 0256                     i1l2090 02BA                     i1l2082 029F  
                   i1l2074 0289                     i1l2066 0273                     i1l2058 025D  
                   i1l2092 02C2                     i1l2084 02A4                     i1l2076 028E  
                   i1l2068 0278                     i1l2094 02C7                     i1l2086 02AA  
                   i1l2078 0294                     i1l2096 02CD                     u121_20 025D  
                   i1l2088 02AF                     u113_20 01CC                     u121_21 025C  
                   u113_21 01CB                     i1l2098 02D6                     i1l1910 0FD2  
                   i1l1912 0FDC                     u130_20 02C7                     u122_20 0268  
                   u114_20 01D8                     u130_21 02C6                     u122_21 0267  
                   u114_21 01D7                     i1l1922 0F69                     i1l1914 0F5E  
                   i1l1908 0FCC                     i1l1916 0F64                     i1l1780 0F38  
                   i1l1932 0F21                     i1l1926 0F55                     i1l1928 0F5A  
                   u131_20 02CD                     u123_20 0273                     u115_20 01DE  
                   u131_21 02CC                     u123_21 0272                     u115_21 01DD  
                   i1l1778 0F83                     u108_20 0FD2                     u132_20 02DB  
                   u124_20 027E                     u116_20 01F5                     u108_21 0FD1  
                   u132_21 02DA                     u124_21 027D                     u116_21 01F4  
                   u109_20 0F64                     u133_20 02EA                     u125_20 0289  
                   u117_20 0208                     u109_21 0F63                     u133_21 02E9  
                   u125_21 0288                     u117_21 0207                     u134_20 02F9  
                   u126_20 0294                     u118_20 020F                     u134_21 02F8  
                   u126_21 0293                     u118_21 020E                     u135_20 0308  
                   u127_20 029F                     u119_20 022B                     u135_21 0307  
                   u127_21 029E                     u119_21 022A                     u136_20 0317  
                   u128_20 02AA                     u136_21 0316                     u128_21 02A9  
                   u137_20 0324                     u129_20 02BA                     u137_21 0323  
                   u129_21 02B9                     u138_20 0333                     u138_21 0332  
                ??_Lcd_Cmd 003F                     _SPBRGH 009A         ?_valor_temperatura 0047  
                   _SSPBUF 0013              ?_init_osc_MHz 0070            ?_pwm_duty_cycle 0070  
      ??_valor_temperatura 0049                  ??___awdiv 0042                  ??___awmod 0042  
                ??___lldiv 0046                  ??___llmod 0046           __end_of_init_SPI 1000  
         init_osc_MHz@freq 0040           ___awdiv@quotient 0045            ___awmod@divisor 003E  
                   _lumens 0025            ___awmod@counter 0043               __pdataCOMMON 007D  
                   saved_w 007E           __end_of_spiWrite 0F26                  ??_spiRead 0070  
__end_of_valor_temperatura 0621           __end_of_pwm_init 0788            pwm_init@channel 0040  
          Lcd_Set_Cursor@a 0043            Lcd_Set_Cursor@b 0041    __end_of__initialization 003A  
           ??_init_osc_MHz 003E             __pcstackCOMMON 0070               __pidataBANK0 0F1C  
            __end_of_servo 0FE6              __end_of_setup 0708             _Lcd_Set_Cursor 07D8  
           _OPTION_REGbits 0081             _Lcd_Shift_Left 0F3F                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_servo 0076                    ??_setup 0043  
               __pbssBANK0 0020                 __pmaintext 003E                 __pintentry 0004  
                  _CCP1CON 0017                    _CCP2CON 001D     __end_of_Lcd_Set_Cursor 07FE  
            ?_spiDataReady 0070     __end_of_Lcd_Shift_Left 0F46          ??_Lcd_Shift_Right 0041  
               ??_Lcd_Init 0041                 ??_Lcd_Port 003E                 __stringtab 07B1  
               _cont_mover 005A             _Lcd_Write_Char 0F9B                  ?_init_SPI 0070  
                  _Lcd_Cmd 0FB3                  ?_spiWrite 0070                    ___awdiv 0437  
                  ___awmod 056D                    ___lldiv 04A0                    ___llmod 0621  
                ?_pwm_init 0070            ?_Lcd_Set_Cursor 0041                    __ptext1 05C8  
                  __ptext2 056D                    __ptext3 0437                    __ptext4 0348  
                  __ptext5 0621                    __ptext6 04A0                    __ptext7 06C1  
                  __ptext8 0F32                    __ptext9 0508             ??_spiDataReady 0072  
        __end_of_init_UART 0F83       __end_of_init_osc_MHz 0749                  _T2CONbits 0012  
          ?_Lcd_Shift_Left 0070           ___awmod@dividend 0040                    _spiRead 0F55  
            i1_tmr0_reload 0F26                    clrloop0 0F4E     __end_of_Lcd_Write_Char 0FB3  
     end_of_initialization 003A          __end_of_tmr0_init 056D                 ??_init_SPI 003E  
         ??_pwm_duty_cycle 0072          __end_of_valor_lux 0437            ___lldiv@divisor 003E  
          ___lldiv@counter 004B                  _RCSTAbits 0018                 ??_spiWrite 0070  
                Lcd_Port@a 003E                 ??_pwm_init 003E              _hour_unidades 0032  
                _PORTBbits 0006                  _PORTEbits 0009                  _TRISAbits 0085  
                _TRISCbits 0087             ?i1_tmr0_reload 0070                spiWrite@dat 0070  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0043          Lcd_Write_String@i 0041  
              _CCP1CONbits 0017                _CCP2CONbits 001D                  _TXSTAbits 0098  
           _spiReceiveWait 0F38           _Lcd_Write_String 0788              __pidataCOMMON 07FE  
              _BAUDCTLbits 0187        start_initialization 0011                __end_of_isr 0348  
          ___llmod@divisor 003E            ___llmod@counter 0047       __end_of_spiDataReady 0F6C  
   __end_of_spiReceiveWait 0F3F            _Lcd_Shift_Right 0F46                __pdataBANK0 0059  
          Lcd_Write_Char@a 0040            ??i1_tmr0_reload 0070                __pbssCOMMON 007B  
                ___latbits 0002              __pcstackBANK0 003E                   ?_Lcd_Cmd 0070  
             _init_osc_MHz 0708            ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0042  
 pwm_duty_cycle@duty_cycle 0070                   ?___awdiv 003E                   ?___awmod 003E  
                 ?___lldiv 003E                   ?___llmod 003E           ??_Lcd_Shift_Left 0041  
                __pstrings 07B1                  _contador2 002F              ??_tmr0_reload 003E  
                _init_UART 0F6C                   ?_spiRead 0070               _min_unidades 0033  
        interrupt_function 0004               _hour_decenas 0031    __end_of_Lcd_Shift_Right 0F4D  
                clear_ram0 0F4D                  _tmr0_init 0508                   _PIE1bits 008C  
                 Lcd_Cmd@a 0040                   _PIR1bits 000C                  _valor_lux 0348  
             _sec_unidades 0035         tmr0_init@prescaler 0040                __stringbase 07B6  
              _cont_mover2 0059           ??_Lcd_Write_Char 003F                 ?_init_UART 0070  
                 _Lcd_Init 0677                   _Lcd_Port 0F2C   __end_of_Lcd_Write_String 07B1  
      __end_of_tmr0_reload 0F38                 ?_tmr0_init 0070      valor_temperatura@temp 0047  
               ?_valor_lux 004C         __end_of__stringtab 07B7             valor_lux@valor 0051  
             _spiDataReady 0F5E                _min_decenas 0034                   __ptext10 0749  
                 __ptext11 0708                   __ptext20 0FB3                   __ptext12 0F6C  
                 __ptext21 0F2C                   __ptext13 0FE6                   __ptext22 01C8  
                 __ptext14 0677                   __ptext23 0F26                   __ptext15 0788  
                 __ptext24 0F20                   __ptext16 0F9B                   __ptext25 0F55  
                 __ptext17 0F46                   __ptext26 0F38                   __ptext18 0F3F  
                 __ptext27 0F5E                   __ptext19 07D8                   __ptext28 0FCC  
                 __ptext29 0F83                   _cont_100 005C                   _cont_lcd 005B  
                 _init_SPI 0FE6                _sec_decenas 0036               _val_temporal 007B  
         ?_Lcd_Shift_Right 0070                   _spiWrite 0F20                   _pwm_init 0749  
               _INTCONbits 000B                ??_init_UART 003E                _tmr0_reload 0F32  
                 intlevel1 0000           ___lldiv@dividend 0042           ??_spiReceiveWait 0070  
              ??_tmr0_init 003E                  stringcode 07B1                 _OSCCONbits 008F  
                 servo@mov 0074                ??_valor_lux 0050         Lcd_Set_Cursor@temp 0044  
              _temperatura 0029               valor_lux@lux 004C           ___lldiv@quotient 0047  
                 stringdir 07B1                   stringtab 07B1      __end_ofi1_tmr0_reload 0F2C  
               _SSPCONbits 0014  
